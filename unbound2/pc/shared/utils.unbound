(def css $Fullsize ()
	(width = 100%)
	(height = 100%))

(def css $FullsizeAbsolute ()
	(width = 100%)
	(height = 100%)
	(position = "absolute"))

(def css $MiddleAligned ()
	(left = 50%)
	(marginLeft = -50%))

(def css $MiddleVAligned ()
	(top = 50%)
	(marginTop = -50%))
	





(def css $EyeLevelAligned ()
	(extends $MiddleAligned)
	(position = "absolute")
	(top = "{720:360,2160:900}")
	(marginTop = -50%)
)

(def css $MiddleVHAbsolutely ()
	(position = "absolute")
	(left = 50%)
	(top = 50%)
	(marginTop = -50%)
	(marginLeft = -50%)
)

(def css $AlignRight ()
	(position = "absolute")
	(right = 0))

(def css $MiddleAlignedAbsolutely ()
    (extends $MiddleAligned)
    (position = "absolute"))

(def css $MiddleVAlignedAbsolutely ()
    (extends $MiddleVAligned)
    (position = "absolute"))

(def css $Quad ()


)

(def css $MouseDisable ()



)

(def css $InfoLineBoundaries ()
	(marginBottom = 6px)
	(marginTop = 6px))

(def css $InfoBlockHorizontalIndent ()
	(width = 100%)
	(paddingLeft = 12px)
	(paddingRight = 12px)
)
(def css $InfoBlockIndent ()
	(extends $InfoBlockHorizontalIndent)
	(paddingTop = 9px)
	(paddingBottom = 9px)
)

(def css $InfoBlockHorizontalIndentNoWidth ()
	(marginLeft = 12px)
	(marginRight = 12px)
)

(def css $DockPanelMargins ()
	(marginLeft = 13px)
	(marginRight = 13px)
	
)
(def css $InfoBlockIndentNoWidth ()
	(extends $InfoBlockHorizontalIndentNoWidth)
	(marginTop = 9px)
	(marginBottom = 9px)
)

(def css $ShipTechStats ()
	(width = 312px)
	(height = 100%)
	(position = "absolute")
	(top = 32px)
	(right = 10px)
)

(def css $TextInputEnterButton ()
	(position = "absolute")
	(top = 50%)
	(marginTop = -11px)
	(width = 52px)
	(height = 25px)
	(right = 2px)
)

(def css $TextAreaEnterButton ()
	(position = "absolute")
	(bottom = 0px)
	(width = 52px)
	(height = 25px)
	(right = 2px)
)

(def css $None ())

(def css $PxHorizontalCorrection ()
	(paddingLeft = 1px)
	(paddingRight = 1px)
)

(def css $BottomMenu ()	
	(height = 30px)
	(position = "absolute")
	(bottom = 0px)
	(width = 100%)
)

(def element HorizontalDividerTwoPx () layout=true
	(style
		(width = 100%) (height = 2) (backgroundSize = "fill")
		(backgroundImage = 'url:../service_kit/dividers/divider_h.png')
	)
)

(def element DottedHorizontalDivider ()
	(style
		(width = 100%)
		(height = 2)
		(backgroundRepeatX = true)
		(backgroundRepeatY = false)
		(backgroundImage = 'url:../service_kit/dividers/divider_h_secondary.png')
	)
)

(def element VerticalDivider () layout=true
	(style
		(height = "100%") (width = "3px") (backgroundSize = "fill")
		(backgroundImage = 'url:../service_kit/dividers/divider_v.png')
	)
)

(def element TableDivider ()
	(style
		(width = 100%)
		(height = 1px)
		(alpha = 0.05)
	)
)


(def element DottedLine ()
	(style
		(width = 100%)
		(height = 1px)
		(backgroundRepeatX = true)
		(backgroundRepeatY = false)
		(backgroundImage = 'url:../service_kit/dividers/divider_h_dotted.png')
		(alpha = 0.5)
	)
)





(def macro BLUR_MAP()
	(rendererString = blurMeBaby)

	(controller $Animation
		(bindcall play
			duration = 0.15
			to = "{ blurIntensity: 1 }"
			action = "kill"
			easing = "Easing.cubic_out"
			(event "evBlurStartShow")
		)
		(bindcall play 
			duration = 0.1
			to = "{ blurIntensity: 0 }"
			action = "kill"
			easing = "Easing.cubic_out"
			(event "evBlurStartHide")
		)
	)
)

(def macro BLUR_MAP_SCOPE ()
	(event evBlurStartShow)
	(event evBlurStartHide)
)

(def element TooltipSystemBlur () layout=true
	(scope
		(macro BLUR_MAP_SCOPE)
	)

	(class $FullsizeAbsolute)
	(element DeclareBlurLayer)

	(mc mc_blurmap_medium
		(class $FullsizeAbsolute)
		(macro BLUR_MAP)
	)
	
	(mc inner_panel
		(class $FullsizeAbsolute)
		(alpha = 0.5)
	)
)

(def element InfotipSystemBlur () layout=true
	(scope
		(macro BLUR_MAP_SCOPE)
	)
	(class $FullsizeAbsolute)
	(element DeclareBlurLayer)

	(mc mc_blurmap_medium
		(class $FullsizeAbsolute)
		(macro BLUR_MAP)
	)
)

(def element InfotipPinBlurmap () layout=true
	(scope
		(macro BLUR_MAP_SCOPE)
	)
	(mc mc_blurmap_infotip_arrow_vert
		(style (position = "absolute") (width = 22px) (height = 12px))
		(macro BLUR_MAP)
	)
)

(def element BlurBackgroundCommon (_map:str, _isFramed:bool = true)
	(scope
		(macro HIGH_CONTRAST_DATA_SCOPE)
	)
	(class $Fullsize)
	(block
		(class $FullsizeAbsolute)
		(controller $Instance renderer='DeclareBlurLayer'
			(bind enabled "!isHighContrast")
		)
	)
	(block
		(class $Fullsize)
		(controller $Instance renderer='BlurMapCustom'
			(bind enabled "!isHighContrast")
			(args _map = "_map")
		)
	)
	(block
		(bind visible "isHighContrast")
		(class $FullsizeAbsolute)
		(style (backgroundImage = "'url:../service_kit/panel_backgrounds/hint_panel_high_contrast.png'") (scale9grid = 3))
	)
	(block
		(bind visible "_isFramed")
		(class $FullsizeAbsolute)
		(style (backgroundImage = 'url:../panel_background/selection_panel.png') (scale9grid = 2) (alpha = 0.1))
	)
)

(def element BlurMapCustom (_map:str)
	(scope
		(macro BLUR_MAP_SCOPE)
	)
	(class $FullsizeAbsolute)
	(mouseEnabled = false)
	(mouseChildren = false)
	(mc "_map"
		(class $FullsizeAbsolute)
		(macro BLUR_MAP)
	)
)

(def element BlurMapModalWindowCustom (_map:str, _hideTime:number = 0.3, _hideDelay:number = 0, _blurIntencity:number = 1)
	(scope
		(macro BLUR_MAP_SCOPE)
	)
	(class $FullsizeAbsolute)
	(mouseEnabled = false)
	(mouseChildren = false)
	(mc "_map"
		(blurIntensity = "_blurIntencity")
		(class $FullsizeAbsolute)
		
		(rendererString = blurMeBaby)

		(controller $Animation
			(bindcall play
				duration = 0.15
				to = "{ blurIntensity: _blurIntencity }"
				action = "kill"
				easing = "Easing.quad_out"
				watch = false
				on = 'addedToStage'
				(event "evBlurStartShow")
			)
			(bindcall play 
				delay = "_hideDelay"
				duration = "_hideTime"
				to = "{ blurIntensity: 0 }"
				action = "kill"
				easing = "Easing.quad_in"
				watch = false
				(event "evBlurStartHide")
			)
		)
	)
)

(def element BlurMapLow ()
	(scope
		(macro BLUR_MAP_SCOPE)
	)
	(style (hitTest = "false"))
	(class $FullsizeAbsolute)

	(mc mc_blurmap5
		(class $FullsizeAbsolute)
		(macro BLUR_MAP)
	)

	(mc inner_panel
		(class $FullsizeAbsolute)
		(style (alpha = "0.2"))
	)
)

(def element DeclareBlurLayer ()
	(scope
		(macro GET_PREF 'isBlurOptionEnabled' "'graphics.GUI.blur'")
	)
	(style (position = "absolute"))

	(controller $Instance layout=true
		(bind enabled "isBlurOptionEnabled")
		(exprs
			(mc transparentPixel
				(rendererString = blurLayer)
			)
		)
	)
)


