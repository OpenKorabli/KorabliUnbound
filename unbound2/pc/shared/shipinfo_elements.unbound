(def element ShipLevelNM (	_levelIcon:str='', _alpha:number=1, _colorTransform:dict="CT_NONE",
							_levelRome:str='', _fontClass:str='$TextDefaultBoldNM',
							_textColor:number="SC.Ui_styles.SERVICE_COLORS.WHITE", _levelIconSize:number=19px)
	(scope
		(var isShowLevelIcon:bool = "_levelIcon.length > 0")
		(var shipLevelText:str = "(isShowLevelIcon ? '' : _levelRome) + ' '")
	)

	(style (flow = "horizontal") (align = "middle"))
	(bind alpha "_alpha")

	
	(block
		(style (height = 100%) (align = "middle"))
		(controller $Instance renderer='LevelIconNM'
			(bind enabled "isShowLevelIcon")
			(args
				_levelIcon		= "_levelIcon"
				_colorTransform	= "_colorTransform"
				_iconSize = "_levelIconSize"
			)
		)
	)
	
	(tf
		(bind class "_fontClass")
		(style (wordWrap = false) (bind textColor "_textColor"))
		(bind text "shipLevelText")
	)
)

(def element LevelIconNM (_colorTransform:gfx="CT_NONE", _levelIcon:str='', _iconSize:number=19px)
	(style
		(bind backgroundImage "'swf:../service_kit/ship_classes_svg/ship_classes_svg.swf:icon_tier_'+ (_levelIcon ? _levelIcon : 'special')")
		(bind width "_iconSize")
		(bind height "_iconSize")
		(backgroundSize = "cover")
	)
	(bind colorTransform "_colorTransform")
)

(def element ShipIcon (	_shipType:str, _isSpecial:bool=false, _isFarming:bool=false, _isElite:bool=false, _isEnemy:bool=false, _isKilled:bool=false,
						_isWhite:bool=false, _isDivision:bool=false, _isTeamKiller:bool=false, _isAlly:bool=false, _hideUpgradableStatus:bool=false, _iconSize:number = 27px)
	(scope
		(var upgradable:str = "	_hideUpgradableStatus 	? '' :
								_isSpecial				? '_special' :
								_isFarming				? '_premium' :
								_isElite				? '_elite'
														: ''")

		(var state:str = "		_isEnemy	?	_isKilled		?	SC.Ui_styles.SHIP_CLASSES_STATE.ENEMY_SUNK :
												_isWhite		?	SC.Ui_styles.SHIP_CLASSES_STATE.ENEMY_WHITE
																:	SC.Ui_styles.SHIP_CLASSES_STATE.ENEMY
											:	_isKilled		?	SC.Ui_styles.SHIP_CLASSES_STATE.SUNK :
												_isDivision		?	SC.Ui_styles.SHIP_CLASSES_STATE.DIVISION :
												_isTeamKiller	?	SC.Ui_styles.SHIP_CLASSES_STATE.TEAMKILLER :
												_isAlly			?	SC.Ui_styles.SHIP_CLASSES_STATE.ALLY 
																:	SC.Ui_styles.SHIP_CLASSES_STATE.DEFAULT")

		(var isDefault:bool = "state == SC.Ui_styles.SHIP_CLASSES_STATE.DEFAULT")
		(var iconPath:str = "isDefault	? 'swf:../service_kit/ship_classes_svg/ship_classes_svg.swf:icon_' + state + '_' + toLower(_shipType) + upgradable
										: 'url:../service_kit/ship_classes/icon_' + state + '_' + toLower(_shipType) + upgradable + '.png'")
	)
	(style (bind width "_iconSize") (bind height "_iconSize"))
	
	(block
		(class $Fullsize)
		(style
			(marginTop = -1px)
			(bind backgroundImage "iconPath")
			(backgroundSize = "cover")
		)
	)
)

(def element ShipLineItemNM (_shipId:number, _withFlag:bool=false, _fontClass:str='$TextDefaultBoldNM',
							_showName:bool=true, _width:str='', _isFullName:bool=false,
							_hideUpgradableStatus:bool=false, _alpha:number=null, _iconSize:number=27px, _levelIconSize:number=19px)
	(scope
		(var shipEntity:gfx =	"$datahub.getPrimaryEntity(CC.ship, _shipId)")
		(var upgradableShipInfo:gfx = "shipEntity && shipEntity.hasComponent(CC.upgradableShipInfo) ? shipEntity.upgradableShipInfo : null" (event "shipEntity.evAdded") (event "shipEntity.evRemoved"))

		(var nameIDS:str = "shipEntity	? toUpper(tr(shipEntity.ship.nameIDS + (_isFullName ? '_FULL' : '')))
										: ''")
		(var flagName:str = "shipEntity ? shipEntity.ship.flagName : ''" (event "shipEntity.ship.evCurrentFlagChanged"))
		(var levelRome:str = "shipEntity ? shipEntity.ship.levelRome : ''" (event "shipEntity.ship.evUpdate"))
		(var levelIcon:str = "shipEntity ? shipEntity.ship.levelIcon : ''" (event "shipEntity.ship.evCurrentSkinChanged"))
		
		(var showFlag:bool = "flagName != SC.Common.NATION.EVENTS && _withFlag")

		(var shipType:str = "shipEntity ? shipEntity.ship.subtype : ''" (event "shipEntity.ship.evUpdate"))
		(var isSpecial:bool = "shipEntity ? shipEntity.ship.uiSpecial : false" (event "shipEntity.ship.evUpdate"))
		(var isFarming:bool = "shipEntity ? shipEntity.ship.isFarming : false" (event "shipEntity.ship.evUpdate"))
		(var isElite:bool = "upgradableShipInfo ? !_hideUpgradableStatus && upgradableShipInfo.isElite : false" (event "upgradableShipInfo.evUpdate"))

		(var textColor:number = "	_hideUpgradableStatus	? SC.Ui_styles.SERVICE_COLORS.WHITE :
									isFarming || isSpecial	? SC.Ui_styles.SERVICE_COLORS.YELLOW
															: SC.Ui_styles.SERVICE_COLORS.WHITE")
														
		(var textAlpha:number = "	_alpha											? _alpha :
									textColor == SC.Ui_styles.SERVICE_COLORS.YELLOW	? 1
																					: TA")
		(var iconColorTransform:dict = "textColor == SC.Ui_styles.SERVICE_COLORS.YELLOW	? COLOR_TRANSFORM_WHITE_TO_YELLOW
																						: {}")
	)
	(style
		(flow = "horizontal")
		(align = "middle")
		(bind width "_width ? _width : auto")
	)

	(block
		(bind visible "showFlag")
		(style (marginRight = "S") (marginTop = -10px) (marginBottom = -11px))
		(controller $Instance renderer='NationFlagsTiny'
			(bind enabled "showFlag")
			(args
				_shipCountry =	"flagName"
				_iconSize = "_iconSize"
			)
		)
	)

	(block
		(style
			(marginTop = "-S")
			(marginBottom = -10px)
			(marginLeft = -5px)
			(bind marginRight "_showName ? XS : 3")
			(bind alpha "_alpha ? _alpha : 1")
		)
		(element ShipIcon
			_shipType = "shipType"
			_isSpecial = "isSpecial"
			_isFarming = "isFarming"
			_isElite = "isElite"
			_hideUpgradableStatus = "_hideUpgradableStatus"
			_iconSize = "_iconSize"
		)
	)

	(block
		(style
			(bind marginLeft "levelIcon.length > 0 ? -XS : 0")
			(bind marginRight "levelIcon.length > 0 ? -1 : 0")
		)
		(element ShipLevelNM
			_levelIcon =		"levelIcon"
			_colorTransform =	"iconColorTransform"
			_levelRome =		"levelRome"
			_alpha =			"textAlpha"
			_fontClass =		"_fontClass"
			_textColor =		"textColor"
			_levelIconSize =	"_levelIconSize"
		)
	)

	(tf
		(bind visible "_showName")
		(bind class "_fontClass")
		(style
			(wordWrap = false)
			(marginLeft = "XXS")
			(bind textColor "textColor")
			(bind width "_width ? 100% : auto")
			(elideMode = true)
			(bind alpha "textAlpha")
		)
		(bind text "_showName ? nameIDS : ''")
	)
)

(def constant SHIP_SCALE_MAP "{		SC.Ui_styles.SIZE.SMALL:		0.4,
									SC.Ui_styles.SIZE.MEDIUM:		0.5,
									SC.Ui_styles.SIZE.LARGE:		0.6,
									SC.Ui_styles.SIZE.EXTRA_LARGE:	0.8 }")

(def element ShipImage (_shipId:number, _size:number="SC.Ui_styles.SIZE.MEDIUM", _hasWater:bool=false, _hasSmoke:bool=false)
	(scope
		(var shipEntity:gfx = "$datahub.getPrimaryEntity(CC.ship, _shipId)")
		(var shipInfo:gfx = "shipEntity.ship")
		(var pathPreview:str = "shipInfo.pathPreview" (event "shipInfo.evCurrentSkinChanged") (event "shipInfo.evUpdate"))

		(var isSpecial:bool = "shipInfo.uiSpecial" (event "shipInfo.evUpdate"))
		(var isFarming:bool = "shipInfo.isFarming" (event "shipInfo.evUpdate"))
		(var smokeColorTransform:dict = "isSpecial || isFarming ? {redOffset: 0, greenOffset: -25, blueOffset: -93} : CT_NONE")
		(var shipScale:number = "SHIP_SCALE_MAP[_size]")
	)
	(style (bind scaleX "shipScale") (bind scaleY "shipScale"))

	(block
		(style
			(alpha = 0.3)
			(top = "-LS")
			(marginLeft = -15%)
			(position = "absolute")
			(scaleX = 1.2)
			(scaleY = 1)
		)

		(controller $Instance renderer='ShipImageSmoke'
			(bind enabled "_hasSmoke")
			(args
				_smokeColorTransform = "smokeColorTransform"
			)
		)
	)

	(block
		(style
			(minWidth = 130px)
			(minHeight = 220px)
			(align = "center|bottom")
		)

		(block
			(style
				(bind backgroundImage "'url:' + pathPreview")
				(backgroundSize = "autosize")
				(hitTest = false)
			)
		)

		(block
			(bind visible "_hasWater")
			(style
				(width = 100%)
				(height = 1px)
				(align = "center|middle")
				(marginTop = "-MS")
				(marginLeft = -15px)
			)

			(block	
				(style
					(width = 450px)
					(height = 115px)
					(bind backgroundImage "_hasWater ? 'url:../service_kit/ship_stereotype/ship_wave.png' : ''")
				)
			)
		)
	)
)

(def element ShipImageSmoke (_smokeColorTransform:dict)
	(style
		(backgroundImage = 'url:../animations/spine/battlepass/bp_ship_reward_anim/bp_ship_reward_anim.skel')
		(backgroundSize = "autosize")
	)
	(bind colorTransform "_smokeColorTransform")
	(controller $Spine)
)

(def element ShipClassLineItemNM (_shipId:number = 0, _fontClass:str = '$TextDefaultNM', _width:number = 0)
	(scope
		(macro PULL_SHIP_SCOPE "_shipId" "'shipEntity'" "'shipInfo'")

		(var isSupership:bool = "shipInfo.level == SC.Ships.SHIP_LEVELS.SUPER_SHIP")
		(var superShipPostfix:str = "isSupership ? '_LEGENDARY' : ''")
		(var shipClass:str = "tr(toUpper('IDS_' + shipInfo.subtype + superShipPostfix))")
		(var shipClassTextColor:number = "shipInfo.isFarming || shipInfo.uiSpecial ? SC.Ui_styles.SERVICE_COLORS.YELLOW : SC.Ui_styles.SERVICE_COLORS.WHITE")
		(var textAlpha:number = "shipClassTextColor == SC.Ui_styles.SERVICE_COLORS.YELLOW ? 1 : TC")
		(var shipClassText:str = "isSupership ? shipClass : subst('IDS_SHIP_LEVEL', [], { _shipClass: shipClass, _shipLevel: shipInfo.levelRome })")
	)
	(tf
		(bind class "_fontClass")
		(style
			(bind width "_width" (bind enabled "_width"))
			(bind alpha "textAlpha")
			(bind textColor "shipClassTextColor")
		)
		(bind text "shipClassText")
	)
)

(def element ModalWindowShipPreview (_shipId:number = 0)
	(scope
		(macro PULL_SHIP_SCOPE "_shipId" "'shipEntity'" "'shipInfo'")
		(var shipImageUrl:str = "'url:../ship_previews/' + shipInfo.shortName + '.png'")
	)
	(style (width = 100%) (align = "center"))
	(element ShipImage
		_shipId = "_shipId"
		_size = "SC.Ui_styles.SIZE.EXTRA_LARGE"
		_hasSmoke = true
		_hasWater = true
	)
	(block
		(style (width = 100%) (marginLeft = "M") (marginRight = "M"))
		(element ModalWindowShipPreviewText
			_shipId = "_shipId"
		)
	)
)

(def element ModalWindowShipPreviewText (_shipId:number = 0)
	(style (width = 100%))
	(block
		(style (width = 100%) (marginBottom = "SXS"))
		(element ShipLineItemNM
			_shipId = "_shipId"
			_withFlag = true
			_fontClass = '$TextDefaultBold21NM'
		)
	)
	(element ShipClassLineItemNM
		_shipId = "_shipId"
		_fontClass = '$TextDefault17NM'
	)
)