(def constant LOOTBOX_BANNER_WIDTH 339px)
(def constant ORANGE_FONT_COLOR 0xff9933)
(def macro ACTIVE_ANIMATION_FILTER(_isAnimationActive:expression)
	(filters
		(colorMatrix
			(bind matrix "_isAnimationActive ? [ 0, -80, 0, -20 ] : [0, 0, 0, 0]")
		)
	)
)


(def element Lootboxes ()
	(scope
		(macro STAGE_SIZE)
		(event openLootboxClicked)
		(event evDelayedUpdate)

		(macro HIGH_CONTRAST_DATA_SCOPE)
		(macro SERVER_TIME_SCOPE)
		(macro FEATURES "29")

		(struct windowQueue = PULL_WINDOW_QUEUE())

		(var isLootboxesUnlocked:bool = "feature_29 != 'locked'")

		
		(var dailyLootboxesEntity:dhEntity = "getPrimaryEntity(CC.splitRunTest, 'Return_daily_lootboxes')")
		(var isDailyLootboxesAvailable:bool = "dailyLootboxesEntity.splitRunTest.data.isDailyLootboxesAvailable" (event "dailyLootboxesEntity.splitRunTest.evDataChanged"))

		(var currentBargeBannerEntity:dhEntity = "getSingleEntity(CC.currentBargeBanner)")
		(var currentName:str = "currentBargeBannerEntity.currentBargeBanner.name ?: ''" (event "currentBargeBannerEntity.currentBargeBanner.evChanged"))

		(var bargeBannerEntity:dhEntity = "getPrimaryEntity(CC.bargeBanner, currentName)")
		(var startTime:number = "bargeBannerEntity.bargeBanner.startTime ?: 0")
		(var finishTime:number = "bargeBannerEntity.bargeBanner.finishTime ?: 0")
		(var eventLootboxBannerTillStart:number = "startTime - serverTime")
		(var eventLootboxBannerTillEnd:number = "finishTime - serverTime")
		(var isEventBanner:bool = "bargeBannerEntity != null && eventLootboxBannerTillEnd > 0 && eventLootboxBannerTillStart < 0 && isLootboxesUnlocked")

		(var selfPlayerEntity:gfx = "$datahub.getSingleEntity(CC.accountSelf)")
		(var recruitsStatus:number ="selfPlayerEntity.accountSelf.hasRecruitsStatus" (event "selfPlayerEntity.accountSelf.evHasRecruitsStatusChanged"))
		(var isReferralBanner:bool = "recruitsStatus == SC.Common.HAS_RECRUITS_STATUS.NO")

		(var lootboxStateEntity:gfx = "$datahub.getSingleEntity(CC.lootboxOpeningState)")
		(var lootboxOpenedCount:number = "lootboxStateEntity.lootboxOpeningState.lootboxOpened" (event "lootboxStateEntity.lootboxOpeningState.evLootboxOpenedChanged"))
		(var lastOpenRewardsEntityId:number = "lootboxStateEntity.lootboxOpeningState.lastOpenRewards" (event "lootboxStateEntity.lootboxOpeningState.evLootboxesOpenEnded"))

		(var lootboxEntity:gfx = "$datahub.getSingleEntity(CC.lootboxConfigComponent)")
		(var dailyLootboxesCount:number = "lootboxEntity.lootboxStorageComponent.boughtToday ?: 0" (event "lootboxEntity.lootboxStorageComponent.evUpdate"))
		(var lootboxesInStorage:number = "lootboxEntity.lootboxStorageComponent.inStorage ?: 0" (event "lootboxEntity.lootboxStorageComponent.evUpdate"))
		(var isAnimationActive:bool = "lootboxEntity.lootboxAnimationState.active" (event "lootboxEntity.lootboxAnimationState.evUpdate"))
		(var isAnimationOpen:bool = "lootboxEntity.lootboxAnimationState.open" (event "lootboxEntity.lootboxAnimationState.evUpdate"))
		(var openedLootboxRewardsEntityId:number = "lootboxEntity.lootboxComponent.rewards" (event "lootboxEntity.lootboxComponent.evUpdate"))
		(var openedLootboxRewardsEntity:gfx = "$datahub.getEntity(openedLootboxRewardsEntityId)")
		(var openedLootboxRewards:array = "openedLootboxRewardsEntity.rewardsStack.rewards ?: []" (event "openedLootboxRewardsEntity.rewardsStack.evChanged"))
		(var boxType:number = "lootboxEntity.lootboxComponent.boxType ?: 0" (event "lootboxEntity.lootboxComponent.evUpdate"))

		(var isNotShipPresentation:bool = "windowQueue.queue[windowQueue.queue.length - 1] != 'ModalWindowShipPresentation'")
		(var isBannerBlurVisible:bool = "	!isHighContrast &&
											(isDailyLootboxesAvailable || isReferralBanner || isEventBanner) &&
											isNotShipPresentation")

		
		(var isMatryoshkaLootbox:bool = "isIn(boxType, [4082291632, 4083340208, 4084388784])") 
		(var rewardEntity:gfx = "$datahub.getEntity(openedLootboxRewards[0])")
		(var rewardSubtype:str = "rewardEntity.rewardComponent.subtype ?: ''" (event "rewardEntity.rewardComponent.evUpdate"))
		(var isMatryoshkaReward:bool = "isIn(rewardSubtype, ['PCL200_matryoshka_0', 'PCL201_matryoshka_1', 'PCL202_matryoshka_2'])")
		(var rewardsPosition:number = "	isMatryoshkaLootbox && isMatryoshkaReward	? 20% :
										isMatryoshkaLootbox							? 30%
																					: 35%")

		(struct lootboxArmoryNewTip = PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.LOOTBOXES_ARMORY"))
		(struct lootboxArmoryRepeatNewTip = PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.LOOTBOXES_ARMORY_REPEAT"))
		(struct lootboxOpenNewTip = PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.LOOTBOXES_OPEN"))
		(struct lootboxOpenRepeatNewTip = PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.LOOTBOXES_OPEN_REPEAT"))

		(var armoryTipId:number = "	lootboxArmoryNewTip.isActive		? SC.Context_guiding_tip.TIP_TYPE.LOOTBOXES_ARMORY :
									lootboxArmoryRepeatNewTip.isActive	? SC.Context_guiding_tip.TIP_TYPE.LOOTBOXES_ARMORY_REPEAT
																		: SC.Context_guiding_tip.TIP_TYPE.NONE")
		(var openTipId:number = "	lootboxOpenNewTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.LOOTBOXES_OPEN :
									lootboxOpenRepeatNewTip.isActive	? SC.Context_guiding_tip.TIP_TYPE.LOOTBOXES_OPEN_REPEAT
																		: SC.Context_guiding_tip.TIP_TYPE.NONE")

		(var isStorageEmpty:bool = "lootboxesInStorage == 0")
		(var isOpenBtnEnabled:bool = "!isAnimationActive && !isStorageEmpty")
		(var isOpenALLBtnEnabled:bool = "!isAnimationActive && lootboxesInStorage > 1")
		(var isOpenNContainersLabel:bool = "lootboxesInStorage >= SC.Common.LOOTBOX_CONSTANTS.MAX_MASS_LOOTBOX_OPEN_AMOUNT")
		(var openLootboxesBtnLabel:str = "	isOpenNContainersLabel ? subst(	'IDS_SUBST_PL_OPEN_N_CONTAINERS', [], { count: SC.Common.LOOTBOX_CONSTANTS.MAX_MASS_LOOTBOX_OPEN_AMOUNT },
																			SC.Common.LOOTBOX_CONSTANTS.MAX_MASS_LOOTBOX_OPEN_AMOUNT)
																	: 'IDS_OPEN_ALL_LOOTBOXES'")
		(var requestName:str = "lootboxOpenedCount > 0 ? 'openRewardsModal' : 'closeRewardsModal'")
		(var requestParams:dict = "lootboxOpenedCount > 0	? {	rewardsEntityId: lastOpenRewardsEntityId,
																header: 'IDS_RECEIVED_LOOTBOXES_REWARDS',
																subheader: subst('IDS_OPENED_LOOTBOXES', [], {count: lootboxOpenedCount}, lootboxOpenedCount)}
															: {}")

		(var visibleLootboxesCount:number = "lootboxesInStorage" watch=false)
		(bind visibleLootboxesCount "lootboxesInStorage" watch=false init=false (event "evDelayedUpdate"))
	)
	(macro HIDE_UI_ON_SHIPOVERVIEW)

	(dispatch evDelayedUpdate delay="lootboxesInStorage > 0 ? 0 : 0.22" (bind trigger "lootboxesInStorage"))
	(bindcall externalCall 'inputMapping.onRequest' "[requestName, requestParams]" init=false watch=false (event "lootboxStateEntity.lootboxOpeningState.evLootboxesOpenEnded"))
	(dispatch hideRewards args="{}" dir="EventDirection.DOWN" (event "openLootboxClicked") (bind enabled "isAnimationOpen"))
	
	(style (bind width "stageWidth") (bind height "stageHeight"))

	(block
		(style (marginLeft = "{1280:MS, 1920:XL}") (marginTop = "{720:M, 1080:L}") (bind hitTest "!isAnimationActive"))

		(block
			(bind visible "windowQueue.queue[windowQueue.queue.length - 1] != 'ModalWindowShipPresentation'")
			(class $FullsizeAbsolute)
			(controller $Instance renderer='BlurMap'
				(bind enabled "!isHighContrast && isNotShipPresentation")
				(args
					_blurType = "BLUR_TYPE.LOW_SPHERE"
				)
			)
		)
		(block
			(style (macro ACTIVE_ANIMATION_FILTER "isAnimationActive"))
			(element BackButton
				_text = 'IDS_RETURN_FROM_MODAL_WINDOW_BUTTON'
				_methods = "[{ type: 'inputMapping.onAction', name: 'navigateTo', args: { route: SC.Ui_windows.ROUTE.PORT }}]"
			)
		)
	)
	(block
		(style	(position = "absolute") (top = "{720:MS, 1080:L}") (right = "{1280:MS, 1920:XL}") (bind hitTest "!isAnimationActive")
				(macro ACTIVE_ANIMATION_FILTER "isAnimationActive"))
		(element ModalWindowCloseIcon)
	)
	
	(block
		(style (position = "absolute") (top = 17%) (left = "{1280:MS, 1920:XL}") (width ="LOOTBOX_BANNER_WIDTH"))

		(block

			(class $FullsizeAbsolute)
			(controller $Instance renderer='BlurMap'
				(bind enabled "isBannerBlurVisible")
				(args
					_blurType = "BLUR_TYPE.LOW_SPHERE"
				)
			)
		)
		(block
			(bind visible "isDailyLootboxesAvailable")
			(style (width = 100%) (bind marginBottom "isReferralBanner || isEventBanner ? LS : 0"))
			(controller $Instance renderer='DailyLootboxesInfo'
				(bind enabled "isDailyLootboxesAvailable")
			)
		)
		(block
			(controller $Instance renderer='ReferralSystemBanner'
				(bind enabled "isReferralBanner")
			)
		)
		(block
			(style (bind marginTop "isReferralBanner ? M : MS"))
			(controller $Instance renderer='EventLootboxBanner'
				(bind enabled "isEventBanner")
			)
			(controller $Instance renderer='GuidingTipHub'
				(bind enabled "armoryTipId != SC.Context_guiding_tip.TIP_TYPE.NONE")
				(args
					_tipId =			"armoryTipId"
					_tipPositioning =	"TIP_POSITION_RIGHT"
					_hasFinishButton =	"isStorageEmpty"
					_hasNextButton =	"lootboxesInStorage >= 1"
					_noPointer =		true
					_modalWindowName =	'Dock'
				)
			)
		)
	)
	
	(block
		(style (position = "absolute") (top = 17%) (right = "{1280:MS, 1920:XL}"))
		(block
			(style (position = "absolute") (left = -30px) (width = 380px) (height = 100%))
			(controller $Instance renderer='BlurMapWithLayerContrastPanel'
				(bind enabled "isNotShipPresentation")
				(args
					_blurType = "BLUR_TYPE.LOW_SPHERE"
				)
			)
		)
		(block
			(style (width = 320px) (paddingTop = "MS") (paddingBottom = "L") (align = "center"))
			(block
				(style (width = 100%))
				(controller $Instance renderer='DailyLootboxes'
					(bind enabled "isDailyLootboxesAvailable")
					(args
						_isEventBanner="isEventBanner"
					)
				)
			)
			(block
				(macro LOOTBOX_BUTTONS_ANIMATION "!isStorageEmpty")
				(tf
					(class $TextDefaultBold23NM)
					(style (alpha = "TA"))
					(bind text "subst('IDS_OWNED_LOOTBOXES', [], {lootboxesCount: visibleLootboxesCount}, visibleLootboxesCount)")
				)
			)
			(block
				(macro LOOTBOX_BUTTONS_ANIMATION "isStorageEmpty")
				(style (bind paddingTop "isDailyLootboxesAvailable ? 0 : S"))
				(tf
					(class $TextDefaultBold19NM)
					(style (textColor = "SC.Ui_styles.SERVICE_COLORS.ORANGE"))
					(bind text "toUpper(tr('IDS_YOU_HAVE_NO_LOOTBOXES'))")
				)
			)
			(block
				(macro LOOTBOX_BUTTONS_ANIMATION "!isStorageEmpty")
				(style (marginTop = "MS") (marginBottom = "SXS"))
				(element DefaultButton
					_width = 224px
					_label = 'IDS_OPEN_LOOTBOX'
					_name = 'openLootBox'
					_enabled = "isOpenBtnEnabled"
					_isTransactionBtn = true
					_defaultFocused = true
					_focusIndex = 1
					_dispatchedEv = 'openLootboxClicked'
					_methods = "[	{	type: 'inputMapping.onAction', name: 'LootboxProxy.openLootbox', args: { }},
									{	type: 'inputMapping.onAction',
										name: openTipId == SC.Context_guiding_tip.TIP_TYPE.LOOTBOXES_OPEN_REPEAT ? 'deactivateTipChain': '',
										args: { tip_chain_id: SC.Context_guiding_tip.TIP_CHAIN_ID.LOOTBOXES_REPEAT }}]"
				)
				(controller $Instance renderer='GuidingTipHub'
					(bind enabled "openTipId != SC.Context_guiding_tip.TIP_TYPE.NONE")
					(args
						_tipId =			"openTipId"
						_tipPositioning =	"TIP_POSITION_LEFT"
						_pointerOffset =	"XLL"
						_modalWindowName =	'Dock'
					)
				)
			)
			(block
				(macro LOOTBOX_BUTTONS_ANIMATION "lootboxesInStorage > 1")
				(style (marginBottom = "SXS") (bind hitTest "isOpenALLBtnEnabled"))
				(element DefaultButton
					_width = 224px
					_name = 'openAllLootBoxes'
					_label = "openLootboxesBtnLabel"
					_isTransactionBtn = true
					_focusIndex = 2
					_enabled = "isOpenALLBtnEnabled"
					_methods = "[	{	type: 'inputMapping.onRequest', name: 'showOpenAllLootboxesConfirmation', args: {}},
									{	type: 'inputMapping.onAction',
										name: openTipId == SC.Context_guiding_tip.TIP_TYPE.LOOTBOXES_OPEN_REPEAT ? 'deactivateTipChain': '',
										args: { tip_chain_id: SC.Context_guiding_tip.TIP_CHAIN_ID.LOOTBOXES_REPEAT }}]"
				)
			)
			(block
				(macro LOOTBOX_BUTTONS_ANIMATION "!isStorageEmpty")
				(element DefaultButton
					_width = 224px
					_name = 'openLootBoxTypeManagementPanel'
					_label = 'IDS_OPEN_LOOTBOX_TYPES'
					_type = "SC.Ui_styles.BUTTON_TYPE.SECONDARY"
					_enabled = "isOpenBtnEnabled"
					_isTransactionBtn = true
					_focusIndex = 3
					_methods = "[{type: 'inputMapping.onRequest', name: 'showLootboxTypes', args: {}}]"
				)
			)
		)
	)
	
	(hblock
		(class $MiddleVHAbsolutely)
		(style (bind top "rewardsPosition"))
		(controller $Repeat renderer='LootboxRewardItemAdapter'
			(bind enabled "isAnimationOpen")
			(bind count "openedLootboxRewards.length")
			(args
				_entityId = "openedLootboxRewards[$index]"
			)
		)
	)
)

(def element ReferralSystemBanner ()
	(scope
		(macro MOUSE_HANDLER_SCOPE)
	)
	(style (width = "LOOTBOX_BANNER_WIDTH") (height = 90px) (backgroundImage = 'url:../service_kit/referral_system/lootboxes_referral_banner_bg.jpg'))
	(controller $Tooltip
		(renderer = 'ReferralSystemTooltip')
		(macro DEFAULT_TOOLTIP_BEHAVIOUR)
	)
	(tf
		(class $TextDefaultBold21NM)
		(bind class "'$DropShadowDisabler'")
		(style  (position = "absolute") (width = 100%) (marginTop = "MS") (marginLeft = "MS") (leading = -4) (textColor = 0xEEEEEE))
		(bind text "toUpper(tr('IDS_INVITE_FRIEND'))")
	)
	(block
		(class $FullsizeAbsolute)
		(style (backgroundImage = 'url:../service_kit/panel_backgrounds/white_panel_gradient.png') (scale9grid = 2) (alpha = 0))
		(controller $Animation
			(bindcall play
				duration = 0.15
				from = { alpha: 0 }
				to = { alpha: 0.3 }
				reverse = "!(rollOver && !mouseDown)"
				(bind trigger "rollOver && !mouseDown")
			)
		)
	)
	(macro MOUSE_HANDLER
		_methods = "[{ type: 'inputMapping.onAction', name: 'navigateTo', args: {	route: SC.Ui_windows.ROUTE.PORTAL,
																					data: {url: SC.Ui_windows.GUI_URL.PLAYTOGETHER_IN_GAME} }}]"
		_soundSet = "'default_button'"
	)
)

(def element EventLootboxBanner ()
	(scope
		(macro MOUSE_HANDLER_SCOPE)

		(var currentBargeBannerEntity:gfx = "$datahub.getSingleEntity(CC.currentBargeBanner)")
		(var currentName:str = "currentBargeBannerEntity.currentBargeBanner.name" (event "currentBargeBannerEntity.currentBargeBanner.evChanged"))

		(var bargeBannerEntity:gfx = "$datahub.getPrimaryEntity(CC.bargeBanner, currentName)")
		(var bgImage:str = "bargeBannerEntity.bargeBanner.backgroundImage ?: ''")
		(var sourceUrl:str = "bargeBannerEntity.bargeBanner.url ?: ''")
		(var mainText:str = "bargeBannerEntity.bargeBanner.mainText ?: ''")
		(var tooltipText:str = "bargeBannerEntity.bargeBanner.tooltipText ?: ''")
	)
	(style (width = "LOOTBOX_BANNER_WIDTH") (height = 176px))
	(controller $Tooltip
		(renderer = 'SimpleStatusTooltip')
		(args
			_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT"
			_text = "tooltipText"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR)
	)
	(block
		(class $Fullsize)
		(style (bind backgroundImage "'url:../lootbox_banners/' + bgImage + '.png'"))
	)
	(tf
		(class $TextDefaultBold21NM)
		(style (width = 100%) (position = "absolute") (marginTop = "MS") (marginLeft = "MS") (leading = -4) (textColor = 0xEEEEEE))
		(bind text "toUpper(tr(mainText))")
	)
	(block
		(class $FullsizeAbsolute)
		(mc white_panel_gradient
			(class $FullsizeAbsolute)
			(style (alpha = 0))
			(controller $Animation
				(bindcall play
					duration = 0.15
					from = { alpha: 0 }
					to = { alpha: 0.3 }
					reverse = "!rollOver"
					(bind trigger "rollOver")
				)
			)
		)
	)
	(macro MOUSE_HANDLER
		_methods = "[{ type: 'inputMapping.onRequest', name: 'openMetashop', args: { url: sourceUrl, params: {}, skipURLTranslation: true}}]"
		_soundSet = "'default_button'"
	)
)

(def element DailyLootboxesInfo ()
	(style (width = 100%))
	(tf
		(class $TextDefaultBold21NM)
		(style (alpha = "TA") (marginBottom = "M") (marginTop = "MS"))
		(bind text "toUpper(tr('IDS_DAILY_LOOTBOXES'))")
	)
	(block
		(style (width = 100%) (vgap = "M"))
		(controller $Repeat renderer='RepeatParagraphItemNM'
			(bind count "2")
			(args
				_paragraphText = "'IDS_DAILY_LOOTBOXES_HINT_' + $index"
				_width = "100%"
				_alpha = "TC"
				_leading = -2
				_size = "SC.Ui_styles.SIZE.LARGE"
			)
		)
	)
)

(def element DailyLootboxes (_isEventBanner:bool = false)
	(scope
		(var lootboxEntity:dhEntity = "getSingleEntity(CC.lootboxConfigComponent)")
		(var dropTimeStamp:number = "lootboxEntity.lootboxStorageComponent.dropAt ?: 0" (event "lootboxEntity.lootboxStorageComponent.evUpdate"))
		(var dailyLootboxesCount:number = "lootboxEntity.lootboxStorageComponent.boughtToday ?: 0" (event "lootboxEntity.lootboxStorageComponent.evUpdate"))
		(var lootboxExp:number = "lootboxEntity.lootboxStorageComponent.lootExp ?: 0" (event "lootboxEntity.lootboxStorageComponent.evUpdate"))
		(var lootboxPrices:array = "lootboxEntity.lootboxConfigComponent.prices ?: []" (event "lootboxEntity.lootboxConfigComponent.evUpdate"))
		(var lootboxesInStorage:number = "lootboxEntity.lootboxStorageComponent.inStorage ?: 0" (event "lootboxEntity.lootboxStorageComponent.evUpdate"))
		(var lootboxPricesListCount:number = "lootboxPrices.length")
		(var allDailyLootboxesRecieved:bool = "lootboxPricesListCount == dailyLootboxesCount")
		(var curLootboxPrice:number = "allDailyLootboxesRecieved ? lootboxPrices[0] : lootboxPrices[dailyLootboxesCount]")
		(var finalPrice:number = "curLootboxPrice - lootboxExp")

		(macro SERVER_TIME_SCOPE)
		(macro COUNTDOWN_SCOPE "'countdownText'" "dropTimeStamp" "'HH:mm:ss'")

		(struct lootboxDailyNewTip = PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.LOOTBOXES_DAILY"))
		(struct lootboxDailyRepeatNewTip = PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.LOOTBOXES_DAILY_REPEAT"))
		(var dailyTipId:number = "	lootboxDailyNewTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.LOOTBOXES_DAILY :
									lootboxDailyRepeatNewTip.isActive	? SC.Context_guiding_tip.TIP_TYPE.LOOTBOXES_DAILY_REPEAT
																		: SC.Context_guiding_tip.TIP_TYPE.NONE")
	)
	(style (width = 100%) (align = "center"))
	
	(hblock
		(style (marginBottom = "XXS") (backgroundColor = "NO_COLOR"))
		(tf
			(class $TextDefaultBold50NM)
			(style (marginRight = "XS"))
			(bind text "formatSeparator(lootboxExp)")
		)
		(block
			(style (width = 44px) (height = 44px) (backgroundImage = 'url:../service_kit/currencies/icon_exp_large.png'))
		)
		(controller $Tooltip
			(renderer = 'SimpleStatusTooltip')
			(args
				_text = 'IDS_LOOTBOX_EXP_HINT'
			)
			(macro DEFAULT_TOOLTIP_BEHAVIOUR)
		)
	)
	(tf
		(class $TextDefault19NM)
		(style (marginBottom = "MS") (alpha = "TA"))
		(text = 'IDS_AVAILABLE_EXP_FOR_LOOTBOXES')
	)
	(block
		(style (width = 100%) (marginBottom = 68px))
		(element HorizontalDividerTwoPx)
		(block
			(style (position = "absolute") (width = 100%))
			(element HorizontalDividerTwoPx)
		)
	)

	
	(hblock
		(style (marginBottom = "LS"))
		(controller $Repeat renderer='LootboxProgressBarWithLootbox'
			(bind count "lootboxPricesListCount")
		)
		(controller $Instance renderer='GuidingTipHub'
			(bind enabled "dailyTipId != SC.Context_guiding_tip.TIP_TYPE.NONE")
			(args
				_tipId =			"dailyTipId"
				_tipPositioning =	"TIP_POSITION_LEFT"
				_offsetX =			"M"
				_noPointer =		true
				_hasNextButton =	"lootboxesInStorage >= 1 || _isEventBanner"
				_hasFinishButton =	"lootboxesInStorage == 0 && !_isEventBanner"
				_modalWindowName =	'Dock'
			)
		)
	)
	(hblock
		(bind visible "!allDailyLootboxesRecieved")
		(tf
			(class $TextDefaultNM)
			(style (marginRight = "S") (alpha = "TA"))
			(text = 'IDS_EXP_TO_NEXT_LOOTBOX')
		)
		(element PriceTag _priceInfo = "{ currency: SC.Common.CURRENCIES.XP, finalPrice: finalPrice }")
	)
	(block
		(bind visible "allDailyLootboxesRecieved")
		(style (align = "center"))
		(tf
			(class $TextDefaultNM)
			(style (marginBottom = "SXS") (textColor = "ORANGE_FONT_COLOR"))
			(text = 'IDS_LOOTBOX_PURCHASE_WILL_BE_AVAILABLE_AFTER')
		)
		(tf
			(class $TextDefaultBoldNM)
			(style (textColor = "ORANGE_FONT_COLOR"))
			(bind text "countdownText")
		)
	)

	(block
		(style (width = 100%) (marginTop = "MS") (marginBottom = "L"))
		(element HorizontalDividerTwoPx)
		(block
			(style (position = "absolute") (width = 100%))
			(element HorizontalDividerTwoPx)
		)
	)
)

(def element LootboxProgressBarWithLootbox ()
	(scope
		(var lootboxEntity:gfx = "$datahub.getSingleEntity(CC.lootboxConfigComponent)")
		(var lootboxExp:number = "lootboxEntity.lootboxStorageComponent.lootExp ?: 0" (event "lootboxEntity.lootboxStorageComponent.evUpdate"))
		(var dailyLootboxesCount:number = "lootboxEntity.lootboxStorageComponent.boughtToday ?: 0" (event "lootboxEntity.lootboxStorageComponent.evUpdate"))
		(var lootboxPrices:array = "lootboxEntity.lootboxConfigComponent.prices ?: []" (event "lootboxEntity.lootboxConfigComponent.evUpdate"))

		(var expToLootbox:number = "lootboxPrices[$index] - lootboxExp")
		(var rawLootboxProgress:number =	"	$index == 0 ?	lootboxExp / lootboxPrices[0] :
												$index == 1 ?	(lootboxExp - lootboxPrices[0]) / (lootboxPrices[1] - lootboxPrices[0])
															:	(lootboxExp - lootboxPrices[1]) / (lootboxPrices[2] - lootboxPrices[1])")
		(var curLootboxProgress:number = "lootboxExp == lootboxPrices[$index] || lootboxExp > lootboxPrices[$index]	? 1
																													: rawLootboxProgress")
		(var progressBarWidth:array = "[55, 95, 135]")
		(var isReceived:bool = "$index < dailyLootboxesCount")
		(var lootboxIcon:str = "isReceived	? 'url:../service_kit/port_banner/icon_banner_container_received.png'
											: 'url:../service_kit/port_banner/icon_banner_container_lock.png'")
	)

	(element DefaultProgressBar
		_width = "progressBarWidth[$index]"
		_height = 9px
		_progress = "curLootboxProgress"
	)
	(block
		(style (position = "absolute") (left = "-S") (marginTop = "M"))
		(controller $Instance renderer='PriceTag'
			(bind enabled "$index == 0")
			(args
				_priceInfo="{finalPrice: 0, currency: SC.Common.CURRENCIES.XP}"
			)
		)
	)
	(block
		(style (position = "absolute") (top = "-LS") (right = -16px) (width = 32px) (height = 32px) (bind backgroundImage "lootboxIcon"))
		(controller $Tooltip
			(renderer='LootboxDailyTooltip')
			(args
				_isReceived = "isReceived"
				_progress = "curLootboxProgress"
				_expToLootbox = "expToLootbox"
			)
			(macro DEFAULT_TOOLTIP_BEHAVIOUR)
		)
	)
	(block
		(style (position = "absolute") (left = 75%) (marginTop = "M"))
		(element PriceTag _priceInfo="{ finalPrice: lootboxPrices[$index], currency: SC.Common.CURRENCIES.XP }")
	)
)

(def element LootboxDailyTooltip (_isReceived:bool = false, _progress:number = 0, _expToLootbox:number = 0)
	(style (width = 320px) (hitTest = false))
	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)

	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(element TooltipSystemHeaderWithIconAndText
			_imageUrl='url:../reward_icons/PCL207_dailylootbox.png'
			_imageWidth=80
			_imageHeight=80
			_headerText='IDS_REWARD_LOOTBOX_PCL207_DAILYLOOTBOX_TITLE_SHORT'
			_subheaderText='IDS_LOOTBOX'
		)
		(element TooltipSystemHorizontalDivider)

		(element TOOLTIP_SYSTEM_ELEMENTS_GROUP _isEnabled="!_isReceived"
			(element TOOLTIP_SYSTEM_GROUP_ELEMENT _isEnabled="!_isReceived"
				(controller $Instance renderer='TooltipSystemPriceTagLine'
					(bind enabled "!_isReceived")
					(args
						_title = 'IDS_EXP_LEFT'
						_priceInfo = "{finalPrice: _expToLootbox, currency: SC.Common.CURRENCIES.XP}"
					)
				)
			)
			(element TOOLTIP_SYSTEM_GROUP_ELEMENT _isEnabled="!_isReceived"
				(controller $Instance renderer='DefaultProgressBar'
					(bind enabled "!_isReceived")
					(args
						_progress = "_progress"
					)
				)
			)
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "_isReceived")
				(args
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.CHECK"
					_text = 'IDS_LOOTBOX_GOT'
				)
			)
		)
	)
)

(def element LootboxRewardItemAdapter (_entityId:number = 0)
	(scope
		(event hideRewards)

		(macro HIGH_CONTRAST_DATA_SCOPE)
		(var rewardEntity:gfx = "$datahub.getEntity(_entityId)")
		(var rewardComponent:gfx = "rewardEntity.rewardComponent")
		(var rewardName:str = "rewardComponent.name ?: ''")
	)
	(bind name "'rewardItem_' + $index + '_' + rewardName")
	(style (marginRight = "S") (marginLeft = "S") (alpha = 0) (visualOffsetY = 35px))
	(block
		(class $FullsizeAbsolute)
		(controller $Instance renderer='BlurMap'
			(bind enabled "!isHighContrast")
			(args
				_blurType = "BLUR_TYPE.LOW_SPHERE"
			)
		)
	)
	(element RewardItem _reward = "rewardComponent")

	(controller $Animation
		(bindcall play
			delay = "0.1 + $index*0.23"
			duration = 0.25
			from = "{ alpha: 0, visualOffsetY: 35px }"
			to = "{ alpha: 1, visualOffsetY: 0px }"
			action = "kill"
			on = 'addedToStage'
		)
		(bindcall play
			duration = 0.15
			from = "{ alpha: 1, visualOffsetY: 0px }"
			to = "{ alpha: 0, visualOffsetY: 20px }"
			(event "hideRewards")
		)
	)
)

(def macro LOOTBOX_BUTTONS_ANIMATION (_trigger:expression)
	(alpha = "_trigger ? 1 : 0")
	(visible = "_trigger")
	(style (visualOffsetY = "_trigger ? 0px : 5px"))

	(controller $Animation
		(bindcall play	delay = 0.2
						duration = 0.12
						from = { alpha: 0, visualOffsetY: 5px, visible: false }
						to = { alpha: 1, visualOffsetY: 0px, visible: true }
						action = "kill"
						(bind enabled "_trigger")
		)
		(bindcall play	duration = 0.12
						from = { alpha: 1, visualOffsetY: 0px, visible: true }
						to = { alpha: 0, visualOffsetY: -5px, visible: false }
						action = "kill"
						(bind enabled "!_trigger")
		)
	)
)
