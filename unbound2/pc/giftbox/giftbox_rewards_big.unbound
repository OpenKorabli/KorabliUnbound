(def constant REWARD_BIG_MARGINS "{720:8, 1080:16}")
(def constant REWARD_BIG_MARGINS_IMAGE "{720:0, 1080:16}")

(def constant RENDER_REWARD_ITEMS_BIG	{	'Crew':						'RewardItemBigCrew',
											'Exterior':					'RewardItemBigExterior',
											'Ship':						'RewardItemBigShip',
											'Lootbox':					'RewardItemBigLootbox',
											'Modernization':			'RewardItemBigCommon',
											'Ability':					'RewardItemBigCommon',
											'Resource':					'RewardItemBigCommon',
											'ResourceCoeff':			'RewardItemBigCommon',
											'Unit':						'RewardItemBigCommon',
											'Reward':					'RewardItemBigCommon',
											'Token':					'RewardItemBigCommon',
											'Exchange':					'RewardItemBigCommon',
											'Collection':				'RewardItemBigCommon',
											'Unlock':					'RewardItemBigCommon',
											'DogTag':					'RewardItemBigDogtag',
											'SSETask':					'RewardItemBigCommon',
											'DummyReward':				'RewardItemBigDummy',
											'ShipComponent':			'RewardItemShipComponent',
											'ShipMaterial': 			'RewardItemShipMaterial',
											'StrategicActionsBonus':	'RewardItemBigCommon'})

(def constant RENDER_REWARD_RESOURCE_ITEMS_BIG	{	'exp': 'RewardResourcesBig',
													'gold': 'RewardResourcesBig',
													'steel': 'RewardResourcesBig',
													'coal': 'RewardResourcesBig',
													'molybdenum': 'RewardResourcesBig',
													'brass': 'RewardResourcesBig',
													'saltpeter': 'RewardResourcesBig',
													'eventum_1': 'RewardResourcesBig',
													'eventum_2': 'RewardResourcesBig',
													'eventum_3': 'RewardResourcesBig',
													'eventum_4': 'RewardResourcesBig',
													'eventum_5': 'RewardResourcesBig',
													'eventum_6': 'RewardResourcesBig',
													'eventum_7': 'RewardResourcesBig',
													'eventum_8': 'RewardResourcesBig',
													'eventum_9': 'RewardResourcesBig',
													'eventum_10': 'RewardResourcesBig',
													'eventum_cn': 'RewardResourcesBig',
													'clientum_1': 'RewardResourcesBig',
													'clientum_2': 'RewardResourcesBig',
													'santium': 'RewardResourcesBig',
													'dockyardum_1': 'RewardResourcesBig',
													'dockyardum_2': 'RewardResourcesBig',
													'freeXP': 'RewardResourcesBig',
													'credits': 'RewardResourcesBig',
													'eliteXP': 'RewardResourcesBig',
													'accPoints': 'RewardResourcesBig',
													'crewXP': 'RewardResourcesBig',
													'clanResource': 'RewardResourcesBig',
													'premium': 'RewardResourcePremiumBig',
													'wows_premium': 'RewardResourcePremiumBig',
													'slots': 'RewardResourceSlotBig',
													'creditsCoeff': 'RewardResourcesCoeffBig',
													'shipCrewFreeXpCoeff': 'RewardResourcesCoeffBig',
													'paragonXP': 'RewardResourcesBig',
													'recruitment_points': 'RewardResourcesBig',
													'snowflake': 'RewardResourcesBig',
													'bpPoints': 'RewardResourcesBig' })

(def constant RENDER_REWARD_TITLE	{	'Crew':				'RewardCrewTitle',
										'Exterior':			'RewardExteriorTitle',
										'Ship':				'RewardShipTitle',
										'Lootbox':			'RewardLootboxTitle',
										'Modernization':	'RewardTitleCommon',
										'Ability':			'RewardTitleCommon',
										'Resource':			'RewardTitleCommon',
										'ResourceCoeff':	'RewardTitleCommon',
										'Unit':				'RewardTitleCommon',
										'Reward':			'RewardTitleCommon',
										'Token':			'RewardTitleCommon',
										'Exchange':			'RewardTitleCommon',
										'Collection':		'RewardTitleCommon',
										'Unlock':			'RewardTitleCommon',
										'DogTag':			'RewardDogTagTitle',
										'SSETask':			'RewardTitleCommon',
										'DummyReward':		'RewardTitleCommon',
										'ShipComponent':	'RewardShipComponentTitle',
										'ShipMaterial': 	'RewardShipMaterialTitle'})

(def constant RENDER_REWARD_RESOURCE_TITLE	{	'exp': 'RewardResourceTitle',
												'gold': 'RewardResourceTitle',
												'steel': 'RewardResourceTitle',
												'coal': 'RewardResourceTitle',
												'molybdenum': 'RewardResourceTitle',
												'brass': 'RewardResourceTitle',
												'saltpeter': 'RewardResourceTitle',
												'eventum_1': 'RewardResourceTitle',
												'eventum_2': 'RewardResourceTitle',
												'eventum_3': 'RewardResourceTitle',
												'eventum_4': 'RewardResourceTitle',
												'eventum_5': 'RewardResourceTitle',
												'eventum_6': 'RewardResourceTitle',
												'eventum_7': 'RewardResourceTitle',
												'eventum_8': 'RewardResourceTitle',
												'eventum_9': 'RewardResourceTitle',
												'eventum_10': 'RewardResourceTitle',
												'eventum_cn': 'RewardResourceTitle',
												'clientum_1': 'RewardResourceTitle',
												'clientum_2': 'RewardResourceTitle',
												'santium': 'RewardResourceTitle',
												'dockyardum_1': 'RewardResourceTitle',
												'dockyardum_2': 'RewardResourceTitle',
												'freeXP': 'RewardResourceTitle',
												'credits': 'RewardResourceTitle',
												'eliteXP': 'RewardResourceTitle',
												'accPoints': 'RewardResourceTitle',
												'crewXP': 'RewardResourceTitle',
												'clanResource': 'RewardResourceTitle',
												'premium': 'RewardResourceTitle',
												'wows_premium': 'RewardResourceTitle',
												'slots': 'RewardResourceTitle',
												'paragonXP': 'RewardResourceTitle',
												'recruitment_points': 'RewardResourceTitle',
												'snowflake': 'RewardResourceTitle',
												'bpPoints': 'RewardResourceTitle' })


(def element RewardItemBig (_rewardEntityId:number, _isTitleVisible:bool = true)
	(scope
		(var rewardEntity:gfx = "$datahub.getEntity(_rewardEntityId)")
		(var rewardComponent:gfx = "rewardEntity ? rewardEntity.rewardComponent : null")
		(var rewardItem:dict = "rewardComponent	?	{	id:			rewardEntity ? rewardComponent.id : null,
														amount:		rewardEntity ? rewardComponent.amount : null,
														name:		rewardEntity ? rewardComponent.name : null,
														type:		rewardEntity ? rewardComponent.type : null,
														subtype:	rewardEntity ? rewardComponent.subtype : null,
														params:		rewardEntity ? rewardComponent.params : null,
														reasons:	rewardEntity ? rewardComponent.reasons : null,
														isPRMP:		rewardEntity ? rewardComponent.isPRMP : null}
												: null")
		(var type:str = "rewardComponent ? rewardComponent.type : null")
		(var selectedRenderRewardItem:str = "type ? RENDER_REWARD_ITEMS_BIG[rewardEntity.rewardComponent.type] : ''")
		(var canRender:bool = "rewardItem && selectedRenderRewardItem")
	)
	(block
		(style (width = 328px) (align = "center"))
		(controller $Instance
			(bind enabled "canRender")
			(bind renderer "selectedRenderRewardItem")
			(args
				_rewardItem = "rewardItem"
				_isTitleVisible = "_isTitleVisible"
			)
		)
	)
)

(def element RewardItemBigCrew (_rewardItem:dict, _isTitleVisible:bool = true)
	(scope
		(struct crewHistory =	PULL_CREW_HISTORY_INFO(_crewHistoryId = "_rewardItem.params.primaryKey"))

		(var crewClassificationId:number =	"crewHistory.component.classificationId ?: 0")
		(var crewName:str =					"crewHistory.component.fullName ?: 'IDS_NO_CREW'")
		(var isPersonCrew:bool =			"crewClassificationId != SC.Common.COMMANDER_CLASSIFICATIONS.COMMON")
	)

	(style (align = "center") (width = 100%))

	(block
		(style (width = 256px) (height = 256px) (backgroundImage = 'url:../reward_icons/big/Crew_bg.png'))
	)

	(block
		(style (position = "absolute") (top = 60px) (left = 91px))

		(element CrewStereotype
			_crewHistoryId =	"_rewardItem.params.primaryKey"
			_size =				"SIZE.MEDIUM"
		)
	)

	(block
		(class $FullsizeAbsolute)
		(style (left = 36px) (hitTest = false) (backgroundImage = 'url:../reward_icons/big/Crew_overlay.png'))
	)

	(block
		(bind visible "_isTitleVisible")
		(style (align = "center") (marginTop = "REWARD_BIG_MARGINS_IMAGE"))
		(tf
			(class $TextDefault21NM)
			(style (alpha = "TA"))
			(bind text "'IDS_REWARD_' + toUpper(_rewardItem.subtype) + '_TITLE'")
		)
		(tf
			(bind visible "isPersonCrew")
			(class $TextDefault21NM)
			(style (marginTop = "MS") (alpha = "TA") )
			(bind text "crewName")
		)
	)
)

(def element RewardItemBigShip (_rewardItem:dict, _isTitleVisible:bool = true, _hasSmoke:bool = true)
	(style (align = "center"))

	(element ShipImage
		_shipId = "_rewardItem.id"
		_size = "SC.Ui_styles.SIZE.EXTRA_LARGE"
		_hasWater = true
		_hasSmoke = "_hasSmoke"
	)

	(block
		(style (marginTop = "REWARD_BIG_MARGINS"))
		(controller $Instance renderer='ShipLineItemNM'
			(bind enabled "_isTitleVisible")
			(args
				_shipId = "_rewardItem.id"
				_withFlag = true
				_fontClass = '$TextDefaultBold21NM'
			)
		)
	)
)

(def element RewardItemBigExterior (_rewardItem:dict, _isTitleVisible:bool = true)
	(scope
		(var rewardSubType:str = "_rewardItem.subtype")

		(var exteriorEntity:gfx = "$datahub.getPrimaryEntity(CC.exteriorConfig, _rewardItem.id)")
		(var exteriorConfig:gfx = "exteriorEntity ? exteriorEntity.exteriorConfig : null")
		(var exteriorName:gfx = "exteriorConfig ? exteriorConfig.name : null")

		(var isAvailableFakeColorSchemes:bool = "'colorsNum' in _rewardItem.params && _rewardItem.params.colorsNum")
		(var fakeColorScheme:dict = "isAvailableFakeColorSchemes ? _rewardItem.params : null")

		(var ecoBoostEntity:gfx = "$datahub.getPrimaryEntity(CC.ecoBoost, _rewardItem.id)")
		(var isMultiBoost:bool = "rewardSubType == SC.Common.REWARD_SUBTYPE.MULTIBOOST")
		(var shipLevel:str = "ecoBoostEntity && isMultiBoost ? ecoBoostEntity.shipListRestrictions.levelString : ''")
		(var multiBoostName:str = "subst('IDS_MULTIBOOST_WITH_LEVEL_TITLE', [], { levelRange: shipLevel })")
		(var ecoBoostName:str = "ecoBoostEntity ? ecoBoostEntity.ecoBoost.name : ''")

		(var signalEntity:gfx =		"$datahub.getPrimaryEntity(CC.signal, _rewardItem.id)")
		(var signalComponent:gfx =	"signalEntity.signal")
		(var signalName:str =		"signalComponent.name ?: ''")
		(var signalRarity:number =	"signalComponent.rarity ?: 0")

		(var shipEntity:gfx = "$datahub.getPrimaryEntity(CC.ship, _rewardItem.params.shipId)")
		(var shipNameIDS:str = "shipEntity ? toUpper(tr(shipEntity.ship.nameIDS)) : ''")

		(var itemName:str = "	exteriorEntity	? toUpper('IDS_' + exteriorName) :
								ecoBoostEntity	? isMultiBoost	? multiBoostName
																: 'IDS_' + toUpper(ecoBoostName) :
								signalEntity	? tr('IDS_' + toUpper(signalName) + '_' + signalRarity)
												: ''")

		(var exteriorShipListRestrictions:gfx = "exteriorEntity ? exteriorEntity.shipListRestrictions : null")
		(var ecoBoostShipListRestrictions:gfx = "ecoBoostEntity ? ecoBoostEntity.shipListRestrictions : null")

		(var exteriorLevelFiltersRoman:str ="exteriorShipListRestrictions ? exteriorShipListRestrictions.levelString : ''" (event "exteriorShipListRestrictions.evUpdate"))
		(var doesExteriorHaveLevelRestrictions:bool = "exteriorLevelFiltersRoman.length > 0")

		(var ecoboostLevelFiltersRoman:str ="ecoBoostShipListRestrictions ? ecoBoostShipListRestrictions.levelString : ''" (event "ecoBoostShipListRestrictions.evUpdate"))
		(var doesEcoBoostHaveLevelRestrictions:bool = "ecoboostLevelFiltersRoman.length > 0")

		(var hasLevelRestrictions:bool = "doesExteriorHaveLevelRestrictions || doesEcoBoostHaveLevelRestrictions")

		(var basicTitleWithShipName:str = "isMultiBoost ? 'IDS_MULTIBOOST_WITH_SHIP_TITLE' : 'IDS_EXTERIOR_NAME_WITH_SHIP'")
		(var basicTitleWithShipLevel:str = "isMultiBoost ? 'IDS_MULTIBOOST_WITH_LEVEL_TITLE' : 'IDS_EXTERIOR_NAME_WITH_LEVEL'")

		(var romanLevel:str = "doesExteriorHaveLevelRestrictions ? exteriorLevelFiltersRoman : ecoboostLevelFiltersRoman")

		(var title:str = "	rewardSubType == SC.Ui_common.REWARD_EXTERIOR_TYPE.GLOBALBOOST	? 'IDS_GLOBALBOOST_TITLE' :
							shipEntity														? subst(basicTitleWithShipName, [], {exteriorName: tr(itemName), shipName: shipNameIDS}) :
							hasLevelRestrictions											? subst(basicTitleWithShipLevel, [], {exteriorName: tr(itemName), levelRange: romanLevel})
																							: tr(itemName)")
		
		(var imagePath:str = "	ecoBoostEntity	? 'url:../reward_icons/big/' + ecoBoostName + '.png' :
								exteriorEntity	? 'url:../reward_icons/big/exteriors/' + exteriorName + '.png' :
								signalEntity	? 'url:../reward_icons/big/' + signalName + '.png'
												: ''")

		(var isAmountVisible:bool = "_rewardItem.amount > 0")

		(var validatedAmount:str = "exteriorEntity ? 'IDS_CAMOUFLAGE' : toString(_rewardItem.amount)")
	)

	(style (align = "center") (width = 100%))
	(block
		(style (width = 256px) (height = 256px) (marginBottom = "REWARD_BIG_MARGINS_IMAGE") (bind backgroundImage "imagePath"))
		
		(controller $Tooltip
			(bind enabled "exteriorEntity")
			(renderer = 'CamouflageTooltip')
			(args
				_id = "_rewardItem.id"
				_isReward = "true"
				_amount = "_rewardItem.amount"
				_fakeColorScheme = "fakeColorScheme"
				_noMouseInstructions = "true"
				_rewardShipId = "shipEntity ? _rewardItem.params.shipId : null"
			)
			(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
		)
	)

	(block
		(bind visible "_isTitleVisible")
		(style (align = "center") (width = 100%))
		(tf
			(class $TextDefault21NM)
			(alpha = "TA")
			(style (width = 100%) (marginBottom = "REWARD_BIG_MARGINS") (textAlign = "center"))
			(bind text "title")
		)
		(tf
			(bind visible "isAmountVisible")
			(class $TextDefaultBold25NM)
			(alpha = "TA")
			(bind text "validatedAmount")
		)
	)
)

(def element RewardItemBigLootbox (_rewardItem:dict, _isTitleVisible:bool = true) layout=true
	(style (align = "center") (width = 100%))

	(block
		(bind name "'big_reward_' + _rewardItem.subtype + '_' + _rewardItem.amount" )
		(style	(width = 256px) (height = 256px) (marginBottom = "REWARD_BIG_MARGINS_IMAGE")
				(bind backgroundImage "'url:../reward_icons/big/' + _rewardItem.subtype + '.png'"))
	)
	(block
		(bind visible "_isTitleVisible")
		(style (align = "center") (width = 100%))
		(tf
			(class $TextDefault21NM)
			(style (width = 100%) (marginBottom = "REWARD_BIG_MARGINS") (textAlign = "center") (alpha = "TA"))
			(bind text "'IDS_REWARD_LOOTBOX_' + toUpper(_rewardItem.subtype) + '_TITLE_SHORT'")
		)
		(tf
			(class $TextDefaultBold25NM)
			(style (alpha = "TA"))
			(bind text "subst('IDS_PL_LOOTBOX_COUNT', [], {_amount: toString(_rewardItem.amount)}, _rewardItem.amount)")
		)
	)
)

(def element RewardItemBigDogtag (_rewardItem:dict, _isTitleVisible:bool = true) layout=true
	(scope
		(var dogTagEntity:dhEntity =		"getPrimaryEntity(CC.dogTagComponent, _rewardItem.id)")
		(var dogTagComponent:dhComponent =	"dogTagEntity.dogTagComponent")

		(var gpName:str =			"dogTagComponent.gpName"					(event "dogTagComponent.evUpdate"))
		(var isColorizable:bool =	"dogTagComponent.isColorizable ?: false"	(event "dogTagComponent.evUpdate"))
		(var categoryId:number =	"dogTagComponent.categoryId ?: 0"			(event "dogTagComponent.evUpdate"))
		(var dogTagIconPath:str = 	"gpName ? 'url:../dogTags/big/' + gpName + (isColorizable ? '/PCNT001' : '') + '.png' : ''")
	)

	(style (align = "center") (width = 100%))

	(block
		(style
			(width = 256px)
			(height = 256px)
			(marginBottom = "REWARD_BIG_MARGINS_IMAGE")
			(backgroundSize = "fill")
			(bind backgroundImage "dogTagIconPath")
		)
	)

	(block
		(bind visible "_isTitleVisible")

		(style (align = "center") (width = 100%))

		(tf
			(class $TextDefault21NM)
			(style
				(width = 100%)
				(marginBottom = "REWARD_BIG_MARGINS")
				(textAlign = "center")
				(alpha = "TA")
			)

			(bind text "tr(toUpper('IDS_DOGTAG_COMPONENT_TOOLTIP_CATEGORY_' + categoryId))")
		)

		(tf
			(class $TextDefaultBold25NM)
			(style
				(width = 100%)
				(textAlign = "center")
				(alpha = "TA")
			)

			(bind text "'IDS_DOGTAG_' + toUpper(gpName) + '_NAME'")
		)
	)
)

(def element RewardItemBigDummy (_rewardItem:dict, _isTitleVisible:bool = true) layout=true
	(style (align = "center") (width = 100%))
	(block
		(style	(width = 256px) (height = 256px) (marginBottom = "REWARD_BIG_MARGINS_IMAGE")
				(bind backgroundImage "'url:../reward_icons/big/' + _rewardItem.subtype + '.png'"))
	)
	(block
		(bind visible "_isTitleVisible")
		(style (align = "center") (width = 100%))
		(tf
			(class $TextDefault21NM)
			(style (width = 100%) (textAlign = "center") (alpha = "TA"))
			(bind text "'IDS_REWARD_' + toUpper(_rewardItem.subtype) + '_TITLE'")
		)
	)
)

(def element RewardItemShipComponent (_rewardItem:dict, _isTitleVisible:bool = true)
	(scope
		(var shipEntity:gfx = "$datahub.getPrimaryEntity(CC.ship, _rewardItem.params.shipID)")
		(var shipNameIDS:str = "shipEntity ? toUpper(tr(shipEntity.ship.nameIDS)) : ''")
		(var finalPrice:number = "_rewardItem && _rewardItem.amount ? _rewardItem.amount : 0")

		(var priceInfo:dict = "{ finalPrice: finalPrice, currency: SC.Common.CURRENCIES.SHIPCOMPONENT}")
		(var iconPath:str = "_rewardItem ? 'url:../reward_icons/big/' + _rewardItem.type + '.png' : ''")
		(var text:str = "subst('IDS_CURRENCY_SHIPCOMPONENT', [], { _shipName: shipNameIDS })")
	)
	(style (align = "center") (width = 100%))
	(block
		(style	(width = 256px) (height = 256px) (marginBottom = "REWARD_BIG_MARGINS_IMAGE")
				(bind backgroundImage "iconPath"))
	)
	(block
		(bind visible "_isTitleVisible")
		(style (align = "center") (width = 100%))
		(tf
			(class $TextDefault21NM)
			(style (width = 100%) (marginBottom = "REWARD_BIG_MARGINS") (textAlign = "center") (alpha = "TA"))
			(bind text "text")
		)
		(element PriceTag
			_priceInfo = "priceInfo"
			_size = "SIZE.LARGE"
		)
	)
)

(def element RewardItemShipMaterial (_rewardItem:dict, _isTitleVisible:bool = true)
	(scope
		(var amount:number = "_rewardItem.amount ?: 0")
		(var shipLevel:number = "_rewardItem.params.shipLevel ?: 0")
		(var finalPrice:number = "_rewardItem && _rewardItem.amount ? _rewardItem.amount : 0")

		(var iconPath:str = "_rewardItem ? 'url:../reward_icons/big/' + _rewardItem.type + '_' + shipLevel + '.png' : ''")
		(var text:str = "subst('IDS_CURRENCY_SHIPMATERIAL', [], {_shipLevel: shipLevelsToRoman([shipLevel], true)})")
		(var priceInfo:dict = "{ finalPrice: finalPrice, currency: SC.Common.CURRENCIES.SHIPMATERIAL}")
	)
	(style (align = "center") (width = 100%))
	(block
		(style	(width = 256px) (height = 256px) (marginBottom = "REWARD_BIG_MARGINS_IMAGE")
				(bind backgroundImage "iconPath"))
	)
	(block
		(bind visible "_isTitleVisible")
		(style (align = "center") (width = 100%))
		(tf
			(class $TextDefault21NM)
			(style (width = 100%) (marginBottom = "REWARD_BIG_MARGINS") (textAlign = "center") (alpha = "TA"))
			(bind text "text")
		)
		(element PriceTag
			_priceInfo = "priceInfo"
			_size = "SIZE.LARGE"
		)
	)
)

(def element RewardItemBigCommon (_rewardItem:dict, _isTitleVisible:bool = true) layout=true
	(scope
		(var selectedRenderRewardResourceItemBig:str = "_rewardItem.subtype in RENDER_REWARD_RESOURCE_ITEMS_BIG ? RENDER_REWARD_RESOURCE_ITEMS_BIG[_rewardItem.subtype] : ''")
	)
	(style (width = 100%) (align = "center"))
	(controller $Instance
		(bind renderer "selectedRenderRewardResourceItemBig")
		(bind enabled "selectedRenderRewardResourceItemBig")
		(args
			_rewardItem = "_rewardItem"
			_isTitleVisible = "_isTitleVisible"
		)
	)
)

(def element RewardResourcesBig (_rewardItem:dict, _isTitleVisible:bool = true) layout=true
	(scope
		(var finalPrice:number = "_rewardItem && _rewardItem.amount ? _rewardItem.amount : 0")
		(var currency:str = "	_rewardItem.subtype == SC.Common.REWARD_SUBTYPE.CLANRESOURCE	?	SC.Common.CURRENCIES.CLAN_RESOURCE
																								:	_rewardItem.subtype")
		(var priceInfo:dict = "{ finalPrice: finalPrice, currency: currency}")
	)
	(style (align = "center") (width = 100%))
	(block
		(bind name "'big_reward_' + _rewardItem.subtype + '_' + _rewardItem.amount" )
		(style	(width = 256px) (height = 256px) (marginBottom = "REWARD_BIG_MARGINS_IMAGE")
				(bind backgroundImage "'url:../reward_icons/big/' + _rewardItem.subtype + '.png'"))
	)
	(block
		(bind visible "_isTitleVisible")
		(style (align = "center") (width = 100%))
		(tf
			(class $TextDefault21NM)
			(style (width = 100%) (marginBottom = "REWARD_BIG_MARGINS") (textAlign = "center") (alpha = "TA"))
			(bind text "'IDS_REWARD_' + toUpper(_rewardItem.subtype) + '_TITLE'")
		)
		(element PriceTag
			_priceInfo = "priceInfo"
			_size = "SIZE.LARGE"
		)
	)
)

(def element RewardResourceSlotBig (_rewardItem:dict, _isTitleVisible:bool = true) layout=true
	(style (align = "center") (width = 100%))
	(block
		(style	(width = 256px) (height = 256px) (marginBottom = "REWARD_BIG_MARGINS_IMAGE")
				(bind backgroundImage "'url:../reward_icons/big/' + _rewardItem.subtype + '.png'"))
	)
	(block
		(style (width = 100%))
		(controller $Instance renderer='RewardItemBigTitleTemplate'
			(bind enabled "_isTitleVisible")
			(args
				_title = "'IDS_REWARD_' + toUpper(_rewardItem.subtype) + '_TITLE'"
				_amount = "_rewardItem.amount"
			)
		)
	)
)

(def element RewardResourcePremiumBig (_rewardItem:dict, _isTitleVisible:bool = true) layout=true
	(style (align = "center") (width = 100%))
	(block
		(style	(width = 256px) (height = 256px) (marginBottom = "REWARD_BIG_MARGINS_IMAGE")
				(bind backgroundImage "'url:../reward_icons/big/' + _rewardItem.subtype + '.png'"))
	)
	(block
		(bind visible "_isTitleVisible")
		(style (align = "center") (width = 100%))
		(tf
			(class $TextDefault21NM)
			(style (width = 100%) (marginBottom = "REWARD_BIG_MARGINS") (textAlign = "center") (alpha = "TA"))
			(bind text "'IDS_REWARD_' + toUpper(_rewardItem.subtype) + '_TITLE'")
		)
		(tf
			(class $TextDefaultBold25NM)
			(style (textColor = "SC.Ui_styles.SERVICE_COLORS.YELLOW") (alpha = "TA"))
			(bind text "_rewardItem.params.text")
		)
	)
)

(def element RewardResourcesCoeffBig (_rewardItem:dict, _isTitleVisible:bool = true)
	(scope
		(var isResMulCoeffPositive:bool = "_rewardItem.amount > 0")
		(var resMulCoeff:str = "(isResMulCoeffPositive ? '+' : '') + toString(_rewardItem.amount)")
		(var resMulCategory:str = "isResMulCoeffPositive ? 'positive' : 'negative'")
		(var isCreditsCoeff:bool = "_rewardItem.subtype == SC.Common.REWARD_SUBTYPE.CREDITSCOEFF")

		(var attributesPositive:array = "isCreditsCoeff	? [	{	attributeIDS: 'IDS_PARAMS_MODIFIER_CREDITSFACTOR',
																measuredValue: resMulCoeff,
																measure: 'IDS_PERCENT',
																category: resMulCategory}]
														: [	{	attributeIDS: 'IDS_PARAMS_MODIFIER_SHIPEXPFACTOR',
																measuredValue: resMulCoeff,
																measure: 'IDS_PERCENT',
																category: resMulCategory},
															{	attributeIDS: 'IDS_PARAMS_MODIFIER_CREWEXPFACTOR',
																measuredValue: resMulCoeff,
																measure: 'IDS_PERCENT',
																category: resMulCategory},
															{	attributeIDS: 'IDS_PARAMS_MODIFIER_FREEEXPFACTOR',
																measuredValue: resMulCoeff,
																measure: 'IDS_PERCENT',
																category: resMulCategory}]")
	)
	(style (align = "center") (width = 100%))
	(block
		(style
			(width = 256px)
			(height = 256px)
			(marginBottom = "REWARD_BIG_MARGINS_IMAGE")
			(bind backgroundImage "'url:../reward_icons/big/' + _rewardItem.subtype + '.png'"))
	)
	(block
		(bind visible "_isTitleVisible")
		(style (align = "center") (width = 100%) (marginBottom = "M"))
		(tf
			(class $TextDefault21NM)
			(style
				(width = 100%)
				(marginBottom = "REWARD_BIG_MARGINS")
				(textAlign = "center")
				(alpha = "TA")
			)
			(bind text "'IDS_REWARD_' + _rewardItem.subtype + '_TITLE'")
		)
		(tf
			(class $TextDefaultBold25NM)
			(style (alpha = "TA"))
			(bind text "resMulCoeff + '%'")
		)
	)
	(block
		(style (width = 100%))
		(controller $Instance renderer='ParamsModifierList'
			(bind enabled "_isTitleVisible")
			(args
				_attributesPositive = "attributesPositive"
			)
		)
	)
)

(def element RewardItemBigTitleTemplate (_title:str = '', _amount:number = 0)
	(style (align = "center") (width = 100%))
	(tf
		(class $TextDefault21NM)
		(style (width = 100%) (marginBottom = "REWARD_BIG_MARGINS") (textAlign = "center") (alpha = "TA"))
		(bind text "_title")
	)
	(tf
		(class $TextDefaultBold25NM)
		(style (alpha = "TA"))
		(bind text "_amount")
	)
)

(def element RewardTitle	(	_rewardEntityId:number,
								_isAutoSized:bool = true,
								_fontClass:str = '$TextDefaultBold30NM',
								_fontShipItemClass:str = '$TextDefaultBold25NM')
	(scope
		(var rewardEntity:gfx = "$datahub.getEntity(_rewardEntityId)")
		(var rewardComponent:gfx = "rewardEntity ? rewardEntity.rewardComponent : null")
		(var rewardItem:dict = "rewardComponent	?	{	id:			rewardEntity ? rewardComponent.id : null,
														amount:		rewardEntity ? rewardComponent.amount : null,
														name:		rewardEntity ? rewardComponent.name : null,
														type:		rewardEntity ? rewardComponent.type : null,
														subtype:	rewardEntity ? rewardComponent.subtype : null,
														params:		rewardEntity ? rewardComponent.params : null,
														reasons:	rewardEntity ? rewardComponent.reasons : null,
														isPRMP:		rewardEntity ? rewardComponent.isPRMP : null}
												: null")
		(var type:str = "rewardComponent.type ?: ''")
		(var selectedRenderRewardItem:str = "type ? RENDER_REWARD_TITLE[rewardEntity.rewardComponent.type] : ''")
		(var canRender:bool = "rewardItem && selectedRenderRewardItem")
	)
	(style (bind width "_isAutoSized ? 'auto' : 100%"))
	(controller $Instance
		(bind enabled "canRender")
		(bind renderer "selectedRenderRewardItem")
		(args
			_rewardItem = "rewardItem"
			_isAutoSized = "_isAutoSized"
			_fontClass = "_fontClass"
			_fontShipItemClass = "_fontShipItemClass"
		)
	)
)

(def element RewardTitleCommon (_rewardItem:dict, _fontClass:str, _isAutoSized:bool)
	(style (width = 100%))
	(tf
		(bind class "_fontClass")
		(style (alpha = "TA") (bind width "_isAutoSized ? 'auto' : 100%"))
		(bind text "'IDS_REWARD_' + toUpper(_rewardItem.subtype) + '_TITLE'")
	)
)

(def element RewardShipMaterialTitle (_rewardItem:dict, _fontClass:str, _isAutoSized:bool)
	(scope
		(var shipLevel:number = "_rewardItem.params.shipLevel ?: 0")
		(var text:str = "subst('IDS_CURRENCY_SHIPMATERIAL', [], {_shipLevel: shipLevelsToRoman([shipLevel], true)})")
	)
	(style (width = 100%))
	(tf
		(bind class "_fontClass")
		(style (alpha = "TA") (bind width "_isAutoSized ? 'auto' : 100%"))
		(bind text "text")
	)
)

(def element RewardShipComponentTitle (_rewardItem:dict, _fontClass:str, _isAutoSized:bool)
	(scope
		(var shipEntity:gfx = "$datahub.getPrimaryEntity(CC.ship, _rewardItem.params.shipID)")
		(var shipNameIDS:str = "shipEntity ? toUpper(tr(shipEntity.ship.nameIDS)) : ''")
		(var text:str = "subst('IDS_CURRENCY_SHIPCOMPONENT', [], { _shipName: shipNameIDS })")
	)
	(style (width = 100%))
	(tf
		(bind class "_fontClass")
		(style (alpha = "TA") (bind width "_isAutoSized ? 'auto' : 100%"))
		(bind text "text")
	)
)

(def element RewardDogTagTitle (_rewardItem:dict, _fontClass:str, _isAutoSized:bool)
	(scope
		(var dogTagEntity:gfx = "$datahub.getPrimaryEntity(CC.dogTagComponent, _rewardItem.id)")
		(var gpName:str = "dogTagEntity ? dogTagEntity.dogTagComponent.gpName : ''" (event "dogTagEntity.dogTagComponent.evUpdate"))
		(var text:str = "'IDS_DOGTAG_' + toUpper(gpName) + '_NAME'")
	)
	(style (width = 100%))
	(tf
		(bind class "_fontClass")
		(style (alpha = "TA") (bind width "_isAutoSized ? 'auto' : 100%"))
		(bind text "text")
	)
)

(def element RewardLootboxTitle (_rewardItem:dict, _fontClass:str, _isAutoSized:bool)
	(style (width = 100%))
	(tf
		(bind class "_fontClass")
		(style (alpha = "TA") (bind width "_isAutoSized ? 'auto' : 100%"))
		(bind text "'IDS_REWARD_LOOTBOX_' + toUpper(_rewardItem.subtype) + '_TITLE_SHORT'")
	)
)

(def element RewardExteriorTitle (_rewardItem:dict, _fontClass:str, _isAutoSized:bool)
	(scope
		(var rewardItemId:number = "_rewardItem.id")
		(var rewardSubType:str = "_rewardItem.subtype")

		(var exteriorEntity:gfx = "$datahub.getPrimaryEntity(CC.exteriorConfig, rewardItemId)")
		(var exteriorConfig:gfx = "exteriorEntity.exteriorConfig")
		(var exteriorName:str = "exteriorConfig.name ?: ''")

		(var signalEntity:gfx = "$datahub.getPrimaryEntity(CC.signal, rewardItemId)")
		(var ensignEntity:gfx = "$datahub.getPrimaryEntity(CC.ensign, rewardItemId)")
		(var ecoBoostEntity:gfx = "$datahub.getPrimaryEntity(CC.ecoBoost, rewardItemId)")
		(var isMultiBoost:bool = "rewardSubType == SC.Common.REWARD_SUBTYPE.MULTIBOOST")
		(var isGlobalBoost:bool = "rewardSubType == SC.Ui_common.REWARD_EXTERIOR_TYPE.GLOBALBOOST")
		(var shipLevel:str = "ecoBoostEntity && isMultiBoost ? ecoBoostEntity.shipListRestrictions.levelString : ''")
		(var multiBoostName:str = "subst('IDS_MULTIBOOST_WITH_LEVEL_TITLE', [], { levelRange: shipLevel })")
		(var ecoBoostName:str = "ecoBoostEntity ? ecoBoostEntity.ecoBoost.name : ''")

		(var shipEntity:gfx = "$datahub.getPrimaryEntity(CC.ship, _rewardItem.params.shipId)")
		(var shipNameIDS:str = "shipEntity ? toUpper(tr(shipEntity.ship.nameIDS)) : ''")

		(var itemName:str = "	exteriorEntity	?	toUpper('IDS_' + exteriorName) :
								signalEntity	?	toUpper('IDS_' + signalEntity.signal.name) :
								ensignEntity	?	toUpper('IDS_' + ensignEntity.ensign.name) :
								ecoBoostEntity	?	isGlobalBoost		? 'IDS_GLOBALBOOST_TITLE' :
													isMultiBoost		? multiBoostName
																		: 'IDS_' + toUpper(ecoBoostName)
												:	''")

		(var exteriorShipListRestrictions:gfx = "exteriorEntity ? exteriorEntity.shipListRestrictions : null")
		(var ecoBoostShipListRestrictions:gfx = "ecoBoostEntity ? ecoBoostEntity.shipListRestrictions : null")

		(var exteriorLevelFiltersRoman:str ="exteriorShipListRestrictions ? exteriorShipListRestrictions.levelString : ''" (event "exteriorShipListRestrictions.evUpdate"))
		(var doesExteriorHaveLevelRestrictions:bool = "exteriorLevelFiltersRoman.length > 0")

		(var ecoboostLevelFiltersRoman:str ="ecoBoostShipListRestrictions ? ecoBoostShipListRestrictions.levelString : ''" (event "ecoBoostShipListRestrictions.evUpdate"))
		(var doesEcoBoostHaveLevelRestrictions:bool = "ecoboostLevelFiltersRoman.length > 0")

		(var hasLevelRestrictions:bool = "doesExteriorHaveLevelRestrictions || doesEcoBoostHaveLevelRestrictions")

		(var basicTitleWithShipName:str = "isMultiBoost ? 'IDS_MULTIBOOST_WITH_SHIP_TITLE' : 'IDS_EXTERIOR_NAME_WITH_SHIP'")
		(var basicTitleWithShipLevel:str = "isMultiBoost ? 'IDS_MULTIBOOST_WITH_LEVEL_TITLE' : 'IDS_EXTERIOR_NAME_WITH_LEVEL'")

		(var romanLevel:str = "doesExteriorHaveLevelRestrictions ? exteriorLevelFiltersRoman : ecoboostLevelFiltersRoman")

		(var text:str = "	shipEntity				? subst(basicTitleWithShipName,		[], {exteriorName: tr(itemName), shipName: shipNameIDS}) :
							hasLevelRestrictions	? subst(basicTitleWithShipLevel,	[], {exteriorName: tr(itemName), levelRange: romanLevel})
													: tr(itemName)")
	)

	(tf
		(class $TextDefaultBold30NM)
		(style (alpha = "TA"))
		(bind text "text")
	)
)

(def element RewardShipTitle (_rewardItem:dict, _fontShipItemClass:str)
	(element ShipLineItemNM
		_shipId = "_rewardItem.id"
		_withFlag = true
		_fontClass = "_fontShipItemClass"
	)
)

(def element RewardCrewTitle (_rewardItem:dict, _fontClass:str, _isAutoSized:bool)
	(scope
		(struct crewHistory =	PULL_CREW_HISTORY_INFO(_crewHistoryId = "_rewardItem.params.primaryKey"))

		(var crewClassificationId:number =	"crewHistory.component.classificationId ?: 0")
		(var crewName:str =					"crewHistory.component.fullName ?: tr('IDS_NO_CREW')")
		(var isPersonCrew:bool =			"crewClassificationId != SC.Common.COMMANDER_CLASSIFICATIONS.COMMON")
	)

	(style (flow = "horizontal") (width = 100%))

	(tf
		(bind class "_fontClass")
		(style (alpha = "TA") (marginRight = "S") (bind width "_isAutoSized ? 'auto' : 100%"))
		(bind text "'IDS_REWARD_' + toUpper(_rewardItem.subtype) + '_TITLE'")
	)

	(tf
		(bind visible "isPersonCrew")
		(bind class "_fontClass")
		(style (alpha = "TA") (bind width "_isAutoSized ? 'auto' : 100%"))
		(bind text "crewName")
	)
)