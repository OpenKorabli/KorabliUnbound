(def css $DescriptionHtmlTextStyleSheet ()
	(extends $FontDropShadowFilter)

	(marginTextLeft = -3px)
	(marginTextRight = -3px)
	(marginTextTop = -6px)
	(marginTextBottom = -6px) 

	(multiline = true)

	(styleSheet ="'
		body {
			font-family: $WWSDefaultFont;
			leading: -2;
			font-size: 15;
			color: #EEEEEE
		}
		.bold_default {
			font-family: $WWSDefaultFontBold;
			color: #EEEEEE
		}
		.bold_currentPlayerRelated {
			font-family: $WWSDefaultFontBold;
			color: #FFCC66
		}
		.bold_error {
			font-family: $WWSDefaultFontBold;
			color: #FF6600
		}
		.bold_warning {
			font-family: $WWSDefaultFontBold;
			color: #FF9900
		}
		.default {}
		.currentPlayerRelated {
			font-family: $WWSDefaultFont;
			color: #FFCC66
		}
		.error {
			font-family: $WWSDefaultFont;
			color: #FF6600
		}
		.warning {
			font-family: $WWSDefaultFont;
			color: #FF9900
		}
		.p_spacing {
			font-size: 6.5px;
		}
	'")
)

(def constant TOOLTIP_PARAMETER_WITHOUT_VALUE "'none'")

(def constant WEAPON_PARAM_TYPE_TO_RENDERER	"
	{
		'string' : 'StringParamRenderer',
		'number' : 'NumberParamRenderer',
		'array' : 'ArrayParamRenderer',
		'none' : ''
	}
")

(def macro SIMPLE_TOOLTIP_ANIMATION ()
	(showAnimation={duration:0.15, delay:0.25, from:{alpha:0}, to:{alpha:1}})
	(hideAnimation={duration:0.15, delay:0.0, from:{alpha:1}, to:{alpha:0}})
	
	
	
	(bindcall show on='mouseOver')
	(bindcall hide on='mouseOut')
)

(def element HIT_TEST_TOOLTIP_CONTAINER ()
	(class $FullsizeAbsolute)
	(style
		(backgroundColor = 0x01000000)
	)
)

(def macro INNER_PANEL_BACKGROUND ()
	(block
		(class $FullsizeAbsolute)
		(style
			(backgroundImage = 'url:../service_kit/panel_backgrounds/inner_panel.png')
			(scale9grid = 3)
		)
	)
)

(def macro TOOLTIP_SYSTEM_PARAMS_CONTAINER ()
	(style
		(width = 100%)
		(paddingLeft = "-M")
		(paddingRight = "-M")
		(paddingTop = "-SXS")
		(paddingBottom = "-SXS")
	)

	(macro INNER_PANEL_BACKGROUND)
)

(def element TOOLTIP_SYSTEM_PARAMS_WRAPPER ()
	(macro TOOLTIP_SYSTEM_PARAMS_CONTAINER)
)

(def element TOOLTIP_SYSTEM_PARAMS_BLOCK ()
	(style
		(width = 100%)
		(paddingLeft = "M")
		(paddingRight = "M")
		(paddingTop = "XS")
		(paddingBottom = "XS")
	)
)

(def macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_SCOPE ()
	(event evStartShow)
	(event evShow)
	(event evStartHide)
	(event evHide)
	
	(struct highContrast = HIGH_CONTRAST_INFO())

	(var windowManager:dhComponent = "getSingleComponent(CC.windowManager)")
	(var windowQueue:array = "windowManager.windowQueue ?: []" (event "windowManager.evWindowQueueChanged"))

	(var isInBattleWindow:bool = "isIn('Battle', windowQueue)")
	(var isHighContrast:bool = "isInBattleWindow || highContrast.isEnabled")
)

(def macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_MARKUP (_isInfotip:expression=false)
	(block
		(class $FullsizeAbsolute)
		(style
			(padding = -1px)
			(bind hitTest "_isInfotip")
		)

		(block
			(class $FullsizeAbsolute)
			(block
				(class $FullsizeAbsolute)
				(controller $Instance renderer='BlurMapWithLayerPanel'
					(bind enabled "!isHighContrast")
				)
			)

			(block
				(class $FullsizeAbsolute)
				(style
					(bind backgroundColor "_isInfotip || isHighContrast ? NO_COLOR : SC.Ui_styles.SERVICE_COLORS.INNER_PANEL")
					(alpha = 0.5)
				)
			)

			(block
				(bind visible "!isHighContrast")
				(class $FullsizeAbsolute)
				(style
					(bind backgroundImage "_isInfotip	? 'url:../service_kit/panel_backgrounds/infotip_panel.png'
														: 'url:../service_kit/panel_backgrounds/hint_panel.png'")
					(scale9grid = 3)
				)
			)

			(block
				(bind visible "isHighContrast")
				(class $FullsizeAbsolute)
				(style
					(backgroundImage = 'url:../service_kit/panel_backgrounds/hint_panel_high_contrast.png')
					(scale9grid = 3)
				)
			)
		)
	)
)

(def macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND (_isInfotip:expression=false)
	(scope (macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_SCOPE))
	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_MARKUP "_isInfotip")
)

(def element TOOLTIP_SYSTEM_DEFAULT_CONTAINER (_width:number=100%)
	(style
		(bind width "_width" (bind enabled "_width"))
		(paddingRight = "M")
		(paddingLeft = "M")
		(paddingBottom = "SXS")
		(paddingTop = "SXS")
	)
)

(def element TooltipSystemHorizontalDivider ()
	(style
		(width = 100%) (marginTop = "SXS") (marginBottom = "SXS")
		(paddingLeft = "-M") (paddingRight = "-M")
	)

	(block
		(style
			(width = 100%) (height = 2) (backgroundSize = "fill")
			(backgroundImage = 'url:../service_kit/dividers/divider_h.png')
		)
	)
)

(def element TooltipSystemVerticalDivider ()
	(style
		(height = 100%) (marginLeft = "M") (marginRight = "M")
		(paddingTop = "-SXS") (paddingBottom = "-SXS")
	)

	(block
		(style
			(height = 100%) (width = 3) (backgroundSize = "fill")
			(backgroundImage = 'url:../service_kit/dividers/divider_v.png')
		)
	)
)

(def element TooltipSystemStatusLine (_text:str, _unifiedStatus:str="SC.Ui_styles.UNIFIED_STATUS.DEFAULT", _showStatusIcon:bool=true)
	(style (width = 100%))

	(element StatusLine
		_unifiedStatus = "_unifiedStatus"
		_text = "_text"
		_width = 100%
		_showStatusIcon = "_showStatusIcon"
	)
)

(def element TooltipSystemStatusMultiparagraph (_unifiedStatus:str, _paragraphs:array=[], _paragraphRenderer:str='TooltipSystemStatusMultiparagraphLine')
	(style (width = 100%))

	(controller $Repeat
		(bind renderer "_paragraphRenderer")
		(bind count "_paragraphs.length")
		(args
			_unifiedStatus = "_unifiedStatus"
			_text = "_paragraphs[$index]"
		)
	)
)

(def element TooltipSystemStatusMultiparagraphLine (_unifiedStatus:str, _text:str)
	(style
		(width = 100%)
		(bind marginTop "$index ? SXS : 0")
	)

	(element TooltipSystemStatusLine
		_unifiedStatus = "_unifiedStatus"
		_text = "_text"
		_showStatusIcon = "$index ? false : true"
	)
)

(def element TooltipSystemDescriptionTextSingleLine (_descriptionText:str)
	(scope
		(var descriptionText:str = "_descriptionText")

		(var keyboardBindingsApplier:gfx = "$datahub.getSingleComponent(CC.keyboardBindingsApplier)")
	)

	(style (width = 100%))

	(tf
		(class $TextDefaultNM)
		(style
			(width = 100%)
			(leading = -2)
			(elideMode = true)
		)
		(alpha = "TA")
		
		(bindcall substitute imageOffset=5 sourceText="tr(descriptionText)" postfix='' init=true (event "keyboardBindingsApplier.evKeyboardBindingsChanged"))
	)
)

(def element TooltipSystemDescriptionText (_descriptionText:str, _substitutionMap:dict={}, _unifiedStatus:str="SC.Ui_styles.UNIFIED_STATUS.DEFAULT")
	(style (width = 100%))
	(macro UNIFIED_STATUS_TO_COLOR_AND_ALPHA "_unifiedStatus" "'textColor'" "'textAlpha'")

	(tf
		(class $TextDefaultNM)
		(style (width = 100%) (leading = -2) (bind textColor "textColor") (bind alpha "textAlpha"))

		(bindcall substitute	imageOffset=5
								substitutionMap="_substitutionMap"
								sourceText="tr(_descriptionText)"
								postfix=''
								init=true
								(bind enabled "!_descriptionText.empty"))
	)
)

(def element TooltipSystemHtmlDescriptionText (_descriptionText:str)
	(scope
		(var substituteMap:dict = "{	'[commander]'		: 'icon_clan_role_commander',
										'[exec_officer]'	: 'icon_clan_role_executive_officer',
										'[private]'			: 'icon_clan_role_private',
										'[recr_officer]'	: 'icon_clan_role_recruitment_officer',
										'[comm_officer]'	: 'icon_clan_role_commissioned_officer',
										'[officer]'			: 'icon_clan_role_officer'}")
	)

	(style (width = 100%))

	(tf
		(class $DescriptionHtmlTextStyleSheet)
		(style (width = 100%))

		(bindcall substitute	imageOffset=5
								substitutionMap="substituteMap"
								sourceText="'<body>' + tr(_descriptionText) + '</body>'"
								postfix=''
								init=true
								(bind enabled "!_descriptionText.empty"))
	)
)

(def element TooltipSystemDescriptionTextAutoStretch (_descriptionText:str, _maxWidth:number=250)
	(scope
		(var descriptionText:str = "_descriptionText")
	)

	(tf
		(class $TextDefaultNM)
		(style (maxWidth = "_maxWidth") (leading = -2))
		(alpha = "TA")

		(bindcall substitute imageOffset=5 sourceText="tr(descriptionText)" postfix='' init=true)
	)
)

(def element TooltipSystemHeaderSubheaderText (_headerText:str, _subheaderText:str='', _unifiedStatus:str="SC.Ui_styles.UNIFIED_STATUS.DEFAULT")
	(style (width = 100%))

	(macro UNIFIED_STATUS_TO_COLOR_AND_ALPHA "_unifiedStatus" "'textColor'" "'textAlpha'")

	(tf
		(name = 'tooltipSystemHeader')
		(class $TextDefaultBold19NM)
		(style
			(width = 100%)
			(leading = -4)
			(bind textColor "textColor")
			(bind alpha "textAlpha")
		)
		(bind text "_headerText")
	)

	(tf
		(bind visible "toBool(_subheaderText)")
		(class $TextDefaultNM)
		(style
			(width = 100%)
			(marginTop = "S")
			(leading = -2)
			(bind textColor "textColor")
			(bind alpha "textColor == SC.Ui_styles.SERVICE_COLORS.WHITE ? TC : 1")
		)
		(bind text "_subheaderText")
	)
)

(def element TooltipSystemHeaderSubheaderTextCrewOnly (_headerText:str, _unifiedStatus:str="SC.Ui_styles.UNIFIED_STATUS.DEFAULT", _subheaderText:str=null, _crewStarIcon:str='common.png')
	(style (width = 100%))

	(macro UNIFIED_STATUS_TO_COLOR_AND_ALPHA "_unifiedStatus" "'textColor'" "'textAlpha'")

	(hblock
		(style (width = 100%))

		(block
			(bind visible "_crewStarIcon != 'common.png'")

			(style
				(width = 27px)
				(height = 27px)
				(marginLeft = -9px)
				(marginBottom = -10px)
				(bind marginTop "-S")
				(bind marginRight "-XS")
				(bind backgroundImage "'url:../crew_commander/icons/' + _crewStarIcon")
			)
		)

		(tf
			(name = 'tooltipSystemHeader')
			(class $TextDefaultBold19NM)

			(style
				(width = 100%)
				(leading = -4)
				(bind textColor "textColor")
				(bind alpha "textAlpha")
			)

			(bind text "_headerText")
		)
	)

	(tf
		(bind visible "_subheaderText != null")
		(class $TextDefaultNM)
		(style
			(width = 100%)
			(marginTop = "S")
			(leading = -2)
			(bind alpha "textColor == SC.Ui_styles.SERVICE_COLORS.WHITE ? TC : 1")
			(bind textColor "textColor")
		)

		(bind text "_subheaderText")
	)
)

(def element TooltipSystemSecondaryHeaderText (_headerText:str, _unifiedStatus:str="SC.Ui_styles.UNIFIED_STATUS.DEFAULT")
	(macro UNIFIED_STATUS_TO_COLOR_AND_ALPHA "_unifiedStatus" "'textColor'" "'textAlpha'")
	(style (width = 100%))

	(tf
		(name = 'tooltipSystemSecondaryHeader')
		(class $TextDefaultBoldNM)
		(style
			(width = 100%)
			(leading = -4)
			(bind textColor "textColor")
			(bind alpha "textAlpha")
		)
		(bind text "_headerText")
	)
)

(def element TooltipSystemInnerHeaderText (_headerText:str, _unifiedStatus:str="SC.Ui_styles.UNIFIED_STATUS.DEFAULT")
	(style (width = 100%))

	(macro UNIFIED_STATUS_TO_COLOR_AND_ALPHA "_unifiedStatus" "'textColor'" "'textAlpha'")

	(tf
		(class $TextDefaultBoldNM)
		(style
			(width = 100%) (leading = -4)
			(bind textColor "textColor")
			(bind alpha "textAlpha")
		)
		(bind text "_headerText")
	)
)

(def element TooltipSystemInnerHeaderSubheaderText (_headerText:str, _subheaderText:str, _unifiedStatus:str="SC.Ui_styles.UNIFIED_STATUS.DEFAULT")
	(style (width = 100%))

	(macro UNIFIED_STATUS_TO_COLOR_AND_ALPHA "_unifiedStatus" "'textColor'" "'textAlpha'")

	(tf
		(class $TextDefaultBoldNM)
		(style
			(width = 100%) (leading = -4)
			(bind textColor "textColor")
			(bind alpha "textAlpha")
		)
		(bind text "_headerText")
	)

	(tf
		(bind visible "_subheaderText != null")

		(class $TextDefaultNM)
		(style
			(width = 100%) (leading = -2)
			(marginTop = "S")
			(bind textColor "textColor")
			(bind alpha "textAlpha")
		)
		(bind text "_subheaderText")
	)
)

(def element TooltipSystemShipsRange (_startShipId:number, _endShipId:number, _isSingleShipFeature:bool=false)
	(style (width = 100%))

	(htile
		(style
			(width = 100%)
			(hgap = "SXS")
			(vgap = 14px)
		)

		(element ShipLineItemNM
			_shipId = "_startShipId"
			_fontClass = '$TextDefaultBoldNM'
		)
		
		(tf
			(bind visible "!_isSingleShipFeature")
			(class $TextDefaultBoldNM)
			(style (marginTop = -1px))
			(text = '—')
		)

		(block
			(bind visible "!_isSingleShipFeature")
			(controller $Instance renderer='ShipLineItemNM'
				(bind enabled "!_isSingleShipFeature")
				(args
					_shipId = "_endShipId"
					_fontClass = '$TextDefaultBoldNM'
				)
			)
		)
	)
)

(def element ShipTitleWithIconAndLevelPBS (_shipID:number, _isSelf:bool=false, _isEnemy:bool=false, _fontSize:number="SIZE.SMALL", _iconColorTransform:dict={}, _textColor:number="SC.Ui_styles.SERVICE_COLORS.WHITE")
	(scope
		(var shipEntity:gfx =	"$datahub.getPrimaryEntity(CC.ship, _shipID)")
		
		(var nameIDS:str = "shipEntity ? toUpper(tr(shipEntity.ship.nameIDS)) : ''")
		(var levelRome:str = "shipEntity ? shipEntity.ship.levelRome : ''" (event "shipEntity.ship.evUpdate"))
		(var levelIcon:str = "shipEntity ? shipEntity.ship.levelIcon : ''" (event "shipEntity.ship.evCurrentSkinChanged"))
		(var shipType:str = "shipEntity ? shipEntity.ship.subtype : ''" (event "shipEntity.ship.evUpdate"))


		(var upgradableShipInfo:gfx = "shipEntity && shipEntity.hasComponent(CC.upgradableShipInfo) ? shipEntity.upgradableShipInfo : null" (event "shipEntity.evAdded") (event "shipEntity.evRemoved"))

		(var fontClass:str = "	_fontSize == SIZE.SMALL		?	_isSelf	?	'$TextDefaultBold13NM'
																		:	'$TextDefault13NM' :
								_fontSize == SIZE.MEDIUM	?	_isSelf	?	'$TextDefaultBoldNM'
																		:	'$TextDefaultNM' :
								_fontSize == SIZE.LARGE		?	_isSelf	?	'$TextDefaultBold17NM'
																		:	'$TextDefault17NM'
															:	_isSelf	?	'$TextDefaultBold19NM'
																		:	'$TextDefault19NM'")
	)
	(style (flow = "horizontal") (align = "left|middle"))

	(element ShipIcon
		_shipType = "shipType"
		_isEnemy = "_isEnemy"

		(style (marginTop = "XXS") (marginLeft = "-XS") (marginRight = 1px))
	)

	(element ShipLevelNM
		_levelIcon = "levelIcon"
		_colorTransform = "_iconColorTransform"
		_levelRome = "levelRome"
		_fontClass = "fontClass"
		_textColor = "_textColor"

		(style (marginRight = 1px))
	)

	(tf
		(style (bind textColor "_textColor"))
		(bind class "fontClass")
		(bind text "nameIDS")
	)
)

(def element TooltipSystemHeaderIconCampaignView (_imageUrl:str, _imageWidth:number, _imageHeight:number, _iconAmount:str, _data:dict)
	(scope
		(var renderCampaignItems:dict = "	{	SC.Ui_common.CAMPAIGN_TYPE.TASK: 'TooltipSystemHeaderIconCampaignTask',
												SC.Ui_common.CAMPAIGN_TYPE.MISSION: 'TooltipSystemHeaderIconCampaignMission',
												SC.Ui_common.CAMPAIGN_TYPE.CAMPAIGN: 'TooltipSystemHeaderIconCampaign' }")
	)
	(controller $Instance
		(bind renderer "renderCampaignItems[_data.iconType]")
		(args
			_entityId = "_data.entityId"
			_imageWidth = "_imageWidth"
			_imageHeight = "_imageHeight"
		)
	)
)

(def element TooltipSystemHeaderIconCampaignTask (_entityId:number, _imageWidth:number, _imageHeight:number)
	(scope
		(var campaignTaskEntity:dhEntity = "getPrimaryEntity(CC.campaignTaskParams, _entityId)")
		(var campaignTaskParams:dhComponent = "campaignTaskEntity.campaignTaskParams")
		(var missionEntity:dhEntity = "getPrimaryEntity(CC.campaignMissionParams, campaignTaskParams.missionID)")
		(var campaignMissionParams:dhComponent = "missionEntity.campaignMissionParams")
		(var uiNumber:str = "campaignMissionParams.uiNumber")
	)
	(style
		(bind width "_imageWidth ? _imageWidth : 80")
		(bind height "_imageHeight ? _imageHeight : 80")
		(backgroundImage = 'url:../campaigns/missions_pin/campaign_pin.png')
		(backgroundSize = "fill")
		(align = "center|middle")
	)

	(tf
		(class $TextDefaultBold21NM)
		(style (alpha = "TA"))
		(bind text "uiNumber")
	)
)

(def element TooltipSystemHeaderIconCampaign (_entityId:number, _imageWidth:number, _imageHeight:number)
	(scope
		(var campaignEntity:gfx = "$datahub.getPrimaryEntity(CC.campaignParams, _entityId)")
		(var campaignParams:gfx = "campaignEntity ? campaignEntity.campaignParams : null")
		(var campaignName:str = "campaignParams.name")
		(var imagePath:str = "'url:../campaigns/campaign_logo/' + campaignName + '_logo.png'")
	)
	(style
		(bind width "_imageWidth ? _imageWidth : 80")
		(bind height "_imageHeight ? _imageHeight : 80")
		(backgroundSize = "fill")
		(bind backgroundImage "imagePath")
	)
)

(def element TooltipSystemHeaderIconCampaignMission (_entityId:number, _imageWidth:number, _imageHeight:number)
	(scope
		(var campaignMissionEntity:dhEntity = "getPrimaryEntity(CC.campaignMissionParams, _entityId)")
		(var campaignMissionParams:dhComponent = "campaignMissionEntity.campaignMissionParams")

		(var campaignEntity:dhEntity = "getPrimaryEntity(CC.campaignParams, campaignMissionParams.campaignID)")
		(var campaignState:number = "campaignEntity.campaignPlayer.state" (event "campaignEntity.campaignPlayer.evChanged"))
		(var campaignName:str = "campaignEntity.campaignParams.name")

		(var uiNumber:str = "campaignMissionParams.uiNumber")
	)

	(style
		(bind width "_imageWidth ? _imageWidth : 80px")
		(bind height "_imageHeight ? _imageHeight : 80px")
		(backgroundImage = 'url:../campaigns/missions_pin/campaign_pin.png')
		(backgroundSize = "fill")
		(align = "center|middle")
	)

	(tf
		(class $TextDefaultBold21NM)
		(style (alpha = "TC"))
		(bind text "uiNumber")
	)
)

(def element TooltipSystemShipStereotype (_shipId:number, _isReady:bool)
	(bind visible "_isReady")
	(style (width = 100%))

	(element ShipLineItemNM
		_shipId = "_shipId"
		_fontClass = '$TextDefaultBold17NM'
	)
)

(def element TooltipSystemHeaderIconCrew (_imageUrl:str, _imageWidth:number, _imageHeight:number, _iconAmount:str, _data:dict)
	(element CrewStereotype
		_crewHistoryId =				"'crewHistoryId'	in _data ? _data.crewHistoryId		: null"
		_crewId =						"'crewId'			in _data ? _data.crewId				: null"
		_shipClass =					"'shipSubtype'		in _data ? _data.shipSubtype		: null"
		_hideSkillPoints =				"'hideSkillPoints'	in _data ? _data.hideSkillPoints	: null"
		_showFreeSkillPointsCounter =	false
		_size =							"SIZE.SMALL"
		_isAnimated =					false
		_showPeculiarityInfo =	false
	)
)

(def element TooltipSystemIconWithCounter (_imageUrl:str, _imageWidth:number, _imageHeight:number, _iconAmount:str, _data:dict="null")
	(scope
		(var imageUrl:str = "_imageUrl")
	)

	(style
		(backgroundSize = "cover")
		(bind width "_imageWidth")
		(bind height "_imageHeight")
		(bind backgroundImage "imageUrl")
	)

	(block
		(style (position = "absolute") (right = 0) (bottom = 0))
		(controller $Instance renderer='TooltipSystemHeaderIconCounter'
			(bind enabled "_iconAmount != '0'")
			(args
				_iconAmount="_iconAmount"
			)
		)
	)
)

(def element TooltipSystemHeaderIconCounter (_iconAmount:str)
	(tf
		(class $TextDefaultBold19NM)
		(bind text "_iconAmount")
	)
	(tf
		(style (position = "absolute"))
		(class $TextDefaultBold19NM)
		(bind text "_iconAmount")
	)
)

(def element TooltipSystemSimpleIcon (_imageUrl:str, _imageWidth:number, _imageHeight:number, _iconAmount:str, _data:dict="null")
	(style
		(backgroundSize = "cover")
		(bind width "_imageWidth ")
		(bind height "_imageHeight")
		(bind backgroundImage "_imageUrl")
	)
	(bind colorTransform "_data && 'colorTransform' in _data ? _data.colorTransform : {}")
)

(def element TooltipSystemHeaderIconCrewSkill (_imageUrl:str, _imageWidth:number, _imageHeight:number, _iconAmount:str, _data:dict="null")
	(scope
		(var showEpic:bool = "_data && 'isEpic' in _data && _data.isEpic")
	)

	(style
		(bind width "_imageWidth")
		(bind height "_imageHeight")
	)

	(block
		(class $Fullsize)
		(style
			(backgroundSize = "cover")
			(bind backgroundImage "_imageUrl")
			(bind alpha "_data && 'isLearned' in _data && _data.isLearned	? CREW_SKILL_ICON_ALPHA.LEARNED
																			: CREW_SKILL_ICON_ALPHA.TOOLTIP_DEFAULT")
		)
		(bind colorTransform "_data && 'colorTransform' in _data ? _data.colorTransform : {}")
	)

	(block
		(bind visible "showEpic")

		(style (position = "absolute"))

		(controller $Instance renderer='CrewSkillEpicIcon'
			(bind enabled "showEpic")
		)
	)
)

(def element TooltipSystemHeaderIconCamoRepaint (_imageUrl:str, _imageWidth:number, _imageHeight:number, _iconAmount:str, _data:dict)
	(element CamouflageRepaintedIcon
		_camouflageId =		"_data.camouflageId"
		_fakeColorScheme =	"_data.fakeColorScheme"
	)
)

(def element TooltipSystemHeaderIconRibbon (_imageUrl:str, _imageWidth:number, _imageHeight:number, _iconAmount:str, _data:dict="null")
	(style
		(backgroundSize = "cover")
		(bind width "_imageWidth")
		(bind height "_imageHeight")
		(bind backgroundImage "_imageUrl")
	)

	(block
		(style (position = "absolute") (right = 6) (bottom = 6))
		(controller $Instance renderer='TooltipSystemHeaderIconCounter'
			(bind enabled "_iconAmount != '0'")
			(args
				_iconAmount="_iconAmount"
			)
		)
	)
)

(def element TooltipSystemHeaderIconEcoBoost (_imageUrl:str, _imageWidth:number, _imageHeight:number, _iconAmount:str, _data:dict)
	(style
		(width = 80px)
		(height = 80px)
		(bind backgroundImage "	_data.type == SC.Common.ECOBOOST_TYPES.COMMON	? 'url:../eco_boosts/common/' + _data.paramsId + '.png' :
								_data.type == SC.Common.ECOBOOST_TYPES.LINKABLE	? 'url:../eco_boosts/multiboosts/linkable.png' :
								_data.type == SC.Common.ECOBOOST_TYPES.GLOBAL	? 'url:../eco_boosts/multiboosts/globalboost.png'
																				: 'url:../eco_boosts/multiboosts/clanboost.png'")
	)
)

(def element TooltipSystemHeaderWithIconAndText (_imageUrl:str='', _imageWidth:number=0, _imageHeight:number=0, _headerText:str='',
												_subheaderText:str='', _headerIconType:number=0, _iconAmount:str='',
												_unifiedStatus:str="SC.Ui_styles.UNIFIED_STATUS.DEFAULT", _data:dict=null)
	(scope
		(var headerIconType:number = "_headerIconType   ? _headerIconType
														: SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.SIMPLE")

		(var iconRendererItem:str = "	headerIconType == SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.SIMPLE			?	'TooltipSystemSimpleIcon'				:
										headerIconType == SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.WITH_AMOUNT		?	'TooltipSystemIconWithCounter'			:
										headerIconType == SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.CAMO_REPAINT		?	'TooltipSystemHeaderIconCamoRepaint'	:
										headerIconType == SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.RIBBON			?	'TooltipSystemHeaderIconRibbon'			:
										headerIconType == SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.CREW				?	'TooltipSystemHeaderIconCrew'			:
										headerIconType == SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.ECO_BOOST		?	'TooltipSystemHeaderIconEcoBoost'		:
										headerIconType == SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.CAMPAIGN			?	'TooltipSystemHeaderIconCampaignView'	:
										headerIconType == SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.CREW_SKILL		?	'TooltipSystemHeaderIconCrewSkill'
																														:	'TooltipSystemIconWithCounter'")
	)

	(style (width = 100%) (bind minHeight "_imageHeight") (flow = "horizontal") (align = "middle"))

	(block
		(style (height = 100%) (align = "top") (marginRight = "SXS"))
		(controller $Instance
			(bind renderer "iconRendererItem")
			(args
				_imageWidth =	"_imageWidth"
				_imageHeight =	"_imageHeight"
				_imageUrl =		"_imageUrl"
				_iconAmount =	"_iconAmount"
				_data =			"_data"
			)
		)
	)

	(block
		(style (width = 100%))

		(controller $Instance renderer='TooltipSystemHeaderSubheaderText'
			(bind enabled "headerIconType != SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.CREW")
			(args
				_headerText =		"_headerText"
				_subheaderText =	"_subheaderText"
				_unifiedStatus =	"_unifiedStatus"
			)
		)

		(controller $Instance renderer='TooltipSystemHeaderSubheaderTextCrewOnly'
			(bind enabled "headerIconType == SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.CREW")
			(args
				_headerText =		"_headerText"
				_subheaderText =	"_subheaderText"
				_unifiedStatus =	"_unifiedStatus"
				_crewStarIcon =		"_data && 'crewStarIcon' in _data ? _data.crewStarIcon : 'common.png'"
			)
		)
	)
)

(def element TooltipSystemParamsModifiersListTTX (_attributesNegative:array, _attributesPositive:array, _attributesNeutral:array, _ownerId:number=0)
	(style
		(width = 100%)
	)

	(block
		(style (width = 100%))
		(controller $Repeat renderer='ParamsModifierItemTooltipSystemTTX'
			(bind count "_attributesPositive ? _attributesPositive.length : 0")
			(args _attribute="_attributesPositive[$index]" _ownerId="_ownerId")
		)
	)

	(block
		(style (width = 100%))
		(controller $Repeat renderer='ParamsModifierItemTooltipSystemTTX'
			(bind count "_attributesNegative ? _attributesNegative.length : 0")
			(args _attribute="_attributesNegative[$index]" _ownerId="_ownerId")
		)
	)

	(block
		(style (width = 100%))
		(controller $Repeat renderer='ParamsModifierItemTooltipSystemTTX'
			(bind count "_attributesNeutral ? _attributesNeutral.length : 0")
			(args _attribute="_attributesNeutral[$index]" _ownerId="_ownerId")
		)
	)
)

(def element TooltipSystemHeaderWithParamsModifiersList (_attributesNegative:array=[], _attributesPositive:array=[], _attributesNeutral:array=[], _ownerId:number=0, _headerText:str='')
	(macro TOOLTIP_SYSTEM_PARAMS_CONTAINER)

	(block
		(style (width = 100%) (padding = "M") (paddingTop = "SXS") (paddingBottom = 1px))

		(block
			(style (width = 100%) (bind marginBottom "!_headerText.empty ? M : 0px"))
			(controller $Instance renderer='TooltipSystemSecondaryHeaderText'
				(bind enabled "!_headerText.empty")
				(args
					_headerText = "_headerText"
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Repeat renderer='ParamsModifierItemTooltipSystem'
				(bind count "_attributesPositive.length")
				(args _attribute="_attributesPositive[$index]" _ownerId="_ownerId")
			)
		)

		(block
			(style (width = 100%))
			(controller $Repeat renderer='ParamsModifierItemTooltipSystem'
				(bind count "_attributesNegative.length")
				(args _attribute="_attributesNegative[$index]" _ownerId="_ownerId")
			)
		)

		(block
			(style (width = 100%))
			(controller $Repeat renderer='ParamsModifierItemTooltipSystem'
				(bind count "_attributesNeutral.length")
				(args _attribute="_attributesNeutral[$index]" _ownerId="_ownerId")
			)
		)
	)
)

(def element TooltipSystemParamsModifiersList (_attributesNegative:array=[], _attributesPositive:array=[], _attributesNeutral:array=[], _ownerId:number=0)
	(macro TOOLTIP_SYSTEM_PARAMS_CONTAINER)
	(scope
		(macro PULL_CURRENT_TOP_WINDOW_NAME)
		
		(struct portRoute = PULL_FULL_ROUTE(_id = "SC.Ui_windows.ROUTE.PORT"))
		(struct dockRoute = PULL_FULL_ROUTE(_id = "SC.Ui_windows.WINDOWS.DOCK"))

		(var isInWindowWithoutUselessAttrs:bool =	"currentTopWindowName == 'ModalWindowAlmanacs' ||
													currentTopWindowName == 'ModalWindowArcEventMainScreen' ||
													currentTopWindowName == 'ModalWindowArcEventConfirmSide' ||
													currentTopWindowName == 'ModalWindowPostBattleSSE' ||
													currentTopWindowName == 'ModalWindowClaimSseReward' ||
													currentTopWindowName == 'ModalWindowSnowflakesTakeBonuses' ||
													currentTopWindowName == 'ModalWindowSnowflakesConfirmChoice' ||
													currentTopWindowName == 'ModalWindowRewardContainer' ||
													currentTopWindowName == 'ModalWindowCrewInfo' ||
													currentTopWindowName == 'ModalWindowUnlockCrewSkill' ||
													currentTopWindowName == 'ResultsScreen'")

		(var isInPortRouteWithoutUselessAttrs:bool = "portRoute.activeChild == SC.Ui_windows.ROUTE.PROFILE")

		(var isInDockRouteWithoutUselessAttrs:bool = "dockRoute.activeChild == SC.Ui_windows.ROUTE.BARGE ||
													dockRoute.activeChild == SC.Ui_windows.ROUTE.STRATEGIC_ACTIONS ||
													dockRoute.activeChild == SC.Ui_windows.ROUTE.SSE ||
													dockRoute.activeChild == SC.Ui_windows.ROUTE.BATTLE_PASS ||
													dockRoute.activeChild == SC.Ui_windows.ROUTE.CAMPAIGNS
		")

		(var notMarkUseless:bool = "isInWindowWithoutUselessAttrs || isInPortRouteWithoutUselessAttrs || isInDockRouteWithoutUselessAttrs")
	)

	(block
		(style (width = 100%) (padding = "M") (paddingTop = "SXS") (paddingBottom = 1))
		
		(block
			(style (width = 100%))
			(controller $Repeat renderer='ParamsModifierItemTooltipSystem'
				(bind count "_attributesPositive ? _attributesPositive.length : 0")
				(args _attribute="_attributesPositive[$index]" _notMarkUseless="notMarkUseless" _ownerId="_ownerId")
			)
		)

		(block
			(style (width = 100%))
			(controller $Repeat renderer='ParamsModifierItemTooltipSystem'
				(bind count "_attributesNegative ? _attributesNegative.length : 0")
				(args _attribute="_attributesNegative[$index]" _notMarkUseless="notMarkUseless" _ownerId="_ownerId")
			)
		)

		(block
			(style (width = 100%))
			(controller $Repeat renderer='ParamsModifierItemTooltipSystem'
				(bind count "_attributesNeutral ? _attributesNeutral.length : 0")
				(args _attribute="_attributesNeutral[$index]" _notMarkUseless="notMarkUseless" _ownerId="_ownerId")
			)
		)
	)
)

(def element TooltipSystemPriceTagLine (_title:str, _priceInfo:dict, _isAutoWidth:bool=false)
	(style (flow = "horizontal") (width = 100%))

	(tf
		(style
			(alpha = "TA")
			(leading = -2)
			(marginRight = "S")
			(bind width "_isAutoWidth ? auto : 100%")
		)
		(class $TextDefaultNM)
		(bind text "_title")
	)

	(controller $Instance renderer='PriceTag'
		(bind enabled "_priceInfo")
		(args
			_priceInfo			= "_priceInfo"
			_showDiscountTag	= true
		)
	)
)

(def element TooltipSystemCounterLine (_title:str, _count:number, _measurement:str='', _isAutoWidth:bool=false, _isCounterBold:bool=false)
	(style (flow = "horizontal") (width = 100%))

	(tf
		(style
			(alpha = "TA")
			(leading = -2)
			(marginRight = "S")
			(bind width "_isAutoWidth ? auto : 100%")
		)
		(class $TextDefaultNM)
		(bind text "_title")
	)

	(tf
		(style (alpha = "TA"))
		(bind class "_isCounterBold ? '$TextDefaultBoldNM' : '$TextDefaultNM'")
		(bind text "formatSeparator(_count) + (_measurement ? ' ' + _measurement : '')")
	)
)

(def element TooltipSystemMultiplierLine (_title:str, _multiplier:number, _hasMultiplySymbol:bool=true, _isAutoWidth:bool=false, _isCounterBold:bool=false, _unifiedStatus:str="SC.Ui_styles.UNIFIED_STATUS.DEFAULT", _showStatusIcon:bool=true)

	(macro UNIFIED_STATUS_TO_COLOR_AND_ALPHA "_unifiedStatus" "'textColor'" "'textAlpha'")

	(style
		(flow = "horizontal")
		(width = 100%)
	)

	(tf
		(class $TextDefaultNM)
		(style
			(marginRight = "S")
			(textColor = "textColor")
			(leading = -2)
			(alpha = "textAlpha")
			(bind width "_isAutoWidth ? auto : 100%")
		)
		(bind text "_title")
	)

	(hblock
		(tf
			(bind visible "_hasMultiplySymbol")
			(bind class "_isCounterBold ? '$TextDefaultBoldNM' : '$TextDefaultNM'")
			(style
				(leading = -2)
				(textColor = "textColor")
				(letterSpacing = -3)
				(alpha = "textAlpha")
			)
			(text = 'IDS_X_MULTIPLIER')
		)

		(tf
			(bind class "_isCounterBold ? '$TextDefaultBoldNM' : '$TextDefaultNM'")
			(style
				(leading = -2)
				(textColor = "textColor")
				(marginRight = 6px)
				(alpha = "textAlpha")
			)
			(bind text "_multiplier")
		)
	)
)

(def element ParamsModifierItemTooltipSystemTTX (_attribute:dict, _ownerId:number=0)
	(scope
		(var parameterEntity:gfx = "$datahub.getPrimaryCompositeEntity(CC.parameter, _ownerId, _attribute.paramName)")
		(var measuredValue:str = "parameterEntity && parameterEntity.parameterView	? parameterEntity.parameterView.currentValue
																					: _attribute.measuredValue"
									(event "parameterEntity.parameterView.evCurrentValueChanged"))

		(var valueColor:number =  "	_attribute.category == 'positive' 	? SC.Ui_styles.SERVICE_COLORS.GREEN :
									_attribute.category == 'negative' 	? SC.Ui_styles.SERVICE_COLORS.RED
																		: SC.Ui_styles.SERVICE_COLORS.WHITE")
		(var labelColor:number =  "measuredValue ? SC.Ui_styles.SERVICE_COLORS.WHITE : valueColor")
	)
	(class $TTXValueRowHorizontal)

	(tf
		(class $TextDefaultNM)
		(style
			(width = 100%)
			(leading = -3) (marginRight = 6px)
			(bind textColor "labelColor")
			(bind alpha "(_attribute.category == 'negative' && !measuredValue) ? 1 : 0.8")
		)
		(bind text "_attribute.attributeIDS")
	)

	(tf
		(class $TextDefaultNM)
		(style (bind textColor "valueColor"))

		(bindcall substitute imageOffset=5 substitutionMap="{	'[battleship]': 'battleship_small_own',
																'[aircarrier]': 'carrier_small_own',
																'[destroyer]': 'destroyer_small_own',
																'[submarine]': 'submarine_small_own'
															}"
							sourceText="measuredValue" postfix="''" init=true)
	)

	(tf
		(bind visible "_attribute.measure")
		(class $TextDefaultNM)
		(style
			(bind textColor "valueColor")
			(marginLeft = "XS")
			(bind alpha "_attribute.category == 'positive' ? 0.65 : 0.8")
		)
		(bind text "_attribute.measure")
	)
)

(def element ParamsModifierItemTooltipSystem (_attribute:dict, _notMarkUseless:bool, _ownerId:number=0)
	(scope
		(var parameterEntity:gfx = "'paramName' in _attribute && _ownerId ? $datahub.getPrimaryCompositeEntity(CC.parameter, _ownerId, _attribute.paramName) : null")
		(var parameterView:gfx = "parameterEntity ? parameterEntity.parameterView : null")

		(var currentValue:str = "parameterView ? parameterView.currentValue : ''" (event "parameterEntity.parameterView.evCurrentValueChanged"))
		(var measuredValue:str= "parameterView ? currentValue : toString(_attribute.measuredValue)")

		(var isPositiveAttributeCategory:bool = "_attribute && _attribute.category == 'positive'")
		(var isNegativeAttributeCategory:bool = "_attribute && _attribute.category == 'negative'")
		(var attributeMeasureText:str = "_attribute && 'measure' in _attribute ? _attribute.measure : ''")

		(var valueColor:number =  "	isPositiveAttributeCategory 	? SC.Ui_styles.SERVICE_COLORS.GREEN :
									isNegativeAttributeCategory 	? SC.Ui_styles.SERVICE_COLORS.RED
																	: SC.Ui_styles.SERVICE_COLORS.WHITE")

		(var labelColor:number =  "measuredValue ? SC.Ui_styles.SERVICE_COLORS.WHITE : valueColor")
		(var measureAlpha:number = " attributeMeasureText == 'IDS_SHORT_DASH'	? TS :
												isPositiveAttributeCategory		? 0.65
																				: 0.8")

		(var isAttributeUseful:bool = "_notMarkUseless || (_attribute && (_attribute.isUseful == null || _attribute.isUseful))")
	)
	(style
		(flow = "horizontal")
		(width = 100%)
		(marginBottom = "SXS")
		(bind alpha "isAttributeUseful ? 1 : 0.45")
	)

	(tf
		(class $TextDefaultNM)
		(style
			(width = 100%)
			(leading = -3) (marginRight = 6px)
			(bind textColor "labelColor")
			(bind alpha "isNegativeAttributeCategory && !measuredValue ? 1 : 0.8")
		)

		(bind text "_attribute.attributeIDS")
	)

	(tf
		(class $TextDefaultNM)
		(style (bind textColor "valueColor"))

		(bindcall substitute imageOffset=5 substitutionMap="{	'[battleship]': 'battleship_small_own',
																'[aircarrier]': 'carrier_small_own',
																'[destroyer]': 'destroyer_small_own',
																'[submarine]': 'submarine_small_own'
															}"
							sourceText="measuredValue" postfix="''" init=true)
	)

	(tf
		(bind visible "attributeMeasureText")
		(class $TextDefaultNM)
		(style
			(bind textColor "valueColor")
			(marginLeft = "XS")
			(bind alpha "measureAlpha")
		)

		(bind text "attributeMeasureText")
	)
)

(def element TooltipSystemParamTextLine (_text:str, _value:str, _valueClass:str='$TextDefaultNM')
	(style (flow = "horizontal") (width = 100%))

	(tf
		(class $TextDefaultNM)
		(style (marginRight = 6px) (alpha = "TA"))
		(bind text "_text")
	)

	(tf
		(bind class "_valueClass")
		(style (width = 100%) (elideMode = true) (alpha = "TA"))
		(bind text "_value")
	)
)

(def element WeaponBattleTooltipParamsList (_params:dict, _paramSet:array, _entityId:number)
	(macro TOOLTIP_SYSTEM_PARAMS_CONTAINER)

	(block
		(style (width = 100%) (padding = "M") (paddingTop = "SXS") (paddingBottom = 1))
		(controller $Repeat renderer='WeaponBattleTooltipParamsRow' 
			(bind count "_paramSet.length")
			(args _params="_params" _rowParams="_paramSet[$index]" _entityId="_entityId")
		)
	)
)

(def element WeaponBattleTooltipParamsRow (_params:dict, _rowParams:dict, _entityId:number)
	(scope
		(var alternateValueEntity:gfx = "$datahub.getPrimaryCompositeEntity(CC.parameter, _entityId, _rowParams.alternateValueEntity)")
		(var alternateValueParameter:gfx = "alternateValueEntity.parameter")
		(var alternateValue:number = "alternateValueParameter.currentValue" (event "alternateValueParameter.evChanged"))
		
		(var isHiddenWhenNullAlternateValue:bool = "'isNullAlternateValueHidden' in _rowParams && _rowParams.isNullAlternateValueHidden
																									? alternateValue == null
																									: false")
	)

	(style
		(flow = "horizontal")
		(width = 100%)
		(marginBottom = "SXS")
	)

	(bind visible "_rowParams.paramName in _params && !isHiddenWhenNullAlternateValue")

	(tf
		(class $TextDefaultNM)
		(style
			(width = 100%)
			(leading = -3)
			(marginRight = 6px)
		)
		(alpha = "TA")
		(bind text "_rowParams.title")
	)

	(block
		(controller $Instance
			(bind enabled "_rowParams.paramName in _params && _rowParams.type != TOOLTIP_PARAMETER_WITHOUT_VALUE")
			(bind renderer "WEAPON_PARAM_TYPE_TO_RENDERER[_rowParams.type]")
			(args
				_entityId	= "_entityId"
				_rowParams	= "_rowParams"
				_params		= "_params"
			)
		)
	)
)

(def element StringParamRenderer (_entityId:number, _rowParams:dict, _params:gfx)
	(scope
		(var alternateValueEntity:gfx = "$datahub.getPrimaryCompositeEntity(CC.parameter, _entityId, _rowParams.alternateValueEntity)")
		(var alternateValueParameter:gfx = "alternateValueEntity.parameter")
		(var alternateValue:str = "alternateValueParameter.currentValue" (event "alternateValueParameter.evChanged"))

		(var paramValue:str = "_params ? _params[_rowParams.paramName] : ''")
	)

	(tf
		(class $TextDefaultNM)
		(bind text "_rowParams.alternateValueEntity ? alternateValue : paramValue")
	)
)

(def element NumberParamRenderer (_entityId:number, _rowParams:dict, _params:gfx)
	(scope
		(var alternateValueEntity:gfx = "$datahub.getPrimaryCompositeEntity(CC.parameter, _entityId, _rowParams.alternateValueEntity)")
		(var alternateValueParameter:gfx = "alternateValueEntity.parameter")
		(var alternateValue:number = "alternateValueParameter.currentValue" (event "alternateValueParameter.evChanged"))

		(var paramValue:number = "_params ? _params[_rowParams.paramName] : 0")
		(var roundNumber:number = "_rowParams ? _rowParams.roundNumber : 0")

		(var finalValue:number = "_rowParams.alternateValueEntity && alternateValueParameter ? alternateValue : paramValue")
	)

	(element NumberWithMeasureRenderer
			_value = "finalValue"
			_roundNumber = "roundNumber"
			_measure = "_rowParams.measure"
	)
)

(def element ArrayParamRenderer (_entityId:number, _rowParams:dict, _params:gfx)
	(scope
		(var alternateValueEntity:gfx = "$datahub.getPrimaryEntity(CC.parameter, toString(_entityId) + '_' + _rowParams.alternateValueEntity)")
		(var alternateValueParameter:gfx = "alternateValueEntity.parameter")
		(var alternateValue:number = "alternateValueParameter.currentValue" (event "alternateValueParameter.evChanged"))

		(var paramValues:array = "_params ? _params[_rowParams.paramName] : [0]")
		(var roundNumber:number = "_rowParams ? _rowParams.roundNumber : 0")

		(var finalValue:number = "_rowParams.alternateValueEntity && alternateValueParameter ? alternateValue : paramValues[$index]")
	)

	(style (flow = "horizontal"))

	(controller $Repeat renderer='NumberWithMeasureRenderer' count="paramValues.length"
		(args
			_value = "finalValue"
			_roundNumber = "roundNumber"
			_measure = "_rowParams.measure[$index]"
			_drawDelimiter = "$index != paramValues.length - 1"
		)
	)
)

(def element NumberWithMeasureRenderer (_value:number, _roundNumber:number, _measure:str, _drawDelimiter:bool = false)
	(scope
		(var roundedValue:number =	"_roundNumber > 0 	? round(_value * pow(10, _roundNumber) ) / pow(10, _roundNumber)
														: round(_value)")
		(var measuredValue:str = 	"_roundNumber >= 0 	? formatFloatingPoint(roundedValue, _roundNumber, _roundNumber > 0)
																		: _value")
	)

	(style (flow = "horizontal"))

	(tf
		(class $TextDefaultNM)
		(bindcall substitute imageOffset=5 substitutionMap="{	'[battleship]': 'battleship_small_own',
																'[aircarrier]': 'carrier_small_own',
																'[destroyer]': 'destroyer_small_own',
																'[submarine]': 'submarine_small_own' 
															}"
							 sourceText="measuredValue" postfix="''" init=true)
	)

	(tf
		(visible = "_measure")
		(class $TextDefaultNM)
		(alpha = 0.8)
		(style
			(bind marginLeft "_measure ? 6 : 0")
		)
		(bind text "_measure ? trPlural(_measure, roundedValue) : ''")
	)

	(tf
		(visible = "_drawDelimiter")
		(class $TextDefaultNM)
		(alpha = 0.7)
		(text = ' / ')
	)
)

(def element TooltipSystemBattleParamsList (_paramSet:array, _paramOwner:gfx)
	(macro TOOLTIP_SYSTEM_PARAMS_CONTAINER)
	(block
		(style (width = 100%) (paddingLeft = "M") (paddingRight = "M") (paddingTop = "SXS"))
		(controller $Repeat renderer='ShipParamsListElement' 
			(bind count "_paramSet.length")
			(args _rowParams="_paramSet[$index]" _paramOwner="_paramOwner" _horizontalPaddings=0)
		)
	)
)

(def element TooltipSystemTaskRestrictions (_restrictionEntity:dhEntity=null, _battleTypes:array=null, _isPVEModifierApplied:bool=false)
	(scope
		(var restrictionEntity:dhEntity = "_restrictionEntity")
		(var battleTypes:array = "	_battleTypes		? _battleTypes :
									restrictionEntity	? restrictionEntity.battleTypesView.viewList
														: []")
		(var shipListRestrictions:dhComponent = "restrictionEntity.shipListRestrictions")
		(var shipRestrictions:array = "shipListRestrictions.selectedFilters ?: []")
	)
	(style (width = 100%))
	(tf
		(class $TextDefaultNM)
		(style (alpha = "TA"))
		(text = 'IDS_SSE_TASK_RESTRICTIONS')
	)

	(hblock
		(style (width = 100%) (marginTop = "SXS"))

		(hblock
			(bind visible "battleTypes.length > 0")
			(style (marginLeft = "-XXS") (marginTop = "-XXS"))

			(controller $Repeat renderer='TaskBattleTypeRestriction'
				(bind count "battleTypes.length")
				(args
					_battleType = "battleTypes[$index].battleName"
					_isPVEModifierApplied = "_isPVEModifierApplied && battleTypes[$index].hasPVEModifier"
					_customIcon = "battleTypes[$index].customIconName"
				)
			)
		)
		(block
			(bind visible "shipRestrictions.length > 0 && battleTypes.length > 0")
			(style (height = 21px) (marginRight = "XS"))
			(element VerticalDivider)
		)
		(block
			(style (bind marginLeft "battleTypes.length ? S : 0"))

			(controller $Instance renderer='ShipRestrictions'
				(bind enabled "shipRestrictions.length > 0")
				(args
					_restrictionsEntityId = "restrictionEntity.id"
					_withShipTypeCounters = false
					_isFromTooltip = true
				)
			)
		)
	)
	(block
		(style  (width = "100%") (bind marginTop "_isPVEModifierApplied ? S : 0"))
		(controller $Instance
			(renderer='TooltipSystemStatusLine')
			(bind enabled "_isPVEModifierApplied")
			(args
				_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.PVE_MODIFIER"
				_text = 'IDS_PVE_MODIFIER_TOOLTIP_DESC_TASK'
			)
		)
	)
)

(def element TooltipSystemShipLine (_shipId:number = "null")
	(style (width = 100%))

	(controller $Instance renderer='ShipLineItemNM'
		(bind enabled "_shipId != null")
		(args
			_shipId =	"_shipId"
			_withFlag = true
			_fontClass = '$TextDefaultBoldNM'
		)
	)
)

(def element TooltipSystemDueDateStatusLine (_dueDateTimeStamp:number, _substTextIDS:str = '')
	(scope
		(var serverTime:number = "currentServerSeconds()" (event "evInfrequent"))
		(var timeLeft:number = "_dueDateTimeStamp - serverTime")
		(var isTimeRunningOut:bool = "timeLeft < DAY_IN_SEC")

		(var formattedDueDate:str = "formatTime(_dueDateTimeStamp, 'dd.MM.yy', '', true)")
	)
	(style (width = 100%))
	(element TooltipSystemStatusLine
		_unifiedStatus =	"isTimeRunningOut	? SC.Ui_styles.UNIFIED_STATUS.DATE_ATTENTION
												: SC.Ui_styles.UNIFIED_STATUS.DATE"
		_text =				"_substTextIDS ? subst(_substTextIDS, [], { _date: formattedDueDate }) : toString(formattedDueDate)"
	)
)

(def element TooltipSystemTimeLeftStatusLine (_daysLeft:number=0, _substTextIDS:str='', _zeroTimeTextIDS:str='', _timeLeftTimeStamp:number=0)
	(scope
		(var serverTime:number = "currentServerSeconds()" (event "evInfrequent"))
		(var timeLeftTimeStamp:number = " _timeLeftTimeStamp	? _timeLeftTimeStamp
																: (serverTime + (DAY_IN_SEC * _daysLeft))")
		(var timeLeft:number = "max(timeLeftTimeStamp - serverTime, 0)")
		(var formattedTimeLeft:str = "formatTime(timeLeft, 'HIGHEST,WITH_DAYS')")
		(var isTimeRunningOut:bool = "timeLeft < DAY_IN_SEC")

		(var tooltipSystemStatusLineContent:dict = "timeLeft <= 0 &&
													_zeroTimeTextIDS	?	{	unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.DATE_ATTENTION,
																				text: _zeroTimeTextIDS}
																		:	{	unifiedStatus:	isTimeRunningOut	? SC.Ui_styles.UNIFIED_STATUS.DATE_ATTENTION
																													: SC.Ui_styles.UNIFIED_STATUS.DATE,
																				text: subst(_substTextIDS, [], { _timeLeft: formattedTimeLeft })
																			}")
	)
	(style (width = 100%))

	(element TooltipSystemStatusLine
		_unifiedStatus = "tooltipSystemStatusLineContent.unifiedStatus"
		_text = "tooltipSystemStatusLineContent.text"
	)
)

(def element TooltipSystemStaticTimeLeftStatusLine (_timeLeftTimeStamp:number, _substTextIDS:str = '')
	(scope
		(var formattedTimeLeft:str = "formatTime(_timeLeftTimeStamp, 'HIGHEST,WITH_DAYS')")
		(var tooltipSystemStatusLineContent:dict = "{	unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.DATE,
														text: _substTextIDS ? subst(_substTextIDS, [], { _timeLeft: formattedTimeLeft }) : formattedTimeLeft
													}")
	)
	(style (width = 100%))

	(element TooltipSystemStatusLine
		_unifiedStatus = "tooltipSystemStatusLineContent.unifiedStatus"
		_text = "tooltipSystemStatusLineContent.text"
	)
)

(def element TooltipSystemProgressBarBlock (_title:str, _currentValue:number, _maxValue:number, _barColor:number=null,
											_unifiedStatus:str = "SC.Ui_styles.UNIFIED_STATUS.DEFAULT", _showPercent:bool=false, _progressIconPath:str='')
	(style (width = 100%))

	(element ProgressBarBlock
		_title = "_title"
		_currentValue = "_currentValue"
		_maxValue = "_maxValue"
		_barColor = "_barColor"
		_unifiedStatus = "_unifiedStatus"
		_showPercent = "_showPercent"
		_progressIconPath = "_progressIconPath"
	)
)

(def element TooltipSystemProgressDividedCounter (_title:str, _currentValue:number, _maxValue:number)
	(style
		(width = 100%)
		(flow = "horizontal")
	)

	(block
		(style (width = 100%))
		(tf
			(class $TextDefaultNM)
			(style
				(width = 100%)
				(alpha = "TC")
			)
			(bind text "_title")
		)
	)

	(tf
		(class $TextDefaultNM)
		(style (alpha = "TC"))
		(bind text "toString(_currentValue) + '/' + toString(_maxValue)")
	)
)

(def element TooltipSystemDoubleProgressBarBlock (_title:str, _currentValue:number, _valueIncrement:number, _maxValue:number, _barColor:str=null, _unifiedStatus:str = "SC.Ui_styles.UNIFIED_STATUS.DEFAULT", _showPercent:bool=false)
	(scope
		(var progress:number =			"_currentValue / _maxValue")
		(var progressBefore:number =	"(_currentValue - _valueIncrement) / _maxValue")
		(var progressIncrement:number =	"_currentValue == _maxValue	? 1 - progressBefore : _valueIncrement / _maxValue")

		(var maxValue:number = "_showPercent ? 0 : _maxValue")

		(var curValue:number = "_currentValue")
		(var curValueStr:str = "toString(round(progress * 100)) + '%'")
	)
	(macro UNIFIED_STATUS_TO_COLOR_AND_ALPHA "_unifiedStatus" "'textColor'" "'textAlpha'")
	(style (width = 100%))

	(tf
		(class $TextDefaultNM)
		(style
			(width = 100%) (alpha = "TA") (leading = -2) (marginBottom = "S")
			(bind alpha "textAlpha")
			(bind textColor "textColor")
		)
		(bind text "tr(_title)")
	)
	(element DoubleProgressBar
		_progress1 =	"progressBefore"
		_color1 =		"SC.Ui_styles.SERVICE_COLORS.ORANGE"
		_progress2 =	"progressIncrement"
		_color2 =		"SC.Ui_styles.SERVICE_COLORS.YELLOW"

		(style (width = 100%) (marginRight = -1px) (marginLeft = -1px))
	)

	(element DefaultDividedCounter
		_curValueTextClass = '$TextDefaultNM'
		_doNotHideOnZeroMaxValue = true
		_curValue = "!_showPercent ? curValue : null"
		_curValueStr = "_showPercent ? curValueStr : null"
		_maxValue = "maxValue"
		_unifiedStatus = "_unifiedStatus"

		(style (marginTop = "XS"))
	)
)

(def element TooltipSystemShipWithTitle (_shipId:number, _title:str, _unifiedStatus:str = "SC.Ui_styles.UNIFIED_STATUS.DEFAULT", _withFlag:bool=false)
	(macro UNIFIED_STATUS_TO_COLOR_AND_ALPHA "_unifiedStatus" "'textColor'" "'textAlpha'")
	(style (width = 100%) (marginTop = "-SXS"))

	(tf
		(class $TextDefaultNM)
		(style (marginRight = "SXS") (marginTop = "SXS") (leading = "-2") (bind textColor "textColor") (bind alpha "textAlpha"))
		(bind text "_title")
	)

	(element ShipLineItemNM
		_shipId = "_shipId"
		_withFlag = "_withFlag"

		(style (marginTop = "SXS"))
	)
)

(def element TooltipSystemHeaderShip (_shipId:number, _withFlag:bool=false, _fontClass:str='$TextDefaultBoldNM')
	(style (width = 100%) (marginTop = "XS"))

	(element ShipLineItemNM
		_shipId = "_shipId"
		_withFlag = "_withFlag"
		_fontClass = "_fontClass"
		_isFullName = true
	)
)

(def element TooltipSystemHeaderShipType (_shipType:str)
	(style
		(flow = "horizontal")
		(width = 100%)
		(align = "middle")
		(marginTop = "XXS")
	)

	(block
		(style
			(marginTop = "-S")
			(marginBottom = -10px)
			(marginLeft = -5px)
			(marginRight = 3px)
		)
		(element ShipIcon
			_shipType = "_shipType"
		)
	)

	(element TooltipSystemHeaderSubheaderText
		_headerText = "tr('IDS_' + toUpper(_shipType) + 'S')"
	)
)

(def element TOOLTIP_SYSTEM_ELEMENTS_GROUP (_isEnabled:bool=true)
	(bind visible "_isEnabled")
	(style (width = 100%) (marginBottom = "-SXS"))
)

(def element TOOLTIP_SYSTEM_GROUP_ELEMENT (_isEnabled:bool=true)
	(bind visible "_isEnabled")
	(style (width = 100%) (marginBottom = "SXS"))
)

(def element TooltipSystemTeamBattleResultsAchievementsList (_achievements:dict)
	(scope
		(var achievementEntity:dhEntity = "getPrimaryEntity(CC.achievement, _achievements.id)")
		(var achievementName:str = "achievementEntity.achievementInfo.name")
		(var achievementImageUrl:str = "'url:../achievements/icon_achievement_' + achievementName + '.png'")
		(var nameIDS:str = "achievementEntity.achievementInfo.nameIDS")
		(var amount:number = "_achievements.amount")
		(var typeIDS:str = "toUpper('IDS_ACHIEVEMENT_TYPE_' + achievementEntity.achievementInfo.uiType)")
	)
	(style
		(width = 100%)
	)

	(element TooltipSystemHeaderWithIconAndText
			_imageUrl = "achievementImageUrl"
			_imageWidth = 60
			_imageHeight = 60
			_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.CHECK"
			_headerText = "nameIDS"
			_headerIconType = "SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.WITH_AMOUNT"
			_subheaderText = "typeIDS"
			_iconAmount = "amount > 1 ? 'x' + amount : ''"
	)
)

(def element TooltipSystemAchievementsList (_achievementsIds:array)
	(style (width = 100%))
	(macro TOOLTIP_SYSTEM_INNER_PANEL_BACKGROUND)
	(block
		(style (flow = "tile_horizontal") (width = 100%) (padding = "-S"))
		(controller $Repeat renderer = 'TooltipSystemAchievementItem' 
			(bind count "_achievementsIds.length")
			(args
				_achievementData = "_achievementsIds[$index]"
			)
		)
	)
)

(def element TooltipSystemAchievementItem (_achievementData:array)
	(scope
		(var achievementEntity:gfx = "$datahub.getPrimaryEntity(CC.achievement, _achievementData[0])")
	)
	(style (margin = "S"))
	(controller $Instance renderer='AchievementIcon'
		(args
			_id = "achievementEntity.id"
			_amount = "_achievementData[1]"
			_size = "TOOLTIP_ACHIEVEMENT_ICON_SIZE"
		)
	)
)

(def element TooltipSystemSubstituteDescriptionText (_descriptionText:str)
	(scope
		(var keyboardBindingsApplier:dhComponent = "getSingleComponent(CC.keyboardBindingsApplier)")
	)
	(style (width = 100%))

	(tf
		(class $DescriptionHtmlTextStyleSheet)
		(style
			(width= 100%)
			(alpha = "TA")
			(leading = -2)
		)
		(bindcall substitute imageOffset=5 sourceText="'<body>' + tr(_descriptionText) + '</body>'" postfix='' init=true  (event "keyboardBindingsApplier.evKeyboardBindingsChanged"))
	)
)

(def element TooltipSystemAlterablePriceTagLine (_title:str, _priceInfo:dict)
	(style (flow = "horizontal") (width = 100%))

	(tf
		(class $TextDefaultNM)
		(style
			(width = 100%)
			(alpha = "TA")
			(leading = -2)
			(marginRight = "S")
		)
		(bind text "_title")
	)

	(element PriceTag
		_priceInfo			= "_priceInfo"
		_showDiscountTag	= true
	)
)

(def element TooltipSystemHeaderSubheaderTextWithMarkerNew (_headerText:str, _subheaderText:str='', _isMarkerNew:bool=false, _unifiedStatus:str="SC.Ui_styles.UNIFIED_STATUS.DEFAULT")
	(macro UNIFIED_STATUS_TO_COLOR_AND_ALPHA "_unifiedStatus" "'textColor'" "'textAlpha'")
	(style (width = 100%))

	(hblock
		(style (width = 100%))
		(tf
			(name = 'tooltipSystemHeaderSubheaderTextWithMarkerNew')
			(class $TextDefaultBold19NM)
			(style
				(width = 100%)
				(leading = -4)
				(bind textColor "textColor")
				(bind alpha "textAlpha")
			)
			(bind text "_headerText")
		)

		(block
			(bind visible "_isMarkerNew")
			(style (marginLeft = 3px) (marginTop = -9px))

			(controller $Instance renderer='MarkerNew'
				(bind enabled "_isMarkerNew")
			)
		)
	)

	(tf
		(bind visible "_subheaderText")
		(class $TextDefaultNM)
		(style
			(width = 100%)
			(marginTop = "S")
			(leading = -2)
			(bind textColor "textColor")
			(bind alpha "textAlpha")
		)
		(bind text "_subheaderText")
	)
)

(def element TooltipSystemPlayerFormationStatusLine (_entityAccountId:number)
	(scope
		(var entityAccount:gfx = "$datahub.getEntity(_entityAccountId)")

		(var inBattle:bool = "entityAccount.accountStatus.inBattle	?: false" (event "entityAccount.accountStatus.evInBattleChanged"))
		(var preBattlePlayerSimple:gfx = "entityAccount.preBattlePlayerSimple" (event "entityAccount.evAdded") (event "entityAccount.evRemoved"))
		(var isInFormation:bool = "preBattlePlayerSimple != null")

		(var teamId:number = "preBattlePlayerSimple.teamId ?: 0"	  		(event "preBattlePlayerSimple.evTeamIdChanged"))
		(var isMercenary:bool = "preBattlePlayerSimple.isMercenary" 		(event "preBattlePlayerSimple.evIsMercenaryChanged"))
		(var isInBattle:bool = "preBattlePlayerSimple.isInBattle" 			(event "entityAccount.preBattlePlayerSimple.evIsInBattleChanged"))
		(var isCommanderOwner:bool = "preBattlePlayerSimple.isCommander"	(event "preBattlePlayerSimple.evIsCommanderChanged"))
		(var isReady:bool = "preBattlePlayerSimple.isReady"					(event "preBattlePlayerSimple.evIsReadyChanged"))

		(var selfPlayerEntity:gfx = "$datahub.getSingleEntity(CC.accountSelf)")
		(var preBattleSelfPlayerSimple:gfx ="selfPlayerEntity.preBattlePlayerSimple" (event "selfPlayerEntity.evAdded"))
		(var selfTeamId:number = "preBattleSelfPlayerSimple.teamId" (event "preBattleSelfPlayerSimple.evTeamIdChanged"))
		(var isSelfTeam:bool = "teamId == selfTeamId")

		(var preBattleId:number = "preBattlePlayerSimple.preBattleId" (event "preBattlePlayerSimple.evPreBattleIdChanged"))
		(var preBattleEntity:gfx = "$datahub.getPrimaryEntity(CC.preBattle, preBattleId)")
		(var preBattleType:number = "preBattleEntity.preBattle.preBattleType")
		(var isTrainingRoomActive:bool = "preBattleType == PREBATTLE_TYPE_TRAINING_ROOM")

		(var trainingRoomPlayer:gfx = "entityAccount.trainingRoomPlayer" (event "entityAccount.evAdded") (event "entityAccount.evRemoved"))
		(var isTeamCommander:bool = "trainingRoomPlayer.isCommander" (event "trainingRoomPlayer.evUpdate"))
		(var isCommander:bool = "isCommanderOwner || (isTrainingRoomActive && isTeamCommander)")

		(var isTrainingNeutral:bool = "isTrainingRoomActive && teamId == SC.Common.TRAINING_ROOM_TEAMS_IDS.NEUTRAL_TEAM")
		(var isTrainingObserver:bool = "isTrainingRoomActive && teamId == SC.Common.TRAINING_ROOM_TEAMS_IDS.OBSERVER_TEAM")

		(var isInvitedToDivision:bool = "entityAccount.hasComponent(CC.playerInvitedToPrebattleInfo)" (event "entityAccount.evAdded") (event "entityAccount.evRemoved"))
		(var isInDivision:bool = "isInFormation && !isInvitedToDivision")
		(var isInFormationBattle:bool = "isInDivision && (isInBattle || inBattle)")

		(var playerRoleStr:str = "	isTrainingRoomActive	?	isTrainingNeutral	? 'IDS_TRAINING_ROOM_PLAYER_STATE_NEUTRAL' :
																isTrainingObserver	? 'IDS_TRAINING_ROOM_PLAYER_STATE_OBSERVER' :
																isCommander			? 'IDS_TRAINING_ROOM_PLAYER_STATE_COMMANDER'
																					: 'IDS_TRAINING_ROOM_PLAYER_STATE_DEFAULT' :
									isCommander				? 'IDS_DIVISION_COMMANDER_C' :
									isMercenary				? 'IDS_MERCENARY'
															: 'IDS_IN_DIVISION'")

		(var playerStatusStr:str = "isTrainingRoomActive	? '' :
									isInFormationBattle		? '. ' + tr('IDS_IN_BATTLE') :
									isReady					? '. ' + tr('IDS_READY')
															: '. ' + tr('IDS_NOT_READY')")


		(var textColorValue:number = "	isMercenary		?	SC.Ui_styles.SERVICE_COLORS.WHITE
														:	isSelfTeam		? SC.Ui_styles.SERVICE_COLORS.YELLOW
																			: SC.Ui_styles.SERVICE_COLORS.WHITE ")
	)
	(style (width = 100%) (flow = "horizontal") (align = "middle"))

	(block
		(bind visible "!isTrainingObserver")
		(style (marginTop = 3px) (marginRight = 6px))

		(controller $Instance renderer='FormationPlayerIcon'
			(bind enabled "!isTrainingObserver")
			(args
				_isEmptySlot = "isInvitedToDivision"
				_isCommander = "isCommander"
				_isMercenary = "isMercenary"
				_isReady = "isReady"
				_isInBattle = "isInFormationBattle"
				_isOtherTeam = "!isSelfTeam"
			)
		)
	)

	(tf
		(class $TextDefaultNM)
		(style
			(width = 100%)
			(bind textColor "textColorValue")
			(bind alpha "textColorValue == SC.Ui_styles.SERVICE_COLORS.WHITE ? TA : 1")
		)
		(bind text "tr(playerRoleStr) + playerStatusStr")
	)
)

(def element TooltipSystemCountDownStatusLine (_timeStamp:number, _text:str, _unifiedStatus:str="SC.Ui_styles.UNIFIED_STATUS.DEFAULT")
	(scope
		(var serverTime:number = "currentServerSeconds()" (event "evInfrequent"))
		(var timeLeft:number = "max(0, _timeStamp - serverTime)")
		(var formattedTimeLeft:str = "formatTime(timeLeft, 'mm:ss')")
	)
	(macro UNIFIED_STATUS_TO_COLOR_AND_ALPHA "_unifiedStatus" "'textColor'" "'textAlpha'")
	(style (width = 100%) (flow = "horizontal"))

	(element UnifiedStatusIcon
		_unifiedStatus = "_unifiedStatus"
	)

	(block
		(style (width = 100%))

		(tf
			(class $TextDefaultNM)
			(bind alpha "textAlpha")
			(style
				(width = 100%)
				(bind textColor "textColor")
			)
			(bindcall substitute imageOffset=5 sourceText="tr(_text)" postfix='' init=true)
		)
	)
	(block
		(style (width = 38px) (marginRight = "-S"))

		(tf
			(class $TextDefaultBoldNM)
			(bind alpha "TA")
			(style
				(width = 100%)
				(alpha = "TA")
				(bind textColor "textColor")
			)
			(bind text "formattedTimeLeft")
		)
	)
)

(def element TooltipSystemRankAndLeagueStatusLine (_league:number, _rank:number)
	(scope
		(var leagueIDS:str = "_league > 0 ? 'IDS_TOOLTIP_RANKED_RANK_X_LEAGUE_' + _league : ''")
		(var hasAnyRank:bool = "_rank > 0")
	)

	(style
		(align = "middle")
		(flow = "horizontal")
		(width = 100%)
	)

	(block
		(bind visible "hasAnyRank")

		(style
			(marginRight = 6px)
			(marginTop = -7px)
			(marginBottom = -6px)
		)

		(controller $Instance renderer='IconRankSmall'
			(bind enabled "hasAnyRank")
			(args
				_league	= "_league"
				_rank	= "_rank"
			)
		)
	)

	(tf
		(class $TextDefaultNM)
		(style
			(alpha = "TA")
			(width = 100%)
			(leading = -4)
		)

		(bind text "hasAnyRank ? subst(leagueIDS, [], { _rank: _rank }) : ''")
	)
)

(def element TooltipSystemRatingAndLeague (_rating:number = 0, _leagueName:str = "RATING_LEAGUES.IRON")
	(style
		(marginRight = 6px)
		(marginTop = -7px)
		(marginBottom = -6px)
	)
	(element PlayerRatingStereotypeSmall
		_rating = "_rating"
		_leagueName = "_leagueName"
	)
)

(def element TooltipSystemBattleDivisionsStatusLine (	_playerRoleStr:str, _isOtherTeam:bool=false, _isReady:bool=false, _isCommander:bool=false,
														_isMercenary:bool=false, _isInBattle:bool=false, _isEmptySlot:bool=false, _unifiedStatus:str="SC.Ui_styles.UNIFIED_STATUS.DEFAULT")
	(scope
		(macro PULL_CURRENT_TOP_WINDOW_NAME)
		(var isInBattleLoading:bool =	"currentTopWindowName == BATTLE_STATS_STATES.BATTLE_LOADING || currentTopWindowName == BATTLE_STATS_STATES.FIRST_BATTLE_LOADING")
		(var isInBattleStats:bool =		"currentTopWindowName == BATTLE_STATS_STATES.BATTLE")
		(var isInBattleContext:bool =	"isInBattleLoading || isInBattleStats")
	)
	(macro UNIFIED_STATUS_TO_COLOR_AND_ALPHA "_unifiedStatus" "'textColor'" "'textAlpha'")

	(style
		(align = "middle")
		(flow = "horizontal")
		(width = 100%)
	)

	(element FormationPlayerIcon
		_isOtherTeam =		"_isOtherTeam"
		_isReady =			"_isReady"
		_isCommander =		"_isCommander"
		_isMercenary =		"_isMercenary"
		_isInBattle =		"_isInBattle"
		_isEmptySlot =		"_isEmptySlot"
	)

	(tf
		(class $TextDefaultBoldNM)
		(style
			(marginLeft = "S")
			(bind textColor "isInBattleContext ? SC.Ui_styles.SERVICE_COLORS.YELLOW : textColor")
			(bind alpha "isInBattleContext ? 1 : textAlpha")
		)
		(bind text "_playerRoleStr")
	)
)

(def element TooltipSystemAdditionalConsumablesList (_skillEntityId:number)
	(scope
		(var skillEntity:gfx = "$datahub.getEntity(_skillEntityId)")
		(var affectedConsumables:dict = "skillEntity ? skillEntity.abilitiesDataForSkillTooltip.abilitiesToShow : {}" (event "skillEntity.abilitiesDataForSkillTooltip.evAbilitiesToShowChanged"))
		(var affectedConsumablesEntityIds:array = "skillEntity ? skillEntity.abilitiesDataForSkillTooltip.keys : []" (event "skillEntity.abilitiesDataForSkillTooltip.evKeysChanged"))
	)
	(style (width = 100%))
	(macro TOOLTIP_SYSTEM_INNER_PANEL_BACKGROUND)

	(tf
		(style (width = 100%) (marginBottom = "SXS") (alpha = "TA") (leading = -2))
		(class $TextDefaultNM)
		(text = 'IDS_AFFECTED_CONSUMABLES_TOOLTIP_TITLE')
	)
	(block
		(style (width = 100%))
		(htile
			(style (width = 100%) (margin = "-XS"))

			(controller $Repeat renderer='TooltipSystemConsumableItem'
				(bind count "affectedConsumablesEntityIds.length")
				(args
					_affectedConsumables = "affectedConsumables"
					_abilityEntityId = "affectedConsumablesEntityIds[$index]"
				)
			)
		)
	)
)


(def element TooltipSystemConsumableItem (_affectedConsumables:dict, _abilityEntityId:number)
	(scope
		(var abilityEntity:gfx = "$datahub.getEntity(_abilityEntityId)")
		(var name:str = "abilityEntity ? abilityEntity.ability.name : ''" (event "abilityEntity.ability.evNameChanged"))
	)
	(style
		(width = 60px)
		(height = 60px)
		(margin = "XS")
		(bind backgroundImage "'url:../consumables/consumable_' + name + '.png'")
	)

	(block
		(bind visible "_affectedConsumables[_abilityEntityId] !=-1")
		(style (position = "absolute") (top = 2px) (right = 3px))
		(tf
			(class $TextDefaultBoldNM)
			(style (textAlign = "right") (alpha = "TA"))
			(bind text "_affectedConsumables[_abilityEntityId]")
		)
	)
)

(def element TooltipSystemSseConditions (_conditionId:number)
	(scope
		(var sseConditionEntity:gfx = "$datahub.getEntity(_conditionId)")
		(var pveModifier:number = "sseConditionEntity.sseConditions.pveModifier")
		(var isPVEModifierApplied:bool = "pveModifier != PVE_DEFAULT_MODIFIER_COEFF")
	)

	(style (width = 100%))
	(macro TOOLTIP_SYSTEM_INNER_PANEL_BACKGROUND)

	(element SseConditions
		_conditionId = "_conditionId"
	)

	(block
		(style 
			(width = 100%)
			(marginTop = "isPVEModifierApplied ? SXS : 0")
		)

		(controller $Instance renderer='TooltipSystemStatusLine'
		 	(bind enabled "isPVEModifierApplied")
		 	(args
		 		_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.PVE_MODIFIER"
				_text = 'IDS_PVE_MODIFIER_TOOLTIP_DESC_TASK'
		 	)
		)
	)
)

(def element TooltipSystemComplexityLevel (_currentComplexityLevel:number, _maxComplexityLevel:number)
	(style
		(width = 100%)
		(flow = "horizontal")
		(align = "middle")
	)

	(block
		(style (width = 100%))
		(tf
			(class $TextDefaultNM)
			(style (width = 100%) (bind alpha "TA"))
			(text = 'IDS_COMPLEXITY')
		)
	)

	(hblock
		(style (marginBottom = -2px))

		(controller $Repeat renderer='ComplexityLevelItem'
			(bind count "_maxComplexityLevel")
			(args
				_isFilled = "$index + 1 <= _currentComplexityLevel"
			)
		)
	)
)

(def element TooltipSystemShipComplexityLevel (_shipId:number)
	(scope
		(var shipEntity:gfx = "$datahub.getPrimaryEntity(CC.ship, _shipId)")
		(var shipInfo:gfx = "shipEntity.ship")
		(var currentComplexityLevel:number = "shipInfo.currentComplexityLevel")
		(var maxComplexityLevel:number = "shipInfo.maxComplexityLevel")
	)
	(style (width = 100%) (flow = "horizontal") (align = "middle"))

	(block
		(style (width = 100%))
		(tf
			(class $TextDefaultNM)
			(style (width = 100%) (bind alpha "TA"))
			(text = 'IDS_COMPLEXITY')
		)
	)

	(hblock
		(style (marginBottom = -2px))

		(controller $Repeat renderer='ComplexityLevelItem'
			(bind count "maxComplexityLevel")
			(args
				_isFilled = "$index + 1 <= currentComplexityLevel"
			)
		)
	)
)

(def element TooltipSystemEntityRestrictionBlock (_restrictionsEntityId:number, _restrictionsIDS:str, _excludedIDS:str='')
	(scope
		(var restrictionsEntity:dhEntity = "getEntity(_restrictionsEntityId)")
		(var shipListRestrictionsComponent:dhComponent = "restrictionsEntity.shipListRestrictions")

		(var restrictionsComponentId:str = "shipListRestrictionsComponent.id" (event "shipListRestrictionsComponent.evUpdate"))

		(var shipIdsFiltersCollection:dhCollection = "getCollectionByPath(CC.shipFilterItem, restrictionsComponentId + SC.Ui_common.SHIP_FILTER_TYPE_POSTFIX.IDS)")
		(var isShipIdsFilterVisible:bool = "shipIdsFiltersCollection.length > 0")

		(var restrictionsStr:str = "isShipIdsFilterVisible ? 'IDS_INSTALL_RESTRICTION_SPECIFIC_SHIP' : _restrictionsIDS")
	)

	(style (width = 100%))

	(tf
		(class $TextDefaultNM)
		(style (width = 100%) (alpha = "TA"))
		(bind text "restrictionsStr")
	)

	(block
		(style (marginTop = "S"))
		(element ShipRestrictions
			_restrictionsEntityId = "_restrictionsEntityId"
			_isFromTooltip = true
		)
	)

	(tf
		(bind visible "_excludedIDS")
		(class $TextDefaultNM)
		(style (width = 100%) (alpha = "TA") (marginTop = "S"))
		(bind text "_excludedIDS")
	)
)

(def element TooltipSystemShipMasteryLevel (_masteryRank:number = 0)
	(style
		(width = 100%)
		(flow = "horizontal")
	)
	(block
		(style
			(marginTop = "-XS")
			(marginBottom = -7px)
		)
		(element ShipMasteryIcon
			_rank="_masteryRank"
		)
	)
	(tf
		(class $TextDefaultNM)
		(style
			(marginLeft = "S")
			(leading = -4)
			(alpha = "TA")
		)
		(text = 'IDS_SHIP_MASTERY_DEFAULT')
	)
)

(def element TooltipSystemShipMasteryTaskStatus (_masteryTaskStatus:str = '')
	(style
		(width = 100%)
		(flow = "horizontal")
		(align = "middle")
	)
	(block
		(style
			(height = 21px)
			(width = 21px)
			(marginTop = "-XS")
			(marginBottom = -7px)
			(marginLeft = -1px)
			(marginRight = 6px)
			(backgroundSize = "contain")
			(bind backgroundImage "'swf:../service_kit/filters_svg/filters_svg.swf:ship_mastery_tasks_' + _masteryTaskStatus")
		)
	)
	(tf
		(class $TextDefaultNM)
		(style (alpha = "TA"))
		(bind text "'IDS_SHIP_MASTERY_TASKS_' + _masteryTaskStatus")
	)
)