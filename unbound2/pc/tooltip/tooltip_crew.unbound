(def element CrewTooltip (_targetShipId:number=0, _noContextMenuInstruction:bool=false, _crewId:number=0, _crewHistoryId:number=0, _noMouseInstruction:bool=false, _fromDock:bool=false)
	(scope
		(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_SCOPE)

		(var crewData:dhComponent =		"getSingleComponent(CC.crewData)")
		(var freeBarracksSlots:number =	"crewData.freeBarracksSlots ?: 0" (event "crewData.evFreeBarracksSlotsChanged"))
		(var canDisassignCrew:bool =	"freeBarracksSlots > 0")

		(struct crewReal =		PULL_CREW(_crewId = "_crewId"))
		(struct crewHistory =	PULL_CREW_HISTORY_INFO(_crewHistoryId = "_crewHistoryId"))

		(var isCrewHistory:bool =			"crewHistory.entity != null")
		(var crew:dhComponent =				"isCrewHistory ? crewHistory.component : crewReal.component")
		(var crewRetraining:dhComponent =	"crewReal.entity.retraining")

		(struct permissions =	PULL_CREW_PERMISSIONS(_crew = "crew"))
		(var hasCrewRestrictions:bool = "permissions.isDisabledBarracks && permissions.isDisabledCrewFire && permissions.isDisabledCrewLevelUp && permissions.isDisabledLearnSkills")

		(var fullName:str =				"crew.fullName"				(event "crew.evChanged"))
		(var curShipId:number =			"crew.shipID"				(event "crew.evShipChanged"))
		(var isMaxLevel:bool =			"crew.isMaxLevel"			(event "crew.evLevelUp"))
		(var isPenaltiesActive:bool =	"crew.isPenaltiesActive"	(event "crew.evIsPenaltiesActiveChanged"))
		(var canMove:bool =				"crew && crew.canMove"		(event "crew.evChanged"))
		(var crewNation:str =			"crew.nation ?: ''"			(event "crew.evChanged"))
		(var specializationID:number =	"crew.specializationID"		(event "crew.evChanged"))
		(var classificationId:number =	"crew.classificationId"		(event "crew.evClassificationIdChanged"))
		(var skillMatrixId:number =		"crew.skillMatrixId"		(event "crew.evChanged"))
		(var isUnique:bool =			"crew.isUnique"				(event "crew.evChanged"))
		(var allSkillPoints:number =	"crew.allSkillPoints"		(event "crew.evLevelUp"))

		(var rentDuration:number =		"isCrewHistory ? crew.rentDuration : 0")
		(var rentUntil:number =			"isCrewHistory ? crew.rentUntil : 0")
		(var timeRentTimeStamp:number =	"crewReal.component.timeRent ?: 0"			(event "crewReal.component.evTimeRentChanged") (event "crewReal.component.evChanged"))
		(var isRental:bool =			"timeRentTimeStamp > 0 || rentDuration > 0")

		(var isFromBarracks:bool =				"curShipId == 0")
		(var isShowAdoptationPenalty:bool =		"isPenaltiesActive && !_targetShipId && !isFromBarracks")

		(var targetOwnShipEntity:dhEntity =		"getPrimaryEntity(CC.ownShip, _targetShipId)")
		(var targetShipInfo:dhComponent =		"targetOwnShipEntity.ship")
		(var targetOwnShipInfo:dhComponent =	"targetOwnShipEntity.ownShip")

		(var crewOwnShipEntity:dhEntity =		"getPrimaryEntity(CC.ownShip, curShipId)")
		(var crewOwnShipInfo:dhComponent =		"crewOwnShipEntity.ship")
		(var crewOwnShipComponent:dhComponent =	"crewOwnShipEntity.ownShip")

		(var crewShipIsLocked:bool =		"crewOwnShipComponent.isLocked"			(event "crewOwnShipComponent.evUpdateLock"))
		(var crewShipInFormation:bool =		"crewOwnShipComponent.isInFormation"	(event "crewOwnShipComponent.evUpdateLock"))
		
		(var targetShipIsLocked:bool =		"targetOwnShipInfo.isLocked"			(event "targetOwnShipInfo.evUpdateLock"))
		(var targetShipInFormation:bool =	"targetOwnShipInfo.isInFormation"		(event "targetOwnShipInfo.evUpdateLock"))
		(var targetCrewId:number =			"targetOwnShipInfo.crewId"				(event "targetOwnShipInfo.evCrewChanged"))
		
		(var hasSpaceToAssignCrew:bool = "isFromBarracks || canDisassignCrew || (!canDisassignCrew && targetCrewId == 0)")

		(struct crewTarget =	PULL_CREW(_crewId = "targetCrewId"))
		(var isDisabledAssign:bool = "crew	? targetCrewId == 0		? !canMove
																	: !canMove || (crewTarget.entity && !crewTarget.component.canMove)
											: false"	(event "crewTarget.component.evChanged"))

		(var specializationShipEntity:dhEntity =	"getPrimaryEntity(CC.ship, specializationID)")
		(var specializationShipInfo:dhComponent =	"specializationShipEntity.ship")

		(var isCrewCompatibleShipBySpecialList:bool =	"indexOf(targetShipInfo.fullName, 		crew.shipsToSeat) > -1"			(event "crew.evChanged"))
		(var isCrewCompatibleShipByNation:bool =		"indexOf(targetShipInfo.nation,			crew.nationsToSeat) > -1"		(event "crew.evChanged"))
		(var isCrewCompatibleShipByGroup:bool =			"indexOf(targetShipInfo.group,			crew.shipGroups) > -1"			(event "crew.evChanged"))
		(var crewHasCompatibleShip:bool = "isCrewCompatibleShipBySpecialList || isCrewCompatibleShipByNation || isCrewCompatibleShipByGroup")

		(var isCrewUncompatibleForTargetShip:bool = "	!_targetShipId		? false :
														isDisabledAssign	? true :
														isRental			? specializationID != _targetShipId
																			: !crewHasCompatibleShip")

		(var peculiarityType:str =	"crew.peculiarity" (event "crew.evChanged"))
		(struct peculiarityPref = GET_PREF_BOOL(_option = "'ui.peculiarityEnabled'"))
		(var isPeculiarityDisabled:bool = "!peculiarityPref.value && peculiarityType")

		
		(var isCrewUnique:bool =	"classificationId == SC.Common.COMMANDER_CLASSIFICATIONS.UNIQUE")
		(var isCrewElite:bool =		"classificationId == SC.Common.COMMANDER_CLASSIFICATIONS.ELITE")
		(var isCrewAdvanced:bool =	"classificationId == SC.Common.COMMANDER_CLASSIFICATIONS.ADVANCED")
		(var isCrewCommon:bool =	"classificationId == SC.Common.COMMANDER_CLASSIFICATIONS.COMMON")

		(var isSpecial:bool =		"isCrewUnique || isCrewAdvanced || isCrewElite")

		(var headerUnifiedStatus:str = "classificationId == SC.Common.COMMANDER_CLASSIFICATIONS.UNIQUE ? SC.Ui_styles.UNIFIED_STATUS.CHECK : SC.Ui_styles.UNIFIED_STATUS.DEFAULT")

		(var subheaderText:str = "crew	?	isCrewCommon	? crew.hasRank		? crew.rankIDS
																				: ''
															: isCrewUnique		? 'IDS_UNIQUE_CREW_STATUS' :
															  isCrewElite		? 'IDS_ELITE_CREW_STATUS' :
															  isCrewAdvanced	? 'IDS_ADVANCED_CREW_STATUS'
																				: 'IDS_SPECIAL_CREW_STATUS'
										: ''"	(event "crew.evLevelUp"))

		(var shipSubtype:str = "_targetShipId	? targetShipInfo.subtype :
								curShipId		? crewOwnShipInfo.subtype
												: specializationShipInfo.subtype")

		(var crewStarIcon:str = "!isSpecial		? 'common.png' :
								 isCrewUnique	? 'unique.png'
												: 'advanced.png'")
		

		
		(var isInAdaptation:bool =	"crewRetraining != null")
		(var isXpBarVisible:bool =	"crew && !isMaxLevel && !isInAdaptation && skillMatrixId")

		(var curXpValue:number =	"isInAdaptation	? crewRetraining.adaptationExperienceEarned : crew.experience"					(event "crewRetraining.evRetrainingUpdated") (event "crew.evExpChanged"))
		(var maxXpValue:number =	"isInAdaptation	? crewRetraining.adaptationExperiencePenalty : crew.experienceToRichNextLevel"	(event "crewRetraining.evRetrainingUpdated") (event "crew.evLevelUp"))

		(var xpBarUnifiedStatus:str =		"isInAdaptation ? SC.Ui_styles.UNIFIED_STATUS.ATTENTION : SC.Ui_styles.UNIFIED_STATUS.DEFAULT")
		(var progressBarColor:number =		"isInAdaptation ? SC.Ui_styles.SERVICE_COLORS.ORANGE : SC.Ui_styles.SERVICE_COLORS.YELLOW")
		(var progressBarBlockTitle:str =	"isInAdaptation ? 'IDS_CREW_IN_ADAPTATION_TO_SELECT_SHIP' : 'IDS_CURRENCY_CREWXP'")
		
		(var isAvailableOneStatusVisible:bool = "isUnique && classificationId == SC.Common.COMMANDER_CLASSIFICATIONS.SPECIAL")
		

		
		(var isCrewSpecialization:bool =		"specializationID > 0")
		(var isEmptyCrew:bool =					"crewNation == SC.Common.NATION.COMMON")
		(var isCrewNationSpecialization:bool =	"!isCrewSpecialization && !isEmptyCrew")

		(var statusLabel:str = "isEmptyCrew ? 'IDS_TOOLTIP_STATUS_NO_NATION_AND_SPECIALIZATION_CREW' : 'IDS_TOOLTIP_STATUS_NO_SPECIALIZATION_CREW'")

		(var isAssignedToVisible:bool =								"(_targetShipId || _fromDock) && !isFromBarracks")
		(var isCrewPanelSpecializationAdoptationBlockVisible:bool =	"(specializationID != curShipId || isInAdaptation) && isCrewSpecialization")

		(var skillTreeEntity:dhEntity =			"getPrimaryEntity(CC.skillTree, toString(_crewId) + '_' + shipSubtype)")
		(var skillTreeComponent:dhComponent =	"skillTreeEntity.skillTree")

		(var freeSkillPoints:number =	"skillTreeComponent		? skillTreeComponent.freeSkillPoints :
										 crewHistory.component	? 0
																: allSkillPoints"	(event "skillTreeComponent.evFreeSkillPointsChanged"))

		(var isFreeSkillsCountShown:bool =			"freeSkillPoints && !permissions.isDisabledLearnSkills")
		(var freeSkillsCountStatusLineText:str =	"isFreeSkillsCountShown	? shipSubtype	? subst('IDS_FREE_SKILLPOINTS_LEFT_FOR_SHIPCLASS_TOOLTIP_TEXT', [], { shipClass: tr('IDS_' + toUpper(shipSubtype) + '_PL_GENITIVE'), skillPoints: freeSkillPoints })
																							: subst('IDS_FREE_SKILLPOINTS_LEFT_TOOLTIP_TEXT', [], { skillPoints: freeSkillPoints })
																			: ''")

		(var isNeedRetrainStatusVisible:bool = "_targetShipId &&
												!isDisabledAssign &&
												specializationID != _targetShipId &&
												!(	targetShipInfo.isWithoutCrewPenalty ||
													specializationID == 0 ||
													isRental ||
													isCrewUncompatibleForTargetShip)")

		
		(var eliteCrewLearning:dhComponent =		"crewReal.entity.eliteCrewLearning")

		(var isAnyTalentAvailable:bool =				"eliteCrewLearning.isAnyTalentAvailable"				(event "eliteCrewLearning.evIsAnyTalentAvailableChanged"))
		(var isAnySkillForBoardedShipAvailable:bool =	"eliteCrewLearning.isAnySkillForBoardedShipAvailable"	(event "eliteCrewLearning.evIsAnySkillForBoardedShipAvailableChanged"))

		(var eliteCrewUpgradeStatus:dict = "isCrewElite && isMaxLevel	?	isAnyTalentAvailable				? {	unifiedStatus:	SC.Ui_styles.UNIFIED_STATUS.UPGRADE_AVAILABLE,
																													text:			'IDS_ELITE_CREW_CAN_GET_TALENT_TOOLTIP_STATUS' } :
																			isAnySkillForBoardedShipAvailable	? {	unifiedStatus:	SC.Ui_styles.UNIFIED_STATUS.UPGRADE_AVAILABLE,
																													text:			'IDS_ELITE_CREW_CAN_UPGRADE_SKILL_TOOLTIP_STATUS' }
																												: null
																		:	null")
		

		(var contextMenuMouseInstruction:dict = "	_noMouseInstruction ||
													_noContextMenuInstruction ||
													hasCrewRestrictions ||
													!skillMatrixId			?	null
																			:	{	unifiedStatus:	SC.Ui_styles.UNIFIED_STATUS.MOUSE_RIGHT,
																					text:			'IDS_HINT_RIGHT_CLICK_FOR_CONTEXT_MENU' }")

		(var mouseInstruction:dict = "	_noMouseInstruction					?	null :
										_fromDock							?	{	unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT,
																					text:	'IDS_MOUSE_INSTRUCTION_CREW_TOOLTIP_GO_TO_SKILLS'} :
										targetShipInFormation				?	{	unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																					text:	'IDS_ASSIGN_CREW_DENY_REASON_TARGET_SHIP_IN_FORMATION'} :
										targetShipIsLocked					?	{	unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																					text:	'IDS_ASSIGN_CREW_DENY_REASON_TARGET_SHIP_IN_BATTLE'} :
										crewShipInFormation					?	{	unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																					text:	'IDS_ASSIGN_CREW_DENY_REASON_CURRENT_SHIP_IN_FORMATION'} :
										crewShipIsLocked 					?	{	unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																					text:	'IDS_ASSIGN_CREW_DENY_REASON_CURRENT_SHIP_IN_BATTLE'} :
										!hasSpaceToAssignCrew				?	{	unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																					text:	'IDS_ASSIGN_NEW_CREW_DISABLE_REASON_FULL_BARRACKS'} :
										!isCrewUncompatibleForTargetShip	?	{	unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT,
																					text:	'IDS_MOUSE_INSTRUCTION_CREW_TOOLTIP_ASSIGN'}
																			:	null")
	)

	(name = 'crew_tooltip')
	(style (width = 336px) (hitTest = false))

	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_MARKUP)
	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(element TooltipSystemHeaderWithIconAndText
			_headerText =		"fullName"
			_imageHeight = 		70
			_subheaderText =	"subheaderText"
			_unifiedStatus =	"headerUnifiedStatus"
			_headerIconType =	"SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.CREW"
			_data =				"{	crewId:			_crewId,
									crewHistoryId:	_crewHistoryId,
									shipSubtype:	shipSubtype,
									crewStarIcon:	crewStarIcon }"
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "!isCrewSpecialization"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "!isCrewSpecialization")
				(args
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.INFO"
					_text = "statusLabel"
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isCrewUncompatibleForTargetShip"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "isCrewUncompatibleForTargetShip")
				(args
					_unifiedStatus =	"SC.Ui_styles.UNIFIED_STATUS.NEGATIVE"
					_text =				"isRental || isDisabledAssign	?	'IDS_TOOLTIP_STATUS_NEED_CHOOSE_OTHER_SHIP_FOR_CREW' : 'IDS_TOOLTIP_STATUS_NEED_CHOOSE_OTHER_SHIP'"
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isRental"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemTimeLeftStatusLine'
				(bind enabled "isRental")
				(args
					_timeLeftTimeStamp =	"timeRentTimeStamp"
					_daysLeft =				"rentDuration"
					_substTextIDS =			"rentDuration ? 'IDS_RENT_STATUS_FOR' : 'IDS_RENT_STATUS_TIME_LEFT'"
					_zeroTimeTextIDS =		"'IDS_RENT_STATUS_TIME_IS_UP'"
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "rentUntil"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemDueDateStatusLine'
				(bind enabled "rentUntil")
				(args
					_dueDateTimeStamp =	"rentUntil"
					_substTextIDS =		"'IDS_RENT_STATUS_DUE_DATE'"
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isAvailableOneStatusVisible"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "isAvailableOneStatusVisible")
				(args
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.INFO"
					_text = "'IDS_TOOLTIP_STATUS_UNIQUE_CREW_STATUS'"
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isNeedRetrainStatusVisible"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "isNeedRetrainStatusVisible")
				(args
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.RETRAINING"
					_text = "'IDS_TOOLTIP_STATUS_NEED_RETRAINING_TO_ASSIGN'"
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isPeculiarityDisabled"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "isPeculiarityDisabled")
				(args
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.HIDDEN"
					_text = 'IDS_PECULIARITY_DISABLED_STATUS'
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isXpBarVisible"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemProgressBarBlock'
				(bind enabled "isXpBarVisible")
				(args
					_title = "progressBarBlockTitle"
					_currentValue = "curXpValue"
					_maxValue = "maxXpValue"
					_barColor = "progressBarColor"
					_unifiedStatus = "xpBarUnifiedStatus"
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isFreeSkillsCountShown"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "isFreeSkillsCountShown")
				(args
					_unifiedStatus =	"SC.Ui_styles.UNIFIED_STATUS.DEFAULT"
					_text =				"freeSkillsCountStatusLineText"
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "eliteCrewUpgradeStatus"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "eliteCrewUpgradeStatus")
				(args
					_unifiedStatus =	"eliteCrewUpgradeStatus.unifiedStatus"
					_text =				"eliteCrewUpgradeStatus.text"
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isCrewNationSpecialization && !curShipId"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='CrewNationSpecializationBlock'
				(bind enabled "isCrewNationSpecialization && !curShipId")
				(args
					_crewId = "_crewId"
					_crewHistoryId = "_crewHistoryId"
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isCrewPanelSpecializationAdoptationBlockVisible"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='CrewPanelSpecializationAdoptationBlock'
				(bind enabled "isCrewPanelSpecializationAdoptationBlockVisible")
				(args
					_crewId = "_crewId"
					_crewHistoryId = "_crewHistoryId"
					_isShipVisible = "true"
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isShowAdoptationPenalty"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "isShowAdoptationPenalty")
				(args
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.ATTENTION"
					_text = 'IDS_CREW_STATUS_SKILLS_PENALTY_DUE_ADAPTATION'
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isFromBarracks"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "isFromBarracks")
				(args
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.DEFAULT"
					_text = 'IDS_CREW_IN_BARRACKS'
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isAssignedToVisible"))
		)
		(block
			(bind visible "isAssignedToVisible")
			(style (width = 100%) (marginBottom = 3px))
			(controller $Instance renderer='TooltipSystemShipWithTitle'
				(bind enabled "isAssignedToVisible")
				(args
					_title = 'IDS_CREW_ASSIGNED_TO_SELECT_SHIP'
					_shipId = "curShipId"
					_withFlag = true
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "mouseInstruction"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "mouseInstruction")
				(args
					_unifiedStatus = "mouseInstruction.unifiedStatus"
					_text = "mouseInstruction.text"
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "contextMenuMouseInstruction"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "contextMenuMouseInstruction")
				(args
					_unifiedStatus = "contextMenuMouseInstruction.unifiedStatus"
					_text = "contextMenuMouseInstruction.text"
				)
			)
		)
	)
)