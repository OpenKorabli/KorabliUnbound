(def constant GLOBAL_VIEW_ID "0")
(def constant GLOBAL_VIEW_NAME "SC.Common.STRATEGIC_ACTIONS_NAMES.GLOBAL_VIEW_NAME")
(def constant MAX_COMPLEXITY_LEVEL 3)
(def constant WINDOW_PADDINGS_HORIZONTAL "{1280:L, 1920:XL}")
(def constant WINDOW_PADDINGS_VERTICAL "{720:MS, 1080: LM}")
(def constant PANEL_MARGINS_LARGE "{720: MS, 1080: LM}")
(def constant PANEL_MARGINS_MEDIUM "{720: M, 1080: L}")
(def constant PANEL_MARGINS_SMALL "{720: SXS, 1080: M}")





	
	
(def macro BLURRED_PANEL_DEFAULT_BACKGROUND_MARKUP ()
	(block
		(class $FullsizeAbsolute)
		(style (padding = -1px))

		(block
			(class $FullsizeAbsolute)
			(block
				(class $FullsizeAbsolute)
				(controller $Instance renderer='TooltipSystemBlur'
					(bind enabled "!isHighContrast")
				)
			)
			
			(block
				(bind visible "!isHighContrast")
				(class $FullsizeAbsolute)
				(style
					(backgroundImage = 'url:../service_kit/panel_backgrounds/hint_panel.png')
					(scale9grid = 3)
				)
			)

			(block
				(bind visible "isHighContrast")
				(class $FullsizeAbsolute)
				(style
					(backgroundImage = "'url:../service_kit/panel_backgrounds/hint_panel_high_contrast.png'")
					(scale9grid = 3)
				)
			)
		)
	)
)

(def element ModalWindowStrategicActions ()
	(macro MODAL_WINDOW_INIT)

	(scope
		(event onClick)
		(event evAddedToStage)

		(macro HIGH_CONTRAST_DATA_SCOPE)

		(macro PULL_CURRENT_TOP_WINDOW_NAME)
		(var isOnTop:bool = "currentTopWindowName == 'ModalWindowStrategicActions'")

		(var strategicActionsEntity:dhEntity = "getSingleEntity(CC.strategicActionsEvent)")
		(var strategicActionsEvent:dhComponent = "strategicActionsEntity.strategicActionsEvent")
		(var observedTerritory:number = "strategicActionsEvent.observedTerritory ?: 0" (event "strategicActionsEvent.evObservedTerritoryChanged"))  
		(var doneTerritories:number = "strategicActionsEvent.doneTerritories" (event "strategicActionsEvent.evChanged"))
		(var isOnboardingSeen:bool = "strategicActionsEvent.isOnboardingSeen" (event "strategicActionsEvent.evIsOnboardingSeenChanged"))

		(var territories:dhCollection = "getCollection(CC.strategicActionsTerritory)")

		(var territoryEntity:dhEntity = "getEntity(observedTerritory)")
		(var territoryId:str = "territoryEntity.strategicActionsTerritory.id ?: GLOBAL_VIEW_NAME" (event "territoryEntity.strategicActionsTerritory.evChanged"))
		(var territoryProgress:number = "territoryEntity.strategicActionsTerritory.progress ?: 0" (event "territoryEntity.strategicActionsTerritory.evChanged"))
		(var territoryProgressMax:number = "territoryEntity.strategicActionsTerritory.maxProgress ?: 1" (event "territoryEntity.strategicActionsTerritory.evChanged"))
		(var maxStageProgress:number = "territoryProgressMax/SC.Common.STRATEGIC_ACTIONS_UI.TERRITORY_STAGES_COUNT")

		(var isAllTerritoriesCompleted:bool = "doneTerritories == territories.length")
		(var isGlobalState:bool = "observedTerritory == GLOBAL_VIEW_ID")
		(var territoryStage:number = "isGlobalState ? toNumber(isAllTerritoriesCompleted) : floor(territoryProgress/maxStageProgress)")

		(var strategicActionsMessageGlobalVisible:bool = "strategicActionsEntity.hasComponent(CC.strategicActionsMessage) && isOnboardingSeen && isOnTop")
		(var strategicActionsMessageTerritoryVisible:bool = "territoryEntity.hasComponent(CC.strategicActionsMessage) && isOnboardingSeen && isOnTop")

		(var isStrategicActionsMessageVisible:bool = "isGlobalState ? strategicActionsMessageGlobalVisible : strategicActionsMessageTerritoryVisible")

		(var selectedState:str = "isGlobalState ? 'GlobalState' : 'TerritoryState'")
	)
	(dispatch evAddedToStage on='addedToStage')
	(bindcall externalCall "!isOnboardingSeen ? 'inputMapping.onRequest' : ''" "['showStrategicActionsOnboarding', { }]" (event "evAddedToStage"))

	(name = "'window_ModalWindowStrategicActions'")

	(block
		(macro DEFAULT_MODAL_WINDOW_ANIMATION 2)





		(block
			(visible = "isGlobalState")
			(style (alpha = "isGlobalState ? 1 : 0"))
			(controller $Animation
				(bindcall play  delay = 0.2
								duration = 0.3
								from = "{alpha: 0, visible: false}"
								to = "{alpha: 1, visible: true}"
								action = "kill"
								easing = "Easing.quad_out"
								reverse = "!isGlobalState"
								(bind trigger "isGlobalState")
				)
			)
			(controller $Repeat renderer='TerritoryMarkerNewYear'
				(bind count "territories.length")
				(args _entityId = "territories[$index].id")
			)
		)
	)
	(block
		(macro DEFAULT_MODAL_WINDOW_ANIMATION 1)
		(style (position = "absolute") (right = "LM") (top = "{720:M, 1080:LM}"))
		(element ModalWindowCloseIcon
			_tooltipText = 'IDS_RETURN_FROM_MODAL_WINDOW_BUTTON'
			_name = 'btn_close'
		)
	)
	(block
		(macro DEFAULT_MODAL_WINDOW_ANIMATION 1)
		(style (width = "SC.Common.STRATEGIC_ACTIONS_UI.PANEL_WIDTH") (height = 100%))
		(block
			(macro BLURRED_PANEL_DEFAULT_BACKGROUND_MARKUP)
			(style (width = "SC.Common.STRATEGIC_ACTIONS_UI.PANEL_WIDTH") (height = 100%))
			(block
				(class $Fullsize)
				(controller $Instance
					(bind renderer "selectedState")
					(args _entityId="observedTerritory")
				)
			)
		)
	)
	(block
		(style
			(hitTest = false)
			(position = "absolute")
			(bottom = -70px)
			(right = -130px)
			(width = "{1280:520px, 1920:600px}")
			(height = "{720:220px, 1080:250px}")
		)
		(block
			(bind visible "!isHighContrast")
			(class $Fullsize)
			(element DeclareBlurLayer)
			(block
				(class $Fullsize)
				(controller $Instance renderer='BlurMapCustom'
					(bind enabled "!isHighContrast")
					(args _map = 'mc_blurmap5_feather')
				)
			)
		)
	)
	(block
		(style (position = "absolute") (right = "WINDOW_PADDINGS_HORIZONTAL") (bottom = "WINDOW_PADDINGS_VERTICAL"))
		(hblock
			(macro DEFAULT_MODAL_WINDOW_ANIMATION 3)
			(style (align = "middle"))
			(element DefaultButton
				_type = "SC.Ui_styles.BUTTON_TYPE.SECONDARY"
				_label = 'IDS_STRATEGIC_ACTIONS_ONBOARDING'
				_width = 160
				_methods="[{ type: 'inputMapping.onRequest', name: 'showStrategicActionsOnboarding', args: {} }]"
			)
			(element VerticalDivider
				(style
					(height = 32px)
					(marginLeft = "MS")
					(marginRight = "MS")
				)
			)
			(element StrategicActionsMessages
				_messageId="territoryId"
				_messageType="territoryStage"
				_isForcedMessage="isStrategicActionsMessageVisible"
			)
		)
	)
)

(def element GlobalState ()
	(scope
		(event startShow)
		(event startHide)
		(event selectRewardCategory)
		(bind selectedIndex "$event.index" init=false watch=false (event "selectRewardCategory"))

		(macro MOUSE_HANDLER_SCOPE)

		(var strategicActionsEntity:dhEntity = "getSingleEntity(CC.strategicActionsEvent)")
		(var strategicActionsEvent:dhComponent = "strategicActionsEntity.strategicActionsEvent")
		(var finishTime:number = "strategicActionsEvent.finishTime ?: 0" (event "strategicActionsEvent.evChanged"))

		(var isAnyRewardClaim:bool = "strategicActionsEvent.isAnyRewardClaim" (event "strategicActionsEvent.evChanged"))
		(var rewardsCategories:array = "strategicActionsEvent.rewardsCategories" (event "strategicActionsEvent.evChanged"))
		(var rewards:array = "strategicActionsEvent.rewards" (event "strategicActionsEvent.evChanged"))
		(var territoriesThresholds:array = "strategicActionsEvent.thresholds" (event "strategicActionsEvent.evChanged"))
		(var activeThresholdIndex:number = "strategicActionsEvent.activeThresholdIndex" (event "strategicActionsEvent.evChanged"))
		(var doneTerritories:number = "strategicActionsEvent.doneTerritories" (event "strategicActionsEvent.evChanged"))
		(var selectedIndex:number = "activeThresholdIndex < territoriesThresholds.length ? activeThresholdIndex : activeThresholdIndex - 1")
		(var territoriesLeft:number = "territoriesThresholds[selectedIndex] ?: 0")

		(var isRewardThresholdClaimed:bool = "selectedIndex < activeThresholdIndex")
		(var isRewardCategoryAvailable:bool = "doneTerritories >= territoriesThresholds[selectedIndex]")
		(var isStatusVisible:bool = "isRewardThresholdClaimed || !isRewardCategoryAvailable")
		(var rewardStatusText:str = "isRewardThresholdClaimed	? 'IDS_STRATEGIC_ACTIONS_ADDITIONAL_REWARD_STATUS_RECEIVED'
																: subst('IDS_SUBST_STRATEGIC_ACTIONS_ADDITIONAL_REWARD_STATUS_LOCKED', [], {_count: toString(territoriesLeft)}, territoriesLeft)")

		(var unifiedStatus:str = "isRewardThresholdClaimed ? SC.Ui_styles.UNIFIED_STATUS.CHECK : SC.Ui_styles.UNIFIED_STATUS.LOCK")

		(var thresholdReward:number = "rewards[selectedIndex][0]")
		(var rewardEntity:dhEntity = "getEntity(thresholdReward)")
		(var isShipReward:bool = "rewardEntity.rewardComponent.type == 'Ship'")
		(var shipId:number = "isShipReward ? toNumber(rewardEntity.rewardComponent.name) : null")
		(var shipEntity:dhEntity = "getPrimaryEntity(CC.ship, shipId)")

		(macro SERVER_TIME_SCOPE)
		(macro COUNTDOWN_SCOPE "'timeLeft'" "finishTime" "'HIGHEST,WITH_DAYS'")
	)
	(dispatch startShow on='addedToStage')

	(class $Fullsize)
	(style (paddingTop = "{720:M, 1080:LM}"))

	(block
		(style
			(marginBottom = "{720:MS, 1080:L}")
			(paddingLeft = "MS")
			(paddingRight = "L")
		)
		(block
			(macro DEFAULT_MODAL_WINDOW_ANIMATION 0)
			(element BackButton _text = 'IDS_BACK')
		)
	)

	(block
		(style
			(width = 100%)
			(marginBottom = "PANEL_MARGINS_SMALL")
			(paddingLeft = "L")
			(paddingRight = "L")
		)
		(block
			(macro DEFAULT_MODAL_WINDOW_ANIMATION 1)
			(style (marginBottom = "{720:MS, 1080:L}"))
			(block
				(style (marginBottom = "{720:SXS, 1080:MS}"))
				(tf
					(name = 'title_general_actions_panel')
					(class $TextDefaultBold23NM)
					(style (alpha = "TA"))
					(text = "toUpper(tr('IDS_STRATEGIC_ACTIONS_COMMON_EVENT_TITLE'))")
				)
			)
			(block
				(style (alpha = "TC"))
				(element StatusLine
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.DATE"
					_text = "subst('IDS_SUBST_STRATEGIC_ACTIONS_COMMON_EVENT_STATUS_TIME', [], {_timeLeft: timeLeft})"
					_textClass = '$TextDefault17NM'
					_width = auto
				)
			)
		)
		
		(block
		(style (width = 100%))
			(htile
				(macro DEFAULT_MODAL_WINDOW_ANIMATION 1.5)
				(style
					(width = 100%)
					(paddingLeft = "-M")
					(paddingTop = "-M")
				)
				(controller $Repeat renderer='StrategicActionsRewardCategory'
					(bind count "rewardsCategories.length")
					(args
						_rewardCategory = "rewardsCategories[$index]"
						_territoriesThreshold = "territoriesThresholds[$index]"
						_isReceived = "$index < activeThresholdIndex"
						_isRewardAvailable = "doneTerritories >= territoriesThresholds[$index]"
						_isSelected = "$index == selectedIndex"
					)
				)
			)
		)
	)
	
	(block
		(class $Fullsize)
		(block
			(macro DETAILED_CARD_ELEMENTS_APPEAR_ANIMATION_BY_ID "thresholdReward" 3)
			(style (width = 100%) (align = "center"))
			(element RewardItemBig _rewardEntityId="thresholdReward")





















			(block
				(style (bind marginTop "isStatusVisible ? {720:SXS, 1080:MS} : 0"))
				(controller $Instance renderer='StatusLine'
					(bind enabled "isStatusVisible")
					(args
						_unifiedStatus = "unifiedStatus"
						_text = "rewardStatusText"
						_textClass = '$TextDefault17NM'
						_width = auto
					)
				)
			)
		)
	)
	
	(block
		(style (width = 100%) (marginBottom = "{720:M, 1080:LS}"))
		(block
			(macro DEFAULT_MODAL_WINDOW_ANIMATION 5)
			(style (width = 100%))
			(element HorizontalDividerTwoPx)
		)
	)
	(block
		(style
			(width = 100%)
			(marginBottom = "{720:M, 1080:LS}")
			(align = "center")
		)
		(block
			(macro DEFAULT_MODAL_WINDOW_ANIMATION 5)
			(macro MOUSE_EVENTS_DISPATCHER)
			(macro SOUND_HANDLER _soundSet = "isAnyRewardClaim ? 'strategic_actions_reward' : ''")

			(element DefaultButton
				_label = 'IDS_STRATEGIC_ACTIONS_TERRITORY_REWARDS_CLAIM'
				_width = 250px
				_size = "SIZE.LARGE"
				_enabled = "isAnyRewardClaim"
				_defaultFocused = true
				_focusIndex = 0
				_methods = "[	{	type: 'inputMapping.onAction',
									name: 'StrategicActionsProxyUSS.claimAllRewards',
									args: {}},
								{	type: 'inputMapping.onRequest',
									name: 'openRewardsModal',
									args: {	rewardsEntityId: strategicActionsEntity.id,
											header: 'IDS_RECEIVED_LOOTBOXES_REWARDS'}},
								{	type: 'inputMapping.onAction',
									name: 'StrategicActionsProxyUSS.setStrategicActionsMessageSeen',
									args: {territoryId: GLOBAL_VIEW_NAME}}]"
			)
		)
	)
)

(def element TerritoryState (_entityId:number)
	(scope
		(event startShow)
		(event startHide)

		(macro MOUSE_HANDLER_SCOPE)

		(var strategicActionsEntity:dhEntity = "getSingleEntity(CC.strategicActionsEvent)")
		(var territoryEntity:dhEntity = "getEntity(_entityId)")
		(var territory:dhComponent = "territoryEntity.strategicActionsTerritory")
		(var progressMax:number = "territory.maxProgress ?: 1" (event "territory.evChanged"))
		(var previousProgressCurrent:number = "territory.previousProgress ?: 0" (event "territory.evChanged"))
		(var progressCurrent:number = " territory.progress ?: 0" (event "territory.evChanged"))
		(var previousProgress:number = "100% * previousProgressCurrent/progressMax")
		(var progress:number = "100% * progressCurrent/progressMax")
		(var rewards:array = "territory.rewards ?: []" (event "territory.evChanged"))
		(var status:number = "territory.status ?: 0" (event "territory.evChanged"))
		(var level:number = "territory.level ?: 0" (event "territory.evChanged"))
		(var territoryId:str = "territory.id ?: GLOBAL_VIEW_NAME" (event "territory.evChanged"))
		(var currentTaskIndex:number = "territory.currentTaskIndex ?: 0" (event "territory.evChanged"))
		(var restrictionsEntityId:number = "territory.restrictionsEntity ?: 0" (event "territory.evChanged"))
		(var restrictionsEntity:dhEntity = "getEntity(restrictionsEntityId)")
		(var battleTypes:array = "restrictionsEntity.battleTypesView.viewList ?: []" (event "restrictionsEntity.battleTypesView.evBattleTypesViewChanged"))
		(var shipRestrictions:array = "restrictionsEntity.shipListRestrictions.selectedFilters ?: []")
		(var isVerticalDividerVisible:bool = "shipRestrictions.length > 0 && battleTypes.length > 0")
		(var isShipRestrictionsBlockVisible:bool = "shipRestrictions.length > 0 || battleTypes.length > 0")

		(var tasksCollection:dhCollection = "getCollection(CC.strategicActionsTask).getChildByPath('byTerritoryId.' + territoryId)")
		(var tasksCollectionItems:array = "tasksCollection.items ?: []")

		(var taskActiveEntity:dhEntity = "getPrimaryEntity(CC.strategicActionsTask, territoryId + '_' + toString(currentTaskIndex))")
		(var thresholds:array = "taskActiveEntity.strategicActionsTask.thresholds" (event "taskActiveEntity.strategicActionsTask.evChanged"))
		(var points:array = "taskActiveEntity.strategicActionsTask.points" (event "taskActiveEntity.strategicActionsTask.evChanged"))

		(var pveModifier:number = "taskActiveEntity.strategicActionsTask.pveModifier" (event "taskActiveEntity.strategicActionsTask.evChanged"))
		(var isPVEModifierApplied:bool = "pveModifier != PVE_DEFAULT_MODIFIER_COEFF")

		
		(var isLocked:bool = "status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.LOCKED")
		(var isSelected:bool = "status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.SELECTED")
		(var isCompleted:bool = "status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.COMPLETED")
		(var isAvailable:bool = "status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.AVAILABLE")
		(var isRewardsClaim:bool = "status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.REWARDS_CLAIM")
		(var isDone:bool = "isIn(status, SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.DONE)")
		(var isProgressFull:bool = "isCompleted && isRewardsClaim")
		(var isButtonVisible:bool = "isAvailable || isRewardsClaim")
		(var textButton:str = "isRewardsClaim ? 'IDS_STRATEGIC_ACTIONS_TERRITORY_REWARDS_CLAIM' : 'IDS_STRATEGIC_ACTIONS_TERRITORY_AVAILABLE'")
	)

	(dispatch startShow on='addedToStage')

	(class $Fullsize)
	(style (paddingTop = "{720:MS, 1080:LM}"))

	(block
		(macro DETAILED_CARD_ELEMENTS_APPEAR_ANIMATION_BY_ID "territoryId" 0)
		(style
			(marginBottom = "{720:MS, 1080:L}")
			(paddingLeft = "MS")
			(paddingRight = "L")
		)
		(element BackButton _text = 'IDS_BACK')
	)

	(block
		(style (width = 100%) (paddingLeft = "L") (paddingRight = "L"))

		(block
			(macro DETAILED_CARD_ELEMENTS_APPEAR_ANIMATION_BY_ID "territoryId" 1)
			(style (width = 100%) (marginBottom = "M"))
			(tf
				(bind name "'title_' + territoryId")
				(class $TextDefaultBold23NM)
				(style (marginBottom = "{720:S, 1080:SXS}") (alpha = "TA"))
				(bind text "toUpper(tr('IDS_TERRITORY_TITLE_' + toUpper(territoryId)))")
			)

















		)
		
		(block
			(macro DETAILED_CARD_ELEMENTS_APPEAR_ANIMATION_BY_ID "territoryId" 1.5)
			(style (width = 100%) (bind marginBottom " isLocked ? PANEL_MARGINS_LARGE : 0"))
			(controller $Instance renderer='StatusLine'
				(bind enabled "isLocked")
				(args
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.LOCK"
					_text = 'IDS_STRATEGIC_ACTIONS_TERRITORY_LOCKED'
					_textClass = '$TextDefault17NM'
					_width = 100%
				)
			)
		)
		

		(block
			(macro DETAILED_CARD_ELEMENTS_APPEAR_ANIMATION_BY_ID "territoryId" 1.5)
			(style (width = 100%) (marginBottom = "PANEL_MARGINS_LARGE"))
			(controller $Instance renderer='TerritoryProgressNewYear'
				(bind enabled "!(isLocked || isCompleted || isRewardsClaim)")
				(args
					_entityId = "_entityId"
				)
			)
			(controller $Instance renderer='StatusLine'
				(bind enabled "isRewardsClaim || isCompleted")
				(args
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.CHECK"
					_text = 'IDS_STRATEGIC_ACTIONS_TERRITORY_STATUS_DONE'
				)
			)
			(element GuidingTipHub
				_tipId = "SC.Context_guiding_tip.TIP_TYPE.STRATEGIC_ACTIONS_TERRITORY_PROGRESS"
				_tipPositioning = "TIP_POSITION_RIGHT"
				_offsetX = "SXS"
				_noPointer = true
				_hasNextButton = true
				_modalWindowName = 'ModalWindowStrategicActions'
			)
		)

































	)
	(scrollArea
		(class $Fullsize)
		(style (backgroundColor = "NO_COLOR"))

		(verticalSlider ScrollBarVLight)
		(hscrollPolicy = 'off')
		(vscrollPolicy = 'auto')

		(wheelScrollSpeed = 1.0)
		(wheelScrollAcceleration = 1.2)
		(bottomShadow = 'BpBonusesShadowBottom')

		(content
			(style (width = 100%))
			
			(block
				(bind visible "!isDone")
				(style
					(width = 100%)
					(paddingLeft = "L")
					(paddingRight = "L")
				)
				(block
					(macro DETAILED_CARD_ELEMENTS_APPEAR_ANIMATION_BY_ID "territoryId" 2)
					(style (width = 100%) (marginBottom = "PANEL_MARGINS_MEDIUM"))
					
					(hblock
						(tf
							(class $TextDefaultBold19NM)
							(style (alpha = "TA"))
							(text = 'IDS_STRATEGIC_ACTIONS_TERRITORY_TASKS_LIST_TITLE')
						)
						(block
							(style
								(width = 19px)
								(height = 19px)
								(marginTop = "-XXS")
								(marginLeft = 6px)
								(backgroundImage = 'url:../service_kit/unified_status_icons/icon_info.png')
							)
						)
						(controller $Tooltip
							(renderer='StrategicActionsTasksListTooltip')
							(args _entityId="territoryEntity.id")
							(macro DEFAULT_TOOLTIP_BEHAVIOUR)
						)
						(element GuidingTipHub
							_tipId = "SC.Context_guiding_tip.TIP_TYPE.STRATEGIC_ACTIONS_TERRITORY_TASKS"
							_tipPositioning = "TIP_POSITION_RIGHT"
							_offsetX = "SXS"
							_noPointer = true
							_hasNextButton = true
							_modalWindowName = 'ModalWindowStrategicActions'
						)
					)
					(block
						(style (width = 100%) (bind marginTop "isLocked ? PANEL_MARGINS_SMALL : 0"))
						(controller $Repeat renderer='StrategicActionsTaskDescription'
							(bind count "tasksCollectionItems.length")
							(bind enabled "isLocked")
							(args
								_entityId = "tasksCollectionItems[$index].id"
								_isMarker = true
								_index = "$index"
								_textClass = '$TextDefaultNM'
							)
						)
					)
				)
				
				(block
					(macro DETAILED_CARD_ELEMENTS_APPEAR_ANIMATION_BY_ID "territoryId" 2.5)
					(bind visible "!isLocked")
					(style (width = 100%) (marginBottom = "{720:MS, 1080:L}"))

					(block
						(class $FullsizeAbsolute)
						(style
							(backgroundImage = 'url:../service_kit/panel_backgrounds/hint_panel_bold.png')
							(scale9grid = 3)
							(alpha = 0.2)
						)
					)

					(block
						(style
							(width = 100%)
							(paddingLeft = "M")
							(paddingRight = "M")
							(paddingTop = "SXS")
							(paddingBottom = "SXS")
							(backgroundColor = 0x66758b8b)
						)
						(tf
							(class $TextDefaultBold19NM)
							(style (width = 100%) (alpha = "TA"))
							(text = 'IDS_STRATEGIC_ACTIONS_TERRITORY_ACTIVE_TASK_COLON')
						)
					)
					(element HorizontalDividerTwoPx)

					(block
						(style
							(width = 100%)
							(paddingLeft = "M")
							(paddingRight = "M")
							(paddingTop = "SXS")
							(paddingBottom = "SXS")
						)
						(element StrategicActionsTaskDescription _entityId = "taskActiveEntity.id")
					)
					(element HorizontalDividerTwoPx)

					(block
						(style
							(width = 100%)
							(paddingLeft = "M")
							(paddingRight = "M")
							(paddingTop = "SXS")
							(paddingBottom = "SXS")
						)
						(tf
							(class $TextDefault17NM)
							(style (width = 100%) (alpha = "TA"))
							(text = 'IDS_STRATEGIC_ACTIONS_POINTS_COLON')
						)
						(block
							(style (width = 100%) (marginTop = "PANEL_MARGINS_SMALL"))
							(controller $Repeat renderer='StrategicActionsTaskPointsRepeatItem'
								(bind count "points.length")
								(args
									_thresholds = "thresholds"
									_thresholdPoints = "points"
								)
							)
						)
					)

					(block
						(style (width = 100%))
						(controller $Instance renderer = 'HorizontalDividerTwoPx' (bind enabled "!isLocked"))
					)
					(block
						(bind visible "!isLocked && isShipRestrictionsBlockVisible")
						(style
							(paddingLeft = "M")
							(paddingRight = "M")
							(paddingTop = "SXS")
							(paddingBottom = "SXS")
						)
						(tf
							(class $TextDefault17NM)
							(style (marginBottom = "S"))
							(alpha = "TA")
							(text = 'IDS_SSE_TASK_RESTRICTIONS_COLON')
						)
						(hblock
							(hblock
								(controller $Repeat renderer='TaskBattleTypeRestriction'
									(bind enabled "!isRewardsClaim")
									(bind count "battleTypes.length")
									(args
										_battleType = "battleTypes[$index].battleName"
										_isPVEModifierApplied = "isPVEModifierApplied && battleTypes[$index].hasPVEModifier"
										_customIcon = "battleTypes[$index].customIconName"
									)
								)
							)
							(block
								(style (height = 100%) (bind marginRight "isVerticalDividerVisible ? S : 0"))
								(controller $Instance renderer='VerticalDivider'
									(bind enabled "isVerticalDividerVisible")
								)
							)
							(block
								(style (bind marginTop "isVerticalDividerVisible ? XXS : 0"))
								(controller $Instance renderer='ShipRestrictions'
									(bind enabled "isShipRestrictionsBlockVisible")
									(args
										_restrictionsEntityId = "restrictionsEntityId"
									)
								)
							)
						)
					)
				)
			)
			(block
				(style (width = 100%) (paddingLeft = "L") (paddingRight = "L"))
				
				(block
					(macro DETAILED_CARD_ELEMENTS_APPEAR_ANIMATION_BY_ID "territoryId" 3.5)
					(style (marginBottom = "{720:M, 1080:MS}"))

					(tf
						(class $TextDefaultBold19NM)
						(alpha = "TA")
						(text = 'IDS_STRATEGIC_ACTIONS_TERRITORY_REWARDS_TITLE')
					)

					(element GuidingTipHub
						_tipId = "SC.Context_guiding_tip.TIP_TYPE.STRATEGIC_ACTIONS_TERRITORY_REWARDS"
						_tipPositioning = "TIP_POSITION_RIGHT"
						_offsetX = "SXS"
						_noPointer = true
						_hasFinishButton = true
						_modalWindowName = 'ModalWindowStrategicActions'
					)
				)

				(hblock
					(style (marginBottom = "PANEL_MARGINS_SMALL"))
					(macro DETAILED_CARD_ELEMENTS_APPEAR_ANIMATION_BY_ID "territoryId" 4)

					(controller $Repeat renderer='RewardItemAdapter'
						(bind count "rewards.length")
						(args
							_entityId = "rewards[$index]"
							_isReceived = "isCompleted"
						)
					)
				)
			)
		)
	)
	
	(block
		(macro DETAILED_CARD_ELEMENTS_APPEAR_ANIMATION_BY_ID "territoryId" 6)
		(style (width = 100%) (bind marginBottom " isButtonVisible ? {720:M, 1080:LS} : 0"))
		(controller $Instance renderer='HorizontalDividerTwoPx' (bind enabled "isButtonVisible"))
	)
	(block
		(style
			(width = 100%)
			(align = "center")
			(bind marginBottom " isButtonVisible ? {720:L, 1080:XLM} : 0")
		)
		(macro DETAILED_CARD_ELEMENTS_APPEAR_ANIMATION_BY_ID "territoryId" 6)
		(macro MOUSE_EVENTS_DISPATCHER)
		(macro SOUND_HANDLER "isRewardsClaim ? 'strategic_actions_reward' : ''")
		
		(controller $Instance renderer='DefaultButton'
			(bind enabled "isButtonVisible")
			(args
				_width = 250px
				_name = "isAvailable ? 'select_territory' : 'take_reward'"
				_focusIndex = 0
				_defaultFocused = true
				_enabled = true
				_label = "textButton"
				_size = "SIZE.LARGE"
				_methods = "[	{	type: 'inputMapping.onAction',
									name: isAvailable ? 'StrategicActionsProxyUSS.selectTerritory' : 'StrategicActionsProxyUSS.claimTerritoryRewards',
									args: {territoryID: territory.id}},
								{	type: 'inputMapping.onRequest',
									name: isAvailable ? '' : 'openRewardsModal',
									args: {	rewardsEntityId: strategicActionsEntity.id,
											header: 'IDS_RECEIVED_LOOTBOXES_REWARDS'}},
								{	type: 'inputMapping.onAction',
									name: isAvailable ? '' : 'StrategicActionsProxyUSS.setStrategicActionsMessageSeen',
									args: {territoryId: territoryId}}]"
			)
		)
	)
)

(def element StrategicActionsRewardCategory (	_isSelected:bool, _territoriesThreshold:number = 0, _rewardCategory:str='',
												_isReceived:bool=false, _isRewardAvailable:bool=false)
	(scope
		(macro STAGE_SIZE)

		(var elementsPerRow:number = 4)
		(var isRewardActive:bool = "_isRewardAvailable && !_isReceived")
		(var isLargeDimension:bool = "stageHeight > 900 && stageWidth > 1380")
		(var iconSize:number = "isLargeDimension ? 74 : 62")
		(var iconMargin:number = "isLargeDimension ? M : S")

		(macro MOUSE_HANDLER_SCOPE)
	)
	(style
		(align = "center|middle")
		(backgroundColor = "NO_COLOR")
		(bind width "iconSize")
		(bind height "iconSize")
		(bind marginTop "iconMargin")
		(bind marginLeft "iconMargin")
	)

	(element RewardCategory
		_rewardCategory="_rewardCategory"
		_isReceived="_isReceived"
		_isRewardActive = "isRewardActive"
	)

	(block
		(class $FullsizeAbsolute)
		(bind alpha "	_isSelected	? 0.5 :
						rollOver	? 0.2
									: 0.1")
		(style (backgroundImage = 'url:../service_kit/frames/one_pixel_frame.png') (scale9grid = "2"))

		(macro MOUSE_HANDLER
			_dispatchedEv = "'selectRewardCategory'"
			_dispatchParams = "{ index: $index }"
			_soundSet = "'button_battlepass_reward'"
		)
	)

	(controller $Tooltip
		(renderer='StrategicActionsRewardTooltip')
		(args
			_isReceived = "_isReceived"
			_territoriesThreshold = "_territoriesThreshold"
			_isRewardAvailable = "_isRewardAvailable"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR)
	)
)

(def element StrategicActionsRewardTooltip (_isReceived:bool=false, _territoriesThreshold:number=0, _isRewardAvailable:bool=false)
	(scope
		(var unifiedStatus:str = "	_isReceived			? SC.Ui_styles.UNIFIED_STATUS.CHECK :
									_isRewardAvailable	? SC.Ui_styles.UNIFIED_STATUS.REWARD_AVAILABLE
														: SC.Ui_styles.UNIFIED_STATUS.LOCK")
		(var text:str = "	_isReceived			? 'IDS_TOOLTIP_REWARD_TAKEN' :
							_isRewardAvailable	? 'IDS_AVAILABLE_REWARD'
												: subst('IDS_SUBST_STRATEGIC_ACTIONS_ADDITIONAL_REWARD_STATUS_LOCKED', [], {_count: toString(_territoriesThreshold)}, _territoriesThreshold)")
	)

	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)
	(style (width = 340px))
	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(element TooltipSystemHeaderSubheaderText
			_unifiedStatus = "_isReceived ? SC.Ui_styles.UNIFIED_STATUS.CHECK : SC.Ui_styles.UNIFIED_STATUS.DEFAULT"
			_headerText = 'IDS_TOOLTIP_REWARDS_TITLE'
		)
		(element TooltipSystemHorizontalDivider)
		(element TooltipSystemStatusLine
			_unifiedStatus = "unifiedStatus"
			_text = "text"
		)
	)
)

(def element DividedCounterWithIcon (_curValue:number=0, _maxValue:number=0)
	(style (flow = "horizontal"))
	(element DefaultDividedCounter
		_curValueTextClass = '$TextDefaultBold19NM'
		_curValue = "_curValue"
		_maxValue = "_maxValue"
		_doNotAlphaOnZeroCurValue = true
		_name = 'territory'
	)
	(block
		(style
			(width = 24px)
			(height = 24px)
			(marginTop = "-XS")
			(marginLeft = "XS")
			(backgroundImage = 'url:../service_kit/currencies/icon_strategic_points.png')
		)
	)
)

(def element StrategicActionsPointsInfoTooltip ()
	(style (width = 300px) (hitTest = false))
	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)
	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(element TooltipSystemHeaderSubheaderText _headerText = 'IDS_STRATEGIC_ACTIONS_INFO_POINTS_TOOLTIP_TITLE')
		(element TooltipSystemHorizontalDivider)
		(element TooltipSystemHtmlDescriptionText _descriptionText = 'IDS_STRATEGIC_ACTIONS_INFO_POINTS_TOOLTIP_TEXT')
	)
)

(def element StrategicActionsTasksListTooltip (_entityId:number)
	(scope
		(var territoryEntity:dhEntity = "getEntity(_entityId)")
		(var territory:dhComponent = "territoryEntity.strategicActionsTerritory")
		(var territoryId:str = "territory.id ?: GLOBAL_VIEW_NAME" (event "territoryEntity.strategicActionsTerritory.evChanged"))
		(var status:number = "territory.status ?: 0" (event "territoryEntity.strategicActionsTerritory.evChanged"))

		(var tasksCollection:dhCollection = "getCollection(CC.strategicActionsTask).getChildByPath('byTerritoryId.' + territoryId)")
		(var tasksCollectionItems:array = "tasksCollection.items ?: []")

		(var isLocked:bool = "status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.LOCKED")
	)
	(style (width = 340px) (hitTest = false))
	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)
	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(element TooltipSystemHeaderSubheaderText _headerText = 'IDS_STRATEGIC_ACTIONS_TERRITORY_TASKS_LIST')
		(element TooltipSystemHorizontalDivider)
		(element TooltipSystemDescriptionText _descriptionText = 'IDS_STRATEGIC_ACTIONS_TERRITORY_ACTIVE_TASK_TOOLTIP_TEXT')
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "!isLocked"))
		)
		(block
			(bind visible "!isLocked")
			(style (width = 100%))
			(macro TOOLTIP_SYSTEM_INNER_PANEL_BACKGROUND)
			(controller $Repeat renderer='StrategicActionsTaskDescription'
				(bind enabled "!isLocked")
				(bind count "tasksCollectionItems.length")
				(args
					_entityId = "tasksCollectionItems[$index].id"
					_isMarker = true
					_index = "$index"
					_textClass = '$TextDefaultNM'
				)
			)
		)
	)
)

(def element StrategicActionsTaskActiveTooltip (_entityId:number)
	(scope
		(var taskEntity:dhEntity = "getEntity(_entityId)")
		(var thresholds:array = "taskEntity.strategicActionsTask.thresholds" (event "taskEntity.strategicActionsTask.evChanged"))
		(var points:array = "taskEntity.strategicActionsTask.points" (event "taskEntity.strategicActionsTask.evChanged"))
	)
	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)
	(style (width = 340px) (hitTest = false))
	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(element TooltipSystemHeaderSubheaderText _headerText = 'IDS_STRATEGIC_ACTIONS_TERRITORY_TASKS_TOOLTIP_TITLE_SECONDARY')
		(element TooltipSystemHorizontalDivider)
		(controller $Repeat renderer='StrategicActionsTaskPointsRepeatItem'
			(bind count "points.length")
			(args
				_thresholds = "thresholds"
				_thresholdPoints = "points"
			)
		)
	)
)

(def element StrategicActionsTaskPointsRepeatItem (_thresholds:array=[], _thresholdPoints:array=[])
	(scope
		(var bottomValue:number = "_thresholds[$index] ?: 0")
		(var topValue:number = "(_thresholds[$index+1]-1) ?: 0")
		(var isSingleThreshold:bool = "$index == _thresholds.length-1 || bottomValue == topValue")
		(var title:str = "isSingleThreshold	? subst('IDS_SUBST_STRATEGIC_ACTIONS_TERRITORY_TASKS_TOOLTIP_POINTS_BOUNDARY_BOTTOM',
												[], {_bottom: formatSeparator(bottomValue)})
											: subst('IDS_SUBST_STRATEGIC_ACTIONS_TERRITORY_TASKS_TOOLTIP_POINTS_BOUNDARIES',
												[], {_bottom: formatSeparator(bottomValue), _top: formatSeparator(topValue)})")
	)
	(style
		(width = 100%)
		(flow = "horizontal")
		(bind marginTop "$index ? SXS : 0")
	)
	(block
		(bind visible "_thresholds.length")
		(style (width = 100%))
		(tf
			(class $TextDefault17NM)
			(alpha = "TC")
			(style (width = 100%))
			(bind text "title")
		)
	)
	(block
		(element PriceTag
			_priceInfo = "{currency: SC.Common.CURRENCIES.STRATEGIC_POINTS, finalPrice: _thresholdPoints[$index]}"
			_size = "SIZE.MEDIUM"
			_name = 'strategic_action_task_reward'
		)
		(controller $Tooltip
			(renderer='SimpleStatusTooltip')
			(args _text = 'IDS_STRATEGIC_ACTIONS_INFO_POINTS')
			(macro DEFAULT_TOOLTIP_BEHAVIOUR)
		)
	)
)

(def element StrategicActionsPointsTooltip ()
	(style (width = 300px) (hitTest = false))
	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)
	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(element TooltipSystemDescriptionText _descriptionText = 'IDS_STRATEGIC_ACTIONS_INFO_POINTS')
	)
)


(def element StrategicActionsTaskDescription (_entityId:number, _isMarker:bool=false, _index:number=0, _textClass:str='$TextDefault17NM')
	(scope
		(var taskEntity:dhEntity = "getEntity(_entityId)")
		(var conditionsSets:array = "taskEntity.strategicActionsTask.conditionsSets" (event "taskEntity.strategicActionsTask.evChanged"))
		(var taskType:number = "taskEntity.strategicActionsTask.taskType" (event "taskEntity.strategicActionsTask.evChanged"))
		(var isOrTask:bool = "taskType == SC.Common.STRATEGIC_ACTIONS_TASK_TYPE.OR")
		(var isAndTask:bool = "taskType == SC.Common.STRATEGIC_ACTIONS_TASK_TYPE.AND")
		(var isThresholdTask:bool = "taskType == SC.Common.STRATEGIC_ACTIONS_TASK_TYPE.THRESHOLD")
	)
	(style (width = 100%) (bind marginTop "_index ? SXS : 0"))  
	(controller $Repeat renderer='StrategicActionsTaskTemplate'
		(bind count "conditionsSets.length")
		(args
			_entityId = "conditionsSets[$index]"
			_isMultipleTasks = "isOrTask || isAndTask"
			_isOrTask = "isOrTask"
			_isThresholdTask = "isThresholdTask"
			_isMarker = "_isMarker"
			_textClass = "_textClass"
			_taskIndex = "toString(taskEntity.strategicActionsTask.taskIndex)"
		)
	)
)

(def element StrategicActionsTaskTemplate (	_entityId:number, _isMultipleTasks:bool, _isOrTask:bool, _isMarker:bool=false,
											_isThresholdTask:bool=false, _textClass:str='$TextDefault17NM', _taskIndex:str = '')
	(scope
		(var conditionsSetEntity:dhEntity = "getEntity(_entityId)")
		(var countablesIds:array = "conditionsSetEntity.sseConditions.countablesIds ?: []" (event "conditionsSetEntity.sseConditions.evConditionSetChanged"))
		(var conditionCategory:str = "conditionsSetEntity.sseConditions.conditionCategory ?: ''" (event "conditionsSetEntity.sseConditions.evConditionSetChanged"))
		(var thresholdTaskIds:str = "'IDS_SSE_CONDITION_CATEGORY_DESCRIPTION_' + toUpper(conditionCategory) + '_FULL'")
		(var taskDescription:str = "_isThresholdTask ? thresholdTaskIds : countablesIds[0].ids")
		(var isConjunctionVisible:bool = "_isMultipleTasks && $index == 0")
		(var conjunction:str = "_isOrTask ? 'IDS_OR' : 'IDS_AND'")
	)
	(style (width = 100%) (bind paddingLeft "_isMarker ? SXS : 0"))
	(block
		(bind visible "$index == 0 && _isMarker")
		(style
			(position = "absolute")
			(left = "-SXS")
			(top = "XS")
			(width = 4px)
			(height = 4px)
			(backgroundImage = 'url:../events/strategic_actions/task_marker.png')
		)
	)
	(tf
		(bind name "'task_'+ _taskIndex")
		(bind class "_textClass")
		(alpha = "TC")
		(style (width = 100%))
		(bind text "taskDescription")
	)
	(block
		(bind visible "isConjunctionVisible")
		(style (width = 100%) (bind marginTop "isConjunctionVisible ? S : 0") (bind marginBottom "isConjunctionVisible ? S : 0"))
		(tf
			(bind class "_textClass")
			(alpha = "TS")
			(style (width = 100%))
			(bind text "conjunction")
		)
	)
)

(def element StrategicActionsMessages (_messageId:str='', _messageType:number=0, _isForcedMessage:bool=false)
	(scope
		(event evStartShowInfotip)
		(event evStartHideInfotip)

		(var isMessageVisible:bool = false)
	)
	(bindcall externalCall 'sound.playSetSoundDirect' "['strategic_actions_messages', 'click']" init=false watch=false (event "evStartShowInfotip"))
	(element ImageButton
		_width = 24
		_height = 24
		_backgroundImage = 'url:../service_kit/buttons/icons/message.png'
	)

	(controller $Tooltip
		(renderer='StrategicActionsMessageInfotip')
		(args
			_messageId = "_messageId"
			_messageType = "_messageType"
			_isForcedMessage = "_isForcedMessage"
		)
		(bindcall show animation =	{	duration:	"0.15",
										easing:		"Easing.quint_in",
										from:		{ alpha: 0, top: 10 },
										to:			{ alpha: 1, top: 0 }
									}
									(event "evStartShowInfotip"))

		(bindcall hide animation =	{	duration:	"0.15",
										easing:		"Easing.quint_out",
										from:		{ alpha: 1, top: 0},
										to:			{ alpha: 0, top: 10}
									}
									(event "evStartHideInfotip"))

		(hideOnEsc = true)
		(offset = {	x: -25, y: 15 })
		(align="top")
		(position="border")
		(priority = "1")

		(bind isMessageVisible "true" init=false on='evStartShow')
		(bind isMessageVisible "false" init=false on='evHide')

		(dispatch evStartShowInfotip on=leftClick (bind enabled "!isMessageVisible"))
		(dispatch evStartShowInfotip delay=0.6 (bind enabled "_isForcedMessage") (bind trigger "_isForcedMessage"))
		(dispatch evStartHideInfotip on=leftClick (bind enabled "isMessageVisible"))
		(dispatch evStartHideInfotip (bind enabled "isMessageVisible") (bind trigger "_messageId"))
		(dispatch evStartHideInfotip (bind enabled "isMessageVisible") (bind trigger "_messageType"))
	)
	(controller $Tooltip
		(renderer='SimpleStatusTooltip')
		(args
			_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT"
			_text = 'IDS_STRATEGIC_ACTIONS_BUTTON_TOOLTIP_MESSAGE'
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
	)
)

(def element StrategicActionsMessageInfotip (_messageId:str='', _messageType:number=0, _isForcedMessage:bool=false)
	(scope
		(event evPlayVoiceover)
		(event evStopVoiceover)

		(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_SCOPE)
		(var messageId:str = "_messageId" watch=false (event "evStartShow"))
		(var messageType:number = "_messageType" watch=false (event "evStartShow"))
	)
	(dispatch evPlayVoiceover (bind enabled "_isForcedMessage") (event "evStartShow"))

	(bindcall externalCall 'direct.action' "['strategicActions.playVoiceover', []]" (event "evPlayVoiceover"))
	(bindcall externalCall 'direct.action' "['strategicActions.stopVoiceover', []]" (event "evStopVoiceover") (event "evHide"))
	(bindcall externalCall 'inputMapping.onAction' "['StrategicActionsProxyUSS.setStrategicActionsMessageSeen', {territoryId: messageId}]" watch=false (event "evStartShow"))

	(style (width = 600px))
	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_MARKUP)
	(block
		(style
			(width = 256px)
			(height = 256px)
			(position = "absolute")
			(left = "-SXS")
			(bottom = 0)
			(bind backgroundImage "'url:../events/strategic_actions/messages/' + messageId + '_' + messageType + '.png'")
		)
	)
	(block
		(style
			(width = 100%)
			(paddingLeft = "XXXL")
			(paddingBottom = "M")
			(paddingTop = "MS")
			(paddingRight = "MS")
		)
		(element StrategicActionsMessageContent
			_messageId = "messageId"
			_messageType = "messageType"
		)
	)
	(block
		(style
			(position = "absolute")
			(top = "M")
			(right = "M")
		)
		(element CloseButton
			_dispatchedEv = 'evStartHideInfotip'
			_tooltipText = 'IDS_CLOSE_NOTIFICATION'
		)
	)
)

(def element StrategicActionsMessageContent (_messageId:str='', _messageType:number=0)
	(scope
		(var strategicActionsEntity:dhEntity = "getSingleEntity(CC.strategicActionsEvent)")
		(var strategicActionsEvent:dhComponent = "strategicActionsEntity.strategicActionsEvent")
		(var isVoiceoverPlaying:bool = "strategicActionsEvent.isVoiceoverPlaying ?: false" (event "strategicActionsEvent.evIsVoiceoverPlayingChanged"))
	)
	(style (width = 100%))
	(tf
		(class $TextDefaultBold19NM)
		(style (width = 100%) (marginBottom = "S") (alpha = "TA"))
		(bind text "'IDS_TERRITORY_MESSAGE_TITLE_' + _messageId")
	)
	(tf
		(class $TextDefaultNM)
		(style (width = 100%) (marginBottom = "M") (alpha = "TS"))
		(bind text "'IDS_TERRITORY_MESSAGE_SUBTITLE_' + _messageId")
	)
	(tf
		(class $TextDefaultNM)
		(style
			(width = 100%)
			(marginBottom = "S")
			(alpha = "TC")
			(multiline = true)
			(leading = -1)
			(styleSheet = '.p_spacing { font-size: 7px; }')
		)
		(bind htmlText "tr('IDS_TERRITORY_MESSAGE_TEXT_' + _messageId + '_' + _messageType)")
	)
	(hblock
		(block
			(style (marginLeft = -10px))
			(controller $Instance renderer='ImageButton'
				(bind enabled "!isVoiceoverPlaying")
				(args
					_width = 32px
					_height = 32px
					_backgroundImage = 'url:../service_kit/player_controls/button_play.png'
					_dispatchedEv = 'evPlayVoiceover'
				)
			)
			(controller $Instance renderer='ImageButton'
				(bind enabled "isVoiceoverPlaying")
				(args
					_width = 32px
					_height = 32px
					_backgroundImage = 'url:../service_kit/player_controls/button_stop.png'
					_dispatchedEv = 'evStopVoiceover'
				)
			)
		)
		(block
			(style (marginTop = "S") (alpha = 0))
			(controller $Animation
				(bindcall play	duration=0.15
								from="{alpha: 0, visible: false}"
								to="{alpha: 1, visible: true}"
								(bind enabled "isVoiceoverPlaying")
				)
			)
			(controller $Animation
				(bindcall play	duration=0.15
								from="{alpha: 1, visible: true}"
								to="{alpha: 0, visible: false}"
								(bind enabled "!isVoiceoverPlaying")
				)
			)
			(mc audio_prompt)
		)
	)
)

(def element TerritoryMarker (_entity:dhEntity, _isRewardAvailable:bool = false)
	(scope
		(event onClick)
		(event evEnterFrame)

		(var strategicActionsEntity:dhEntity = "getSingleEntity(CC.strategicActionsEvent)")
		(var strategicActionsEvent:dhComponent = "strategicActionsEntity.strategicActionsEvent")
		(var observedTerritory:number = "strategicActionsEvent.observedTerritory" (event "strategicActionsEvent.evObservedTerritoryChanged"))  
		(var isGlobalState:bool = "observedTerritory == GLOBAL_VIEW_ID")
		(var isActiveTerritoryObserved:bool = "observedTerritory == _entity.id")

		(var strategicActionsTerritory:dhComponent = "_entity.strategicActionsTerritory")
		(var territoryName:str = "strategicActionsTerritory.id" (event "strategicActionsTerritory.evChanged"))
		(var status:number = "strategicActionsTerritory.status" (event "strategicActionsTerritory.evChanged"))
		(var progress:number = "strategicActionsTerritory.progress" (event "strategicActionsTerritory.evChanged"))
		(var maxProgress:number = "strategicActionsTerritory.maxProgress" (event "strategicActionsTerritory.evChanged"))
		(var rewardCategory:str = " strategicActionsTerritory.rewardCategory" (event "strategicActionsTerritory.evChanged"))
		(var isLocked:bool = "status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.LOCKED")
		(var isCompleted:bool = "status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.COMPLETED")
		(var isRewardsClaim:bool = "status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.REWARDS_CLAIM")
		(var isSelected:bool = "status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.SELECTED")
		(var isProgressVisible:bool = "isRewardsClaim || isSelected || !isCompleted && progress > 0")

		(var markerEntity:dhEntity = "getPrimaryEntity(CC.strategicActionsTerritoryMarker, territoryName)")
		(var screenPosition:dhComponent = "markerEntity.screenPosition")
		(var posX:number = "screenPosition ? screenPosition.position.x : 0" (event "evEnterFrame"))
		(var posY:number = "screenPosition ? screenPosition.position.y : 0" (event "evEnterFrame"))
		
		(struct guidingTipSelectedTerritory = PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.STRATEGIC_ACTIONS_SELECTED_TERRITORY"))
		(var isActiveGuidingTipSelectedTerritory:bool = "guidingTipSelectedTerritory.isActive")
		(var isGuidingTipVisible:bool = "isActiveGuidingTipSelectedTerritory && isSelected && (isGlobalState || isActiveTerritoryObserved)")
	)

	(style
		(hitTest = false)
		(marginLeft = -50%)
		(marginTop = -50%)
		(align = "center|bottom")
		(position = "absolute")
		(bind left "posX")
		(bind top "posY")
	)

	(block
		(bind name "territoryName")
		(style (marginBottom = "S"))
		(element RewardCategory
			_rewardCategory = "rewardCategory"
			_isReceived = "isCompleted"
			_isRewardActive = "isRewardsClaim"
		)
	)

	(block
		(style (width = 80px) (bind marginBottom "isProgressVisible ? S : 0"))
		(controller $Instance renderer='DefaultProgressBar'
			(bind enabled "isProgressVisible")
			(args _progress = "progress/maxProgress")
		)
	)

	(block
		(controller $Instance renderer='DefaultDividedCounter'
			(bind enabled "isProgressVisible")
			(args
				_curValueTextClass = '$TextDefaultBold19NM'
				_curValue = "progress"
				_maxValue = "maxProgress"
			)
		)
	)

	(block
		(controller $Instance renderer='GuidingTipHub'
			(bind enabled "isGuidingTipVisible")
			(args
				_tipId = "SC.Context_guiding_tip.TIP_TYPE.STRATEGIC_ACTIONS_SELECTED_TERRITORY"
				_tipPositioning = "TIP_POSITION_TOP"
				_offsetY = 88px
				_modalWindowName = 'ModalWindowStrategicActions'
			)
		)
	)
)

(def element StrategicOperationAreaTooltip (_territoryName:str='')
	(scope
		(var strategicActionsEntity:dhEntity = "getSingleEntity(CC.strategicActionsEvent)")
		(var strategicActionsEvent:dhComponent = "strategicActionsEntity.strategicActionsEvent")
		(var observedTerritoryId:number = "strategicActionsEvent.observedTerritory ?: 0" (event "strategicActionsEvent.evObservedTerritoryChanged"))  
		(var observedTerritoryEntity:dhEntity = "getEntity(observedTerritoryId)")
		(var observedTerritory:dhComponent = "observedTerritoryEntity.strategicActionsTerritory")
		(var observedTerritoryName:str = "observedTerritory.id")


		
		
		
		(var territoryEntity:dhEntity = "getPrimaryEntity(CC.strategicActionsTerritory, _territoryName)")
		(var territoryComponent:dhComponent = "territoryEntity.strategicActionsTerritory")
		(var territoryEntityId:number =	"territoryEntity.id"					(event "territoryComponent.evChanged"))
		(var territoryLevel:number =	"territoryComponent.level"				(event "territoryComponent.evChanged"))
		(var currentTaskIndex:number =	"territoryComponent.currentTaskIndex"	(event "territoryComponent.evChanged"))

		
		(var tasksCollection:dhCollection = "getCollection(CC.strategicActionsTask).getChildByPath('byTerritoryId.' + _territoryName)")
		(var tasksCollectionItems:array = "tasksCollection.items ?: []")
		(var nextTaskIndex:number = "currentTaskIndex + 1")
		(var nextTaskIndexToDisplay:number = "tasksCollectionItems.length == nextTaskIndex ? 0 : nextTaskIndex")
		
		
		(var taskActiveEntity:dhEntity = "getPrimaryEntity(CC.strategicActionsTask, _territoryName + '_' + toString(currentTaskIndex))")
		(var taskNextEntity:dhEntity = "getPrimaryEntity(CC.strategicActionsTask, _territoryName + '_' + toString(nextTaskIndexToDisplay))")

		(var progress:number = "territoryComponent.progress" (event "territoryComponent.evChanged"))
		(var maxProgress:number = "territoryComponent.maxProgress" (event "territoryComponent.evChanged"))

		(var status:number = "territoryComponent.status" (event "territoryComponent.evChanged"))

		(var isLocked:bool=				"status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.LOCKED")
		(var isSelected:bool =			"status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.SELECTED")
		(var isCompleted:bool =			"status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.COMPLETED")
		(var isAvailable:bool =			"status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.AVAILABLE")
		(var isRewardsClaim:bool =		"status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.REWARDS_CLAIM")
		(var isRewardAvailable:bool =	"status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.REWARDS_CLAIM")
		(var isDone:bool =				"isIn(status, SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.DONE)")

		(var restrictionsEntityId:number = "territoryComponent ? territoryComponent.restrictionsEntity : 0" (event "territoryComponent.evChanged"))
		(var restrictionsEntity:dhEntity = "getEntity(restrictionsEntityId)")
		(var battleTypes:array = "restrictionsEntity.battleTypesView.viewList  ?: []" (event "territoryComponent.evChanged") (event "restrictionsEntity.battleTypesView.evBattleTypesViewChanged"))
		(var shipRestrictions:array = "restrictionsEntity.shipListRestrictions.selectedFilters ?: []")
		(var hasReducedBattleTypes:bool = "restrictionsEntity.battleTypesView.hasReducedBattleTypes" (event "restrictionsEntity.battleTypesView.evBattleTypesViewChanged"))

		(var pveModifier:number = "taskActiveEntity.strategicActionsTask.pveModifier ?: 1.0" (event "taskActiveEntity.strategicActionsTask.evChanged"))
		(var isPVEModifierApplied:bool = "pveModifier != PVE_DEFAULT_MODIFIER_COEFF && hasReducedBattleTypes")

		(var isStatusVisible:bool = "isLocked || isSelected || isDone")
		(var isProgressVisible:bool = "isRewardsClaim || isSelected || !isCompleted && progress > 0")
		(var areRestrictionsVisible:bool = "(!isDone && !isLocked) && (battleTypes.length > 0 || shipRestrictions.length > 0)")

		(var rewards:array = "territoryComponent.rewards" (event "territoryComponent.evChanged"))

		(var unifiedStatus:str =	"	isCompleted			? SC.Ui_styles.UNIFIED_STATUS.CHECK :
										isRewardAvailable	? SC.Ui_styles.UNIFIED_STATUS.REWARD_AVAILABLE :
										isLocked			? SC.Ui_styles.UNIFIED_STATUS.LOCK :
										isSelected			? SC.Ui_styles.UNIFIED_STATUS.SELECTED
															: SC.Ui_styles.UNIFIED_STATUS.DEFAULT")
		(var statusText:str =		"	isCompleted			? 'IDS_TOOLTIP_REWARD_TAKEN' :
										isRewardAvailable	? 'IDS_AVAILABLE_REWARD' :
										isSelected			? 'IDS_STRATEGIC_ACTIONS_TERRITORY_SELECTED'
															: 'IDS_STRATEGIC_ACTIONS_TERRITORY_MARKER_TOOLTIP_STATUS_LOCKED'")

		(var canTasksBeShown:bool = "(territoryEntityId != 0) && !isLocked && !isDone")
	)

	(style (width = 340px) (hitTest = false))
	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)

	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(element TooltipSystemHeaderSubheaderText


			_headerText = "tr('IDS_TERRITORY_TITLE_' + toUpper(_territoryName))"
			_unifiedStatus = "isDone ? SC.Ui_styles.UNIFIED_STATUS.CHECK : SC.Ui_styles.UNIFIED_STATUS.DEFAULT"
		)
		(element TooltipSystemHorizontalDivider)

		
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "isStatusVisible")
				(args
					_unifiedStatus = "unifiedStatus"
					_text = "statusText"
				)
			)
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isStatusVisible"))
		)

		
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemProgressBarBlock'
				(bind enabled "isProgressVisible")
				(args
					_title = 'IDS_STRATEGIC_ACTIONS_TERRITORY_SCORE'
					_currentValue = "progress"
					_maxValue = "maxProgress"
				)
			)
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isProgressVisible"))
		)

		
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemSecondaryHeaderText'
				(bind enabled "canTasksBeShown")
				(args _headerText = 'IDS_STRATEGIC_ACTIONS_TASK_CURRENT')
			)
		)
		(block
			(style (width = 100%) (bind marginTop "canTasksBeShown ? SXS : 0"))
			(controller $Instance renderer='StrategicActionsTaskDescription'
				(bind enabled "canTasksBeShown")
				(args
					_entityId = "taskActiveEntity.id"
					_textClass = '$TextDefaultNM'
				)
			)
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "canTasksBeShown"))
		)

		
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemSecondaryHeaderText'
				(bind enabled "canTasksBeShown")
				(args _headerText = 'IDS_STRATEGIC_ACTIONS_TASK_NEXT')
			)
		)
		(block
			(style (width = 100%) (bind marginTop "canTasksBeShown ? SXS : 0"))
			(controller $Instance renderer='StrategicActionsTaskDescription'
				(bind enabled "canTasksBeShown")
				(args
					_entityId = "taskNextEntity.id"
					_textClass = '$TextDefaultNM'
				)
			)
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "canTasksBeShown"))
		)

		
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemTaskRestrictions'
				(bind enabled "areRestrictionsVisible")
				(args
					_battleTypes = "battleTypes"
					_restrictionEntity = "restrictionsEntity"
					_isPVEModifierApplied = "isPVEModifierApplied"
				)
			)
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "areRestrictionsVisible"))
		)

		(element TooltipSystemRewardsDHList
			_rewards = "rewards"
			_rewardsTitle = 'IDS_STRATEGIC_ACTIONS_TERRITORY_REWARDS_TOOLTIP'
		)
		(element TooltipSystemHorizontalDivider)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(args
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT"
					_text = "'IDS_STRATEGIC_ACTIONS_PROCEED_TO_TERRITORY'"
				)
			)
		)
	)
)


(def struct SA_NEW_YEAR_THRESHOLDS_POINTS (_entityId:number)
	(var entity:dhEntity = "getEntity(_entityId)")
	(var component:dhComponent = "entity.strategicActionsTerritory")
	(var progressCurrent:number = "component.progress ?: 0" (event "component.evChanged"))
	(var progressMax:number = "component.maxProgress ?: 1" (event "component.evChanged"))
	(var thresholdPoints:number = "progressMax/SC.Common.STRATEGIC_ACTIONS_UI.TERRITORY_STAGES_COUNT")
)

(def element TerritoryProgressNewYear (_entityId:number)
	(scope
		(struct territory = SA_NEW_YEAR_THRESHOLDS_POINTS (_entityId = "_entityId"))
		(var pointsTillNextReward:number = "territory.thresholdPoints - territory.progressCurrent % territory.thresholdPoints")
	)
	(style (backgroundColor = "NO_COLOR"))
	(hblock
		(style (marginBottom = "M"))
		(tf
			(class $TextDefault17NM)
			(style (alpha = "TA"))
			(bind text "subst('IDS_PL_STRATEGIC_ACTIONS_POINTS_TILL_NEXT_REWARD', [],
							{ _pointsTillNext:toString(pointsTillNextReward) }, pointsTillNextReward)")
		)
		(block
			(style
				(width = 19px)
				(height = 19px)
				(marginTop = "-XXS")
				(marginLeft = 6px)
				(backgroundImage = 'url:../service_kit/unified_status_icons/icon_info.png')
			)
		)
	)
	(hblock
		(controller $Repeat renderer='TerritoryProgressBarNewYear'
			(count = "SC.Common.STRATEGIC_ACTIONS_UI.TERRITORY_STAGES_COUNT")
			(args
				_entityId = "_entityId"
			)
		)
	)
	(controller $Tooltip
		(renderer='StrategicActionsPointsInfoTooltip')
		(macro DEFAULT_TOOLTIP_BEHAVIOUR)
	)
)

(def element TerritoryProgressBarNewYear (_entityId:number)
	(scope
		(struct territory = SA_NEW_YEAR_THRESHOLDS_POINTS (_entityId = "_entityId"))
		(var currentThresholdIndex:number = "floor(territory.progressCurrent/territory.thresholdPoints)")
		(var isThresholdCompleted:bool = "currentThresholdIndex > $index")
		(var thresholdsProgress:number = "isThresholdCompleted	? 1
																: max(0, territory.progressCurrent/territory.thresholdPoints - $index)")
	)
	(style (align = "center"))

	(element DefaultProgressBar
		_width = 115px
		_height = 10px
		_progress = "thresholdsProgress"
	)
	(block
		(style
			(width = 48px)
			(height = 48px)
			(bind backgroundImage "'url:../events/strategic_actions/new_year/progress/step_' + $index + '.png'")
			(bind alpha "isThresholdCompleted ? 1 : 0.65")
		)
		(bind colorTransform "isThresholdCompleted ? COLOR_TRANSFORM_WHITE_TO_YELLOW : {}")
	)
)

(def element TerritoryMarkerNewYear (_entityId:number)
	(scope
		(event evEnterFrame)
		(macro MOUSE_HANDLER_SCOPE)

		(var strategicActionsEntity:dhEntity = "getSingleEntity(CC.strategicActionsEvent)")
		(var strategicActionsEvent:dhComponent = "strategicActionsEntity.strategicActionsEvent")
		(var observedTerritory:number = "strategicActionsEvent.observedTerritory" (event "strategicActionsEvent.evObservedTerritoryChanged"))  
		(var isGlobalState:bool = "observedTerritory == GLOBAL_VIEW_ID")
		(var isActiveTerritoryObserved:bool = "observedTerritory == _entityId")

		(struct territory = SA_NEW_YEAR_THRESHOLDS_POINTS (_entityId = "_entityId"))
		(var territoryName:str = "territory.component.id" (event "territory.component.evChanged"))
		(var status:number = "territory.component.status" (event "territory.component.evChanged"))
		(var isLocked:bool = "status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.LOCKED")
		(var isCompleted:bool = "status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.COMPLETED")
		(var isRewardsClaim:bool = "status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.REWARDS_CLAIM")
		(var isSelected:bool = "status == SC.Common.STRATEGIC_ACTIONS_TERRITORY_STATUS.SELECTED")
		(var thresholdDoneCounter:number = "floor(territory.progressCurrent/territory.thresholdPoints)")
		(var isProgressVisible:bool = "(isRewardsClaim || isSelected || !isCompleted && territory.progressCurrent > 0) && thresholdDoneCounter != MAX_COMPLEXITY_LEVEL")

		(var markerEntity:dhEntity = "getPrimaryEntity(CC.strategicActionsTerritoryMarker, territoryName)")
		(var screenPosition:dhComponent = "markerEntity.screenPosition")

		(var posX:number = "screenPosition ? screenPosition.position.x : 0" (event "evEnterFrame"))
		(var posY:number = "screenPosition ? screenPosition.position.y : 0" (event "evEnterFrame"))

		(var iconState:str = "	isLocked						? 'locked' :
								isSelected || isRewardsClaim	? 'selected' :
								isCompleted						? 'completed'
																: 'available'")

		(var markerState:number = "rollOver ? SC.Ui_styles.BUTTON_STATE.OVER : SC.Ui_styles.BUTTON_STATE.UP")
		(var markerAlpha:number = "rollOver ? 0.5 : 1")
		
		(struct guidingTipSelectedTerritory = PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.STRATEGIC_ACTIONS_SELECTED_TERRITORY"))
		(var isActiveGuidingTipSelectedTerritory:bool = "guidingTipSelectedTerritory.isActive")
		(var isGuidingTipVisible:bool = "isActiveGuidingTipSelectedTerritory && isSelected && (isGlobalState || isActiveTerritoryObserved)")
	)
	(bindcall externalCall "'inputMapping.onAction'" "['observeTerritoryByMarker', {territoryName: territoryName}]" watch=false on='leftClick')
	(bindcall externalCall 'sound.playSetSoundDirect' "['strategic_actions', SoundEvent.OVER]" watch=false on='rollOver')
	(bindcall externalCall 'sound.playSetSoundDirect' "['strategic_actions', SoundEvent.CLICK]" watch=false on='leftClick')
	(macro MOUSE_EVENTS_DISPATCHER)

	(bind name "territoryName")

	(style
		(align = "center|middle")
		(backgroundColor = "NO_COLOR")
		(marginLeft = -50%)
		(marginTop = -50%)
		(width = 124px)
		(height = 124px)
		(position = "absolute")
		(bind left "posX")
		(bind top "posY")
	)
	(controller $Tooltip
		(renderer = 'StrategicOperationAreaTooltip')
		(args
			_territoryName = "territoryName"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR)
	)
	(block
		(style
			(align = "center")
			(backgroundColor = "NO_COLOR")
		)
		(macro DEFAULT_CONTROL_STATE_ANIMATION_ALPHA
			_trigger="markerState"
			_alpha="markerAlpha"
		)
		(block
			(style
				(width = 48px)
				(height = 48px)
				(marginBottom = "S")
				(bind backgroundImage "'url:../events/strategic_actions/new_year/markers/icon_' + iconState + '.png'")
			)
		)
		(block
			(controller $Instance renderer='DefaultDividedCounter'
				(bind enabled "isProgressVisible")
				(args
					_curValueTextClass = '$TextDefaultBold19NM'
					_curValue = "thresholdDoneCounter"
					_maxValue = "MAX_COMPLEXITY_LEVEL"
					_doNotAlphaOnZeroCurValue = true
				)
			)
		)
	)

	(block
		(class $FullsizeAbsolute)
		(style
			(hitTest = false)
			(top = "-XS")
		)
		(controller $Instance renderer='TerritoryClaimRewardMarkerNewYear'
			(bind enabled "isRewardsClaim")
		)
	)

	(block
		(controller $Instance renderer='GuidingTipHub'
			(bind enabled "isGuidingTipVisible")
			(args
				_tipId = "SC.Context_guiding_tip.TIP_TYPE.STRATEGIC_ACTIONS_SELECTED_TERRITORY"
				_tipPositioning = "TIP_POSITION_TOP"
				_offsetY = 88px
				_modalWindowName = 'ModalWindowStrategicActions'
			)
		)
	)
)

(def element TerritoryClaimRewardMarkerNewYear ()
	(class $Fullsize)
	(style
		(backgroundSize = "cover")
		(backgroundImage = 'url:../animations/spine/reward_states/strategic_actions/map_marker_NY.skel')
	)
	(controller $Spine)
)