(def constant LGNC_RENDER_ITEM_LIST	{	CC.sysMessageImage:					'LgncMessageImageBanner',
										CC.sysMessageHeader:				'LgncHeaderElement',
										CC.lgncMessageTimeLeftInfo:			'LgncTimerElement',
										CC.sysMessageDescription:			'LgncDescriptionElement',
										CC.sysMessageHTMLDescription:		'LgncHtmlDescriptionElement',
										CC.lgncMessageIconWithText:			'LgncMessageStatusLineInfo',
										CC.sysMessageStatusLineInfo:		'LgncMessageStatusLine',
										CC.sysMessageButtons:				'LgncMessageButtonContainer',
										CC.dataComponent:					'LgncAbuseMessage',
										CC.sysMessageAccountInfo:			'LgncAccountInfo'
									})

(def constant LGNC_MESSAGE_WIDTH 400)
(def constant LGNC_BANNER_IMAGE_HEIGHT 225)

(def element LgncMessageContainer ()
	(scope
		(event evRadioButtonSelected)
		(event evRemovedLgncMessage)

		(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_SCOPE)

		(var lgncTooltipStateEntity:gfx = "$datahub.getSingleEntity(CC.lgncTooltipState)")
		(var isLgncMessageVisible:bool = "lgncTooltipStateEntity.lgncTooltipState.isVisible" (event "lgncTooltipStateEntity.lgncTooltipState.evIsVisibleChanged"))

		(var lgncMessageCollection:gfx = "$datahub.getCollection(CC.lgncSysMsgToBeRendered).getChildByPath('reversed')")
		(var lgncMessageArray:array = "lgncMessageCollection ? lgncMessageCollection.items : []" (event "lgncMessageCollection.evAdded") (event "evRemovedLgncMessage"))
		(var hasManyMessages:bool = "lgncMessageArray.length > 1")

		(var lastItemIndex:number = "lgncMessageArray.length > 0 ? lgncMessageArray.length - 1 : 0")
		(var selectedIndex:number = "0")
		
		(bind selectedIndex "0" init=false watch=false (event "lgncMessageCollection.evAdded"))
		(bind selectedIndex "$event.index" init=false watch=false (event "evRadioButtonSelected"))
		(bind selectedIndex "selectedIndex > lastItemIndex ? lastItemIndex : selectedIndex" init=false watch=false (event "evRemovedLgncMessage"))

		
		(var lgncMessageArrayLength:number = "lgncMessageCollection.items.length" (event "lgncMessageCollection.evAdded") (event "lgncMessageCollection.evRemoved"))
		(var isNotLastElement:bool = "lgncMessageArrayLength < lgncMessageArray.length && lgncMessageArrayLength > 0")
		
	)
	(style (width = "LGNC_MESSAGE_WIDTH"))

	
	(dispatch evRemovedLgncMessage init=false watch=false (bind trigger "lgncMessageArrayLength") (bind enabled "isNotLastElement"))
	

	
	(block
		(dispatch evStartShow dir="EventDirection.DOWN" init=false watch=false (bind enabled "isLgncMessageVisible")	(bind trigger "isLgncMessageVisible"))
		(dispatch evStartHide dir="EventDirection.DOWN" init=false watch=false (bind enabled "!isLgncMessageVisible")	(bind trigger "isLgncMessageVisible"))
		
		(class $FullsizeAbsolute)
		(style
			(hitTest = false)
			(padding = "-XXS")
		)

		(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_MARKUP "true")
	)

	
	(block
		(style (width = 100%))
		(controller $Instance renderer='LgncMessageContent'
			(bind enabled "lgncMessageArray.length")
			(bindcall recreate (bind trigger "lgncMessageArray[selectedIndex]"))
			(args
				_lgncEntity = "lgncMessageArray[selectedIndex]"
			)
		)
	)

	
	(block
		(style
			(width = 100%)
			(alpha = "hasManyMessages ? 1 : 0")
			(ubScaleY = "hasManyMessages ? 1 : 0")
			(bind hitTest "hasManyMessages")
		)
		(block
			(class $FullsizeAbsolute)
			(isMask = true)
			(style (backgroundColor = 0xFFFFFFFF))
		)

		(controller $Animation
			(bindcall play to="{alpha:0}" duration=0.1 easing="Easing.line" action="kill" (bind enabled "!hasManyMessages"))
			(bindcall play to="{alpha:1}" duration=0.1 easing="Easing.line" action="kill" (bind enabled "hasManyMessages"))
		)
		(controller $Animation
			(bindcall play to="{ubScaleY:0, visible:false}" delay=0.15 duration=0.3 easing="Easing.quint_out" action="kill" (bind enabled "!hasManyMessages"))
			(bindcall play to="{ubScaleY:1, visible:true}" duration=0.3 easing="Easing.quint_out" action="kill" (bind enabled "hasManyMessages"))
		)

		(element HorizontalDividerTwoPx)
		(element LgncMessageRadioButtonContainer
			_count = "lgncMessageArray.length"
			_selectedIndex = "selectedIndex"
		)
	)
)

(def element LgncMessageContent (_lgncEntity:gfx)
	(scope
		(var contentEntitiesIds:array = "_lgncEntity ? _lgncEntity.sysMessageCore.contentEntitiesIds : []" (event "_lgncEntity.sysMessageCore.evContentEntitiesIdsChanged"))
	)
	(style (width = 100%))
	(controller $Repeat renderer = 'LgncMessageItem'
		(bind count "contentEntitiesIds.length")
		(args
			_contentEntitiesIds = "contentEntitiesIds"
		)
	)
)


(def element LgncMessageItem (_contentEntitiesIds:array)
	(scope
		(var lgncMessageItemEntity:gfx = "$datahub.getEntity(_contentEntitiesIds[$index])")
		(var lgncMessageContentType:number = "lgncMessageItemEntity.sysMessageContentType.contentType")
		(var renderElement:str = "LGNC_RENDER_ITEM_LIST[lgncMessageContentType]")

		(var lgncMessageContentComponent:gfx = "lgncMessageItemEntity.getComponent(lgncMessageContentType)")
	)
	(style (width = 100%))

	(controller $Instance
		(bind renderer "renderElement")
		(args
			_contentComponent = "lgncMessageContentComponent"
		)
	)
)


(def element LgncHeaderElement (_contentComponent:gfx)
	(scope
		(var title:str = "_contentComponent.header" (event "_contentComponent.evChanged"))
	)
	(style
		(width = 100%)
		(paddingTop = "M")
		(paddingLeft = "M")
		(paddingRight = "SXS")
		(hitTest = false)
	)

	(tf
		(style (width = 100%) (leading = "-4") (alpha = "TA"))
		(class $TextDefaultBold21NM)
		(bind text "title")
	)
)


(def element LgncTimerElement (_contentComponent:gfx)
	(scope
		(var timestamp:number = "_contentComponent.timestamp" (event "_contentComponent.evChanged"))
		(var attentionTimerInterval:number = "_contentComponent.attentionTimerInterval ?: 0" (event "_contentComponent.evChanged"))
		(var attentionUnifiedStatus:str = "_contentComponent.attentionUnifiedStatus" (event "_contentComponent.evChanged"))
		(var textLine:str = "_contentComponent.textLine" (event "_contentComponent.evChanged"))
		(var zeroTextLine:str = "_contentComponent.zeroTextLine" (event "_contentComponent.evChanged"))
		(var unifiedStatus:str = "_contentComponent.unifiedStatus" (event "_contentComponent.evChanged"))

		(macro SERVER_TIME_SCOPE)
		(var timeLeft:number = "timestamp - serverTime")
		(var isOneHourLeft:bool = "timeLeft < HOUR_IN_SEC")
		(var timeLeftFormat:str = "formatTime(timeLeft, isOneHourLeft ? 'mm:ss' : 'HH:mm:ss')")

		(var timerText:str = "timeLeft >= 0	? textLine		?	subst(textLine, [], { _timeLeft: timeLeftFormat })
															:	timeLeftFormat
											: zeroTextLine")

		(var currentUnifiedStatus:str = "	timeLeft <= attentionTimerInterval 	? (attentionTimerInterval > 0 	? attentionUnifiedStatus 
																												: SC.Ui_styles.UNIFIED_STATUS.DATE)
																				: unifiedStatus")
	)
	(style
		(width = 100%)
		(paddingTop = "M")
		(paddingLeft = "M")
		(paddingRight = "SXS")
		(hitTest = false)
	)

	(element TooltipSystemStatusLine
		_unifiedStatus = "currentUnifiedStatus"
		_text = "timerText"
	)
)


(def element LgncDescriptionElement (_contentComponent:gfx)
	(scope
		(var description:str = "_contentComponent.description" (event "_contentComponent.evChanged"))
	)
	(style
		(width = 100%)
		(paddingTop = "M")
		(paddingLeft = "M")
		(paddingRight = "SXS")
		(hitTest = false)
	)

	(tf
		(class $TextDefaultNM)
		(style
			(width = 100%)
			(leading = -2)
			(alpha = "TC")
		)

		(bindcall substitute	imageOffset=5
								substitutionMap="{}"
								sourceText="tr(description)"
								postfix=''
								init=true)
	)
)


(def element LgncHtmlDescriptionElement (_contentComponent:gfx)
	(scope
		(var description:str = "_contentComponent.description" (event "_contentComponent.evChanged"))
	)
	(style
		(width = 100%)
		(paddingTop = "M")
		(paddingLeft = "M")
		(paddingRight = "SXS")
		(hitTest = false)
	)
	(element TooltipSystemHtmlDescriptionText
		_descriptionText = "description"
	)
)


(def element LgncMessageStatusLineInfo (_contentComponent:gfx)
	(style
		(width = 100%)
		(flow = "horizontal")
		(paddingTop = "M")
		(paddingLeft = "14")
		(paddingRight = "SXS")
		(hitTest = false)
	)
	(block
		(alpha = "TS")
		(style
			(width = 24px) (height = 24px) (marginTop = -5px) (marginLeft = -3px)
			(marginBottom = -7px) (marginRight = 2px) (backgroundSize = "cover")
			(bind backgroundImage "'url:../service_kit/buttons/icons/notification.png'")
		)
	)
	(tf
		(class $TextDefaultNM)
		(alpha = "TS")
		(style (width = 100%) (leading = -3))
		(text = "tr('IDS_PRMP_OPEN_WITH_NOTIFICATION_CENTER')")
	)
)

(def element LgncMessageStatusLine (_contentComponent:gfx)
	(scope
		(var textLine:str = "_contentComponent.textLine" (event "_contentComponent.evChanged")) 
	)
	(bind visible "textLine != ''")
	(style
		(paddingLeft = "M")
		(paddingRight = "M")
		(width = 100%)
		(bind paddingTop "textLine ? M : 0")
	)
	(element StatusLine
		_text = "textLine"
		_unifiedStatus = "_contentComponent.unifiedStatus"
		_width = 100%
	)
)


(def element LgncMessageButtonContainer (_contentComponent:gfx)
	(scope
		(var buttons:array = "_contentComponent.buttons" (event "_contentComponent.evButtonsChanged"))
	)
	(style
		(width = 100%)
		(flow = "horizontal")
		(align = "center")
		(paddingLeft = "M")
		(paddingRight = "M")
		(paddingTop = "L")
		(paddingBottom = "SXS")
	)
	
	(block
		(style (bind marginRight "buttons.length > 1 ? S : 0"))
		(controller $Instance renderer='DefaultButton'
			(bind enabled "buttons.length > 0")
			(args
				_name = "buttons[0].name"
				_enabled = "buttons[0].enabled"
				_type = "buttons[0].type"
				_isExternal = "buttons[0].isExternal"
				_width = "180"
				_label = "buttons[0].label"
				_methods = "buttons[0].methods"
			)
		)
	)

	(block
		(controller $Instance renderer='DefaultButton'
			(bind enabled "buttons.length > 1")
			(args
				_name = "buttons[1].name"
				_enabled = "buttons[1].enabled"
				_type = "buttons[1].type"
				_isExternal = "buttons[1].isExternal"
				_width = "180"
				_label = "buttons[1].label"
				_methods = "buttons[1].methods"
			)
		)
	)
)


(def element LgncMessageImageBanner (_contentComponent:gfx)
	(scope
		(var imageEntity:dhEntity =			"getPrimaryEntity(CC.externalImage, _contentComponent.url)")
		(var imageComponent:dhComponent =	"imageEntity.externalImage")
		(var isImageLoaded:bool =			"imageComponent.isLoaded" (event "imageComponent.evIsLoadedChanged"))
		(var urlPath:str =					"isImageLoaded ? 'img://embedded:byteImage?url=' + imageComponent.url : ''")
	)
	(style
		(width = "LGNC_MESSAGE_WIDTH")
		(height = "LGNC_BANNER_IMAGE_HEIGHT")
		(backgroundSize = "fill")
		(bind backgroundImage "urlPath")
		(hitTest = false)
	)
)

(def element LgncTimeLeftInfo (_contentComponent:gfx)
	(style (width = 100%) (hitTest = false))
	(name = 'SystemNotificationTimeLeftInfo')
	(controller $Instance renderer='TooltipSystemTimeLeftStatusLine'
		(bind enabled "_contentComponent")
		(args
			_timeLeftTimeStamp = "_contentComponent.timestamp"
			_substTextIDS = "_contentComponent.textLine"
			_zeroTimeTextIDS = "_contentComponent.zeroTextLine"
		)
	)
)


(def element LgncMessageRadioButtonContainer (_count:number, _selectedIndex:number)
	(style
		(width = 100%)
		(flow = "tile_horizontal")
		(align = "center|middle")
		(paddingLeft = "S")
		(paddingRight = "S")
		(paddingTop = 6px)
		(paddingBottom = 6px)
		(vgap = "S")
		(hgap = "XS")
	)

	(controller $Repeat renderer='RadioButton'
		(bind count "_count > 1 ? _count : 2")
		(args
			_isSelected = "_selectedIndex == $index"
			_dispatchedEv = 'evRadioButtonSelected'
			_dispatchParams = "{ index: $index }"
		)
	)
)


(def element LgncAbuseMessage (_contentComponent:gfx)
	(scope
		(var accountEntity:dhEntity = "getSingleEntity(CC.accountSelf)")
		(var accountInfo:dhComponent = "accountEntity.accountInfo")

		(var data:dict = "_contentComponent.data" (event "_contentComponent.evDataChanged"))
		(var abuseStatus:number = "'status' in data ? data.status : SC.Common.ABUSE_STATUS.NORMAL")

		(var abuseStatusStr:str = "	abuseStatus == SC.Common.ABUSE_STATUS.NORMAL	? SC.Common.ABUSE_STATUS.NAMES.NORMAL :
									abuseStatus == SC.Common.ABUSE_STATUS.SUSPECT	? SC.Common.ABUSE_STATUS.NAMES.SUSPECT
																					: SC.Common.ABUSE_STATUS.NAMES.CONFIRMED")
		
		(var headerUnifiedStatus:str = "abuseStatus == SC.Common.ABUSE_STATUS.NORMAL	? SC.Ui_styles.UNIFIED_STATUS.ABUSE_NORMAL :
										abuseStatus == SC.Common.ABUSE_STATUS.SUSPECT	? SC.Ui_styles.UNIFIED_STATUS.ABUSE_SUSPECT
																						: SC.Ui_styles.UNIFIED_STATUS.ABUSE_CONFIRMED")

		
		(var battlesToClean:number = "accountInfo.battlesForStatusClean > 0 ? accountInfo.battlesForStatusClean : 0" (event "accountInfo.evBattlesForStatusCleanChanged")) 
		
		(var abuseReasonMessageCollection:gfx = "$datahub.getCollection(CC.abuseStatus).getChildByPath('byStatus.' + SC.Common.ABUSE_STATUS.SUSPECT)")
		(var abuseReasonMessageArray:array = "abuseReasonMessageCollection ? abuseReasonMessageCollection.items : []" (event "abuseReasonMessageCollection.evAdded") (event "abuseReasonMessageCollection.evRemoved"))
	)
	(macro UNIFIED_STATUS_TO_COLOR_AND_ALPHA "headerUnifiedStatus" "'headerTextColor'" "'headerTextAlpha'")
	(bind name "'AbuseWarningContainer_' + abuseStatus")

	(style
		(width = 100%)
		(paddingLeft = "M")
		(paddingRight = "M")
		(paddingTop = "M")
		(hitTest = false)
	)

	(tf
		(style (width = 100%) (leading = "-4") (bind textColor "headerTextColor") (marginBottom = "MS"))
		(class $TextDefaultBold21NM)
		(bind alpha "headerTextAlpha")

		(bind text "'IDS_SYS_MSG_ABUSE_STATUS_CHANGED_' + abuseStatus")
	)

	(block
		(bind visible "abuseStatus != SC.Common.ABUSE_STATUS.NORMAL")
		(style (width = 100%) (marginLeft = "XS") (marginBottom = "M"))

		(controller $Repeat renderer='RepeatAbuseReasonMessageWithBullets'
			(bind count "abuseReasonMessageArray.length")
			(args
				_abuseStatusReason = "abuseReasonMessageArray[$index].abuseStatus.reason"
				_collectionLength = "abuseReasonMessageArray.length"
			)
		)
	)

	(tf
		(class $TextDefaultNM)
		(style (width = 100%) (marginBottom = "M") (alpha = "TA"))
		(bind text "tr('IDS_ABUSE_STATUS_' + abuseStatusStr + '_DESCRIPTION')")
	)

	(block
		(style (width = 100%) (flow = "horizontal"))
		(tf
			(style (alpha = "TA"))
			(class $TextDefaultNM)
			(bind text "tr('IDS_ABUSE_' + abuseStatusStr + '_STATUS_CLEAN_COLON')")
		)
		(tf
			(class $TextDefaultBoldNM)
			(style (alpha = "TA") (marginLeft = "5px"))
			(bind text "battlesToClean")
		)
	)
)

(def element RepeatAbuseReasonMessageWithBullets (_abuseStatusReason:str, _collectionLength:number)
	(style (width = 100%))
	(tf	
		(class $TextDefaultNM)
		(style (width = 100%) (bind marginBottom "$index + 1 == _collectionLength ? 0px : S") (alpha = "TA"))
		(bind text "'IDS_ABUSE_REASON_' + toUpper(_abuseStatusReason) + '_WITH_BULLET'")
	)
)

(def element RepeatAbuseReasonMessage (_abuseStatusReason:str, _collectionLength:number)
	(style (width = 100%))
	(tf	
		(class $TextDefaultNM)
		(style (width = 100%) (bind marginBottom "$index + 1 == _collectionLength ? 0px : S") (alpha = "TA"))
		(bind text "'IDS_ABUSE_REASON_' + toUpper(_abuseStatusReason)")
	)
)


(def element LgncAccountInfo (_contentComponent:gfx)
	(scope
		(var accountId:number = "_contentComponent.accountId")
		(var accountSimpleCollection:gfx = "$datahub.getCollection(CC.accountSimple)")
		(var accountEntity:gfx = "$datahub.getPrimaryEntity(CC.accountSimple, accountId)" (event "accountSimpleCollection.evAdded"))
		(var role:str = "accountEntity.clanman.role" (event "accountEntity.clanman.evRoleChanged"))
		(var accountName:str = "accountEntity.accountName.name" (event "accountEntity.accountName.evChanged"))
	)
	(style
		(width = "100%")
		(paddingTop = "M")
		(paddingLeft = "M")
		(paddingRight = "SXS")
		(hitTest = "false")
	)

	(element TooltipSystemHtmlDescriptionText
		_descriptionText = "'<body>' + tr('IDS_FROM_PLAYER') + ' [' + role + '] ' + '<h3>' + accountName + '</h3></body>'"
	)
)
