(def constant NOTIFICATION_RENDER_ITEM_LIST	{	CC.sysMessageHeader:					'SystemNotificationHeader',
												CC.sysEmergencyMessageHeader:			'SystemNotificationHeader',
												CC.sysMessageDescription:				'SystemNotificationDescription',
												CC.sysMessageHTMLDescription:			'SystemNotificationHtmlDescription',
												CC.sysMessageResourcesChanges:			'SystemNotificationResourcesChanges',
												CC.sysMessageShipInfo:					'SystemNotificationShipInfo',
												CC.sysMessageShipInfoWithTitle:			'SystemNotificationShipInfoWithTitle',
												CC.sysMessageShipRangeInfo:				'SystemNotificationShipRangeInfo',
												CC.sysMessageCounterInfo:				'SystemNotificationCounterInfo',
												CC.sysMessageTimePeriodInfo:			'SystemNotificationTimePeriodInfo',
												CC.sysMessageTimeLeftInfo:				'SystemNotificationTimeLeftInfo',
												CC.sysMessageDateInfo:					'SystemNotificationDateInfo',
												CC.postBattleSysMessage:				'SystemNotificationPostBattle',
												CC.sysMessageCampaignInfo:				'SystemNotificationCampaignInfo',
												CC.sysMessageCampaignMissionInfo:		'SystemNotificationCampaignMissionInfo',
												CC.sysMessageCampaignTaskInfo:			'SystemNotificationCampaignTaskInfo',
												CC.sysMessageStatusLineInfo:			'SystemNotificationStatusLineInfo',
												CC.rewardsStack:						'SystemNotificationRewardInfo',
												CC.sysMessageButtons:					'SystemNotificationButtonContainer',
												CC.sysMessageSkill:						'SystemNotificationSkillItem',
												CC.sysMessageUniqueSkill:				'SystemNotificationUniqueSkillItem',
												CC.sysMessageStrategicActionsBonus:		'SystemNotificationStrategicActionsBonusItem',
												CC.sysMessageShipInfoWithMasteryRank:	'SystemNotificationShipMastery',
												CC.sysMessageExchangeableChanges:		'SystemNotificationExchangeableChanges',
											})

(def constant SYSTEM_MESSAGES_OFFSET 200)
(def constant INFOTIP_WIDTH 326)

(def constant SYSTEM_MESSAGE_ITEM_HEIGHT 37)
(def constant SYSTEM_MESSAGE_ITEM_LABEL_WIDTH 250)

(def constant REWARDS_STACK_LIMIT 3)
(def constant CONTENT_ENTITY_HEADER_ID 0)

(def css SystemMessagesScrollThumbUpStyle() (backgroundColor = 0xFF000000) )
(def css SystemMessagesScrollThumbHoverStyle() (backgroundColor = 0xFFFFFFFF) )
(def css SystemMessagesScrollThumbPressStyle() (backgroundColor = 0xFF888888) )
(def css SystemMessagesScrollThumbDisabledStyle() (backgroundColor = 0xFF111111) )

(def constant SYS_MSG_SCROLL_THUMB_STATES {
		up : 'SystemMessagesScrollThumbUpStyle',
		over : 'SystemMessagesScrollThumbHoverStyle',
		down : 'SystemMessagesScrollThumbPressStyle',
		disabled : 'SystemMessagesScrollThumbDisabledStyle' })

(def css SystemMessagesScrollTrackUpStyle() (backgroundColor = "NO_COLOR"))
(def css SystemMessagesScrollTrackHoverStyle() )
(def css SystemMessagesScrollTrackPressStyle() )
(def css SystemMessagesScrollTrackDisabledStyle() )

(def constant SYS_MSG_SCROLL_TRACK_STATES {
		up : 'SystemMessagesScrollTrackUpStyle',
		over : 'SystemMessagesScrollTrackHoverStyle',
		down : 'SystemMessagesScrollTrackPressStyle',
		disabled : 'SystemMessagesScrollTrackDisabledStyle' }
)

(def element SystemMessagesScrollThumb()
	(bind class "SYS_MSG_SCROLL_THUMB_STATES[$event.state]" init=false on='stateChanged')
	(style
		(width = 6px)
		(padding = 1px)
		(height = 80px)
		(backgroundColor = 0x10FFFFFF)
	)
	(block
		(class $Fullsize)
		(style (backgroundColor = 0x66000000))
	)
)

(def element SystemMessagesScrollTrack()
	(style
		(width = 7px)
		(height = 100%)
	)
	(bind class "SYS_MSG_SCROLL_TRACK_STATES[$event.state]" init=false on='stateChanged')
	(mouseEnabled = false)
)

(def element NotificationPanel (_timeText:str)
	(scope
		(event evSystemMessagesInfotipShown)
		(event evSystemMessagesInfotipHidden)

		(struct balancerRoute =			PULL_ROUTE(_id = "SC.Ui_windows.ROUTE.BALANCER"))
		(struct newbieGiftsRoute =		PULL_ROUTE(_id = "SC.Ui_windows.ROUTE.NEWBIE_GIFTS"))
		(struct strategicActionsRoute =	PULL_ROUTE(_id = "SC.Ui_windows.ROUTE.STRATEGIC_ACTIONS"))

		(struct showPortClockPref = GET_PREF_BOOL(_option = "'ui.showPortClock'"))

		(struct windowQueue = PULL_WINDOW_QUEUE())
		(var isLoadingBattle:bool =	"isIn('LoadingBattle', windowQueue.queue)")

		(var balancerInfoEntity:dhEntity = "getSingleEntity(CC.balancerInfo)")
		(var isPreparingForBattle:bool = "balancerInfoEntity.balancerInfo.isPreparingForBattle" (event "balancerInfoEntity.balancerInfo.evIsPreparingForBattleChanged"))

		(var isNotificationLogHidden:bool = "balancerRoute.isActive || isPreparingForBattle || isLoadingBattle || newbieGiftsRoute.isActive || strategicActionsRoute.isActive")

		(var isNotificationInfotipShown:bool = "false")
		(bind isNotificationInfotipShown "true" init=false (event "evSystemMessagesInfotipShown"))
		(bind isNotificationInfotipShown "false" init=false (event "evSystemMessagesInfotipHidden"))

		(var systemNotificationCollection:dhCollection = "getCollection(CC.notificationSysMsgToBeRendered)")
		(var systemNotificationLen:number = "systemNotificationCollection.length")
		(var hasMessages:bool = "systemNotificationLen > 0 && !isNotificationInfotipShown")
	)
	(style (flow = "horizontal") (width = 250px) (align = "right|middle"))

	
	(block
		(bind visible "showPortClockPref.value")
		(style (marginRight = "SXS"))

		(tf
			(class $TextDefaultNM)
			(style (width = 42px) (textAlign = "right") (alpha = "TA"))
			(bind text "_timeText")
		)
		
		(controller $Tooltip
			(renderer = 'SimpleStatusTooltip')
			(args
				_text = 'IDS_CURRENT_TIME'
			)
			(macro DEFAULT_TOOLTIP_BEHAVIOUR)
		)
	)
 
	(block
		(bind visible "!isNotificationLogHidden")
		(style
			(width = 90px)
			(marginRight =	"hasMessages ? S : 0px")
			(alpha =		"hasMessages ? 1 : 0")
			(scaleX =		"hasMessages ? 1 : 0")
		)

		(controller $Animation
			(bindcall play
				keyframes = "[
					{time: 0,		to:{ alpha:0, visualOffsetY: -15px, scaleX: 0, marginRight: 0px }},
					{time: 0.15,	to:{ alpha:0, scaleX: 1 }},
					{time: 0.3,		to:{ alpha:1, visualOffsetY: 0px, marginRight: S }, easing:Easing.back_out}
				]"
				delay = "hasMessages ? 1 : 0"
				action = "kill"
				reverse = "!hasMessages"
				watch = false

				(bind trigger "hasMessages")
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='DefaultButton'
				(bind enabled "!isNotificationLogHidden")
				(args
					_enabled = "hasMessages"
					_size = "SIZE.SMALL"
					_width = 100%
					_type = "SC.Ui_styles.BUTTON_TYPE.SECONDARY"
					_label = 'IDS_CLEAR_MESSAGE_QUEUE'
					_methods = "[{ type: 'direct.action', name: 'onClearMessagesQueue', args: {}}]"
				)
			)
		)

		(controller $Tooltip
			(bind enabled "!isNotificationLogHidden")
			(renderer = 'SimpleStatusTooltip')
			(args
				_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT"
				_text = 'IDS_CLEAR_SYSTEM_MESSAGES_QUEUE'
			)
			(macro DEFAULT_TOOLTIP_BEHAVIOUR)
		)
	)

	(block
		(controller $Instance renderer='ButtonNotifications'
			(bind enabled "!isNotificationLogHidden")
		)
	)
)

(def element ButtonNotifications ()
	(element DefaultButton
		_type = "SC.Ui_styles.BUTTON_TYPE.ICON"
		_icon = "SC.Ui_styles.BUTTON_ICON.NOTIFICATION"
		_name = 'ButtonNotificationsInbox'
	)

	(controller $Tooltip
		(renderer = 'SimpleStatusTooltip')
		(args
			_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT"
			_text = 'IDS_OPEN_SYSTEM_MESSAGES'
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR "0")
	)

	(controller $Tooltip
		(renderer='SystemMessagesInfotip')
		(macro DEFAULT_INFOTIP_BEHAVIOUR "1")
		(align = "top|center")

		(bindcall externalCall "'direct.action'" "['onNotificationsPanelOpen',	{}]" on='evStartShow')
		(bindcall externalCall "'direct.action'" "['onClearMessagesQueue',		{}]" on='rightClick')
		(bindcall externalCall "'direct.action'" "['onNotificationsPanelClose',	{}]" on='evHide')

		(dispatch 'evSystemMessagesInfotipShown' dir="EventDirection.UP" init=false watch=false on='evStartShow')
		(dispatch 'evSystemMessagesInfotipHidden' dir="EventDirection.UP" init=false watch=false on='evHide')
	)
)

(def element SystemMessagesInfotip ()
	(scope
		(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_SCOPE)
		(event evGroupClick)
		(event evSetActiveGroup)

		(struct dragInfotip = DRAG_INFOTIP_DATA_SCOPE(_type="SC.Common.DRAG_INFOTIP_TYPE.NOTIFICATIONS"))

		(var systemMessageCollection:gfx = "$datahub.getCollection(CC.sysMessageCore)")
		(var isVersionUpdatedMessagesEnable:bool = "systemMessageCollection ? systemMessageCollection.getChildByPath('byMessageGroup.' + SC.Ui_common.SYSTEM_MESSAGE_GROUP.VERSION_UPDATERS).items.length > 0
																			: false" (event "systemMessageCollection.evAdded"))

		(var groupList:array = "isVersionUpdatedMessagesEnable	? SC.Ui_common.SYSTEM_MESSAGE_GROUP.SYSTEM_MESSAGE_GROUP_LIST_WITH_VERSION_UPDATE
																: SC.Ui_common.SYSTEM_MESSAGE_GROUP.SYSTEM_MESSAGE_GROUP_LIST_DEFAULT")

		(macro GET_PREF_NUMBER 'prefSelectedGroup' "'ui.notificationsSelectedGroup'")
		(var activeGroup:number = "$event ? groupList[$event.groupIndex] : prefSelectedGroup" watch=false (event "evSetActiveGroup"))
		(var isPrefGroup:bool = "isIn(activeGroup, SC.Ui_common.SYSTEM_MESSAGE_GROUP.SYSTEM_MESSAGE_GROUP_PREF_LIST)")

		(var battleTypeSessionStatsComponent:gfx = "$datahub.getSingleComponent(CC.sessionStats)")
		(var nonzeroBattleTypes:array = "battleTypeSessionStatsComponent.nonzeroBattleTypes ?: []" (event "battleTypeSessionStatsComponent.evChanged"))

		(var isBattleResultGroup:bool = "activeGroup == SC.Ui_common.SYSTEM_MESSAGE_GROUP.BATTLE_RESULTS")
		(var isSessionStatisticsGroup:bool = "activeGroup == SC.Ui_common.SYSTEM_MESSAGE_GROUP.SESSION_STATISTICS")
		(var isSessionStatisticsEmpty:bool = "nonzeroBattleTypes.length == 0 || !battleTypeSessionStatsComponent")

		(var systemMessageSubCollection:gfx = "!isSessionStatisticsGroup ? systemMessageCollection.getChildByPath('byMessageGroup.' + activeGroup) : null")
		(var systemMessageSubCollectionArray:array = "systemMessageSubCollection.items ?: []" (event "systemMessageSubCollection.evAdded"))
		(var hasSubCollectionItems:bool = "systemMessageSubCollectionArray.length > 0")

		(var isScrollAreaVisible:bool = "hasSubCollectionItems || isSessionStatisticsGroup && !isSessionStatisticsEmpty")
		(var isNoSystemMessages:bool = "!hasSubCollectionItems && !isSessionStatisticsGroup")

		(var isHitTest:bool = false)
		(bind isHitTest "true" init=false watch=false (event "evShow"))
		(bind isHitTest "false" init=false watch=false (event "evStartHide"))
	)
	(style (width = "INFOTIP_WIDTH") (bind height "dragInfotip.infotipHeight") (backgroundColor = 0x66000000) (bind hitTest "isHitTest"))
	(bindcall externalCall "isPrefGroup ? 'direct.action' : ''" "['option.set', ['ui.notificationsSelectedGroup', activeGroup]]" init=false watch=false (event "evSetActiveGroup"))
	(dispatch evSetActiveGroup dir="EventDirection.NONE" args="$event" delay=0.01 (event "evGroupClick"))

	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_MARKUP "true")
	(element INFOTIP_SYSTEM_DEFAULT_CONTAINER
		(class $Fullsize)
		(block
			(style (width = 100%) (marginBottom = "XXS"))
			(element DefaultInfotipDragGripper _type="SC.Common.DRAG_INFOTIP_TYPE.NOTIFICATIONS")
		)

		
		(hblock
			(style (width = 100%))

			(controller $Repeat renderer='SystemMessagesInfotipTabButtonWrapper'
				(bind count "groupList.length")
				(args
					_activeGroup = "activeGroup"
					_groupList = "groupList"
					_isInfotipDragging = "dragInfotip.isInfotipDragging"
				)
			)
		)
		(block
			(style (width = 100%) (marginTop = -2px))
			(element HorizontalDividerTwoPx)
		)

		(scrollArea
			(bind visible "isScrollAreaVisible")
			(class $Fullsize)

			(macro DEFAULT_VERTICAL_SCROLL_PARAMS
				_singleStep = "SYSTEM_MESSAGE_ITEM_HEIGHT"
				_isContrastScrollBar = "true"
			)
			(repeatController = 'systemMessageContainer')
			(scrollPerItem = true)

			(content
				(style (width = 100%))

				(reverse
					(style (width = 100%))

					(controller $DynamicRepeat renderer='SystemMessageWrapper' name='systemMessageContainer'
						(bind enabled "!isSessionStatisticsGroup")
						(bind count "systemMessageSubCollectionArray.length")
						(args
							_messageCollection = "systemMessageSubCollection"
							_isBattleResultGroup = "isBattleResultGroup"
						)

						(itemWidth = 100%)
						(itemHeight = "SYSTEM_MESSAGE_ITEM_HEIGHT")
						(itemOffset = "SYSTEM_MESSAGES_OFFSET")
					)
				)

				(block
					(style (width = 100%))
					(controller $Instance renderer='SessionStatistics'
						(bind enabled "isSessionStatisticsGroup")
						(args _battleTypeSessionStatsComponent = "battleTypeSessionStatsComponent")
					)
				)
			)
			(bindcall scrollToBegin animated=false on='addedToStage' (event "evGroupClick"))
		)

		(block
			(bind visible "isNoSystemMessages || isSessionStatisticsEmpty")
			(class $Fullsize)
			(style (align = "center|middle"))
			(tf
				(class $TextDefault17NM)
				(style (alpha = "TC"))
				(bind text "isNoSystemMessages ? 'IDS_NO_NEW_SYSTEM_MESSAGES' : 'IDS_PLAY_BATTLE_FOR_STATS'")
			)
		)
	)
)

(def element SystemMessagesInfotipTabButtonWrapper (_activeGroup:number, _groupList:array, _isInfotipDragging:bool)
	(scope
		(var battleTypeSessionStatsComponent:gfx = "$datahub.getSingleComponent(CC.sessionStats)")

		(var nextRefreshTime:number = "battleTypeSessionStatsComponent.nextRefreshTime ?: 0" (event "battleTypeSessionStatsComponent.evChanged"))
		(var formatNextCleanTime:str = "formatTime(nextRefreshTime, 'hh:mm', '', false)")

		(var tabIcons:array = "['url:../service_kit/sys_messages/statistic.png',
								'url:../service_kit/sys_messages/battle.png',
								'url:../service_kit/sys_messages/inventory.png',
								'url:../service_kit/sys_messages/info.png',
								'url:../service_kit/sys_messages/version_updater.png']")

		(var tooltipContentItems:array = "[ subst('IDS_SYS_MESSAGE_GROUP_SESSION_STATISTICS_DESCRIPTION', [], { _nextRefreshTime: formatNextCleanTime}),
											'IDS_SYS_MESSAGE_GROUP_BATTLE_RESULTS_DESCRIPTION',
											'IDS_SYS_MESSAGE_GROUP_STORAGE_CHANGES_DESCRIPTION',
											'IDS_SYS_MESSAGE_GROUP_INFO_DESCRIPTION',
											'IDS_SYS_MESSAGE_GROUP_VERSION_UPDATERS_DESCRIPTION' ]")
	)

	(style (bind width "toString(100 / _groupList.length) + '%'"))

	(element TabButton
		_isSelected = "_activeGroup == _groupList[$index]"
		_isDisabled = "_isInfotipDragging"
		_width = "'100%'"
		_image = "tabIcons[$index]"
		_dispatchedEv = "'evGroupClick'"
		_dispatchParams = "{ groupIndex: $index }"
		_name = "tooltipContentItems[$index]"
		_tooltipData = "{ text: tooltipContentItems[$index] }"
	)

	(controller $Tooltip
		(renderer = 'SimpleStatusTooltip')
		(args
			_text = "tooltipContentItems[$index]"
			_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.DEFAULT"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR)
	)
)

(def element SessionStatistics (_battleTypeSessionStatsComponent:gfx)
	(scope
		(event ItemChooser_evBattleTypeSelected)

		(var selectedBattleTypeIndex:number = "_battleTypeSessionStatsComponent.selectedBattleTypeIndex" (event "_battleTypeSessionStatsComponent.evSelectedBattleTypeIndexChanged") (event "_battleTypeSessionStatsComponent.evChanged"))
		(var nonzeroBattleTypes:array = "_battleTypeSessionStatsComponent.nonzeroBattleTypes ?: []" (event "_battleTypeSessionStatsComponent.evChanged"))
		(var battleTypeSessionStatsList:array = "_battleTypeSessionStatsComponent.sessionEfficiency ?: []" (event "_battleTypeSessionStatsComponent.evChanged"))
		(var allBattlesCount:number = "battleTypeSessionStatsList[selectedBattleTypeIndex].allTimeBattlesCount ?: 0")
		(var battlesCount:number = "battleTypeSessionStatsList[selectedBattleTypeIndex].battlesCount ?: 0")
		(var isTotalEnabled:bool = "allBattlesCount != SC.Common.SESSION_STATS.NO_TOTALS_SESSION_SECTION_MARKER")

		(var sessionBattleEfficiency:array = "battleTypeSessionStatsList[selectedBattleTypeIndex].sessionBattleEfficiencyAllTypes ?: []")
		(var sessionEconomicsEfficiency:array = "battleTypeSessionStatsList[selectedBattleTypeIndex].sessionEconomicsEfficiencyAllTypes ?: []")
		(var isDisabled:bool = "nonzeroBattleTypes.length <= 1")
	)
	(bindcall externalCall 'direct.action' "['sessionStatsBattleTypeChosen', [$event.selectedIndex, nonzeroBattleTypes[$event.selectedIndex]]]" init=false watch=false (event "ItemChooser_evBattleTypeSelected"))

	(style (width = 100%))

	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(block
			(macro TOOLTIP_SYSTEM_PARAMS_CONTAINER)
			(block
				(style
					(width = 100%)
					(align = "center")
					(marginTop = "SXS")
					(marginBottom = "S")
				)

				(block
					(width = 100%)
					(element ItemChooser
						_items = "nonzeroBattleTypes"
						_choosedItemRenderer = 'BattleTypeChosenItemRenderer'
						_listItemRenderer = 'SessionStatsTextListItemRenderer'
						_curIndex = "selectedBattleTypeIndex"
						_onItemSelectedEvent = 'evBattleTypeSelected'
						_itemChooserTooltipText = 'IDS_CHOOSE_BATTLETYPE_FOR_SESSION_STATS'
						_itemChooserTooltipUnifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT"
						_dropDownWidth = 171
					)
				)

				(block
					(style (width = 100%) (align = "center") (backgroundColor = "NO_COLOR"))
					(tf
						(class $TextDefaultBold40NM)
						(style (marginTop = "SXS") (alpha = "TA"))
						(bind text "battlesCount")
					)

					(tf
						(class $TextDefaultBoldNM)
						(style (marginTop = "M") (alpha = "TA") (marginBottom = "S"))
						(text = 'IDS_SESSION_STATS_BATTLES_PLAYED')
					)

					(controller $Tooltip
						(renderer = 'SessionStatsBattleEfficiencyTooltip')
						(args
							_headerText = 'IDS_SESSION_STATS_BATTLES_PLAYED'
							_descriptionText = 'IDS_SESSION_STATS_BATTLES_PLAYED_TOOLTIP'
							_allTimeValue = "allBattlesCount"
							_sessionValue = "battlesCount"
							_isTotalEnabled = "isTotalEnabled"
						)
						(macro DEFAULT_TOOLTIP_BEHAVIOUR)
					)
				)
			)
		)

		(element TooltipSystemHorizontalDivider)

		(block
			(style (width = 100%))
			(element TooltipSystemSecondaryHeaderText
				_headerText = 'IDS_BATTLE_EFFICIENCY_FOR_SESSION_STATS'
			)

			(controller $Tooltip
				(renderer = 'SimpleStatusTooltip')
				(args _text = 'IDS_BATTLE_EFFICIENCY_FOR_SESSION_STATS_TOOLTIP')
				(macro DEFAULT_TOOLTIP_BEHAVIOUR)
			)
		)

		(element TooltipSystemHorizontalDivider)

		(block
			(style (width = 100%))
			(macro TOOLTIP_SYSTEM_PARAMS_CONTAINER)

			(block
				(style (width = 100%) (paddingTop = "SXS") (paddingLeft = "M") (paddingRight = "M"))
				(controller $Repeat renderer='SessionStatsParamsListItem'
					(bind count "sessionBattleEfficiency.length")
					(args
						_sessionBattleEfficiency = "sessionBattleEfficiency[$index]"
						_isTotalEnabled = "isTotalEnabled"
					)
				)
			)
		)

		(element TooltipSystemHorizontalDivider)

		(block
			(style (width = 100%))
			(element TooltipSystemSecondaryHeaderText
				_headerText = 'IDS_CURRENCY_SESSION_STATS'
			)

			(controller $Tooltip
				(renderer = 'SimpleStatusTooltip')
				(args _text = 'IDS_SESSION_RESOURCES')
				(macro DEFAULT_TOOLTIP_BEHAVIOUR)
			)
		)

		(element TooltipSystemHorizontalDivider)

		(block
			(style (width = 100%))
			(macro TOOLTIP_SYSTEM_PARAMS_CONTAINER)

			(block
				(style (width = 100%) (paddingTop = "SXS") (paddingLeft = "M") (paddingRight = "SXS"))
				(controller $Repeat renderer='SessionStatsRewardListItem'
					(bind count "sessionEconomicsEfficiency.length")
					(args _reward = "sessionEconomicsEfficiency[$index]")
				)
			)
		)

		(element TooltipSystemHorizontalDivider)

		(block
			(style (width = 100%) (align = "center"))

			(controller $Tooltip
				(renderer = 'SimpleStatusTooltip')
				(args
					_text = 'IDS_MOUSE_INSTRUCTION_SESSION_STATS_RESET'
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT"
				)
				(macro DEFAULT_TOOLTIP_BEHAVIOUR)
			)

			(element DefaultButton
				_size = "SIZE.SMALL"
				_type = "SC.Ui_styles.BUTTON_TYPE.SECONDARY"
				_label = 'IDS_SESSION_STATS_RESET'
				_width = 100px
				_methods = "[{ type: 'inputMapping.onAction', name: 'clearSessionStats', args: {}}]"
			)
		)
	)
)

(def element BattleTypeChosenItemRenderer (_item:gfx, _state:number)
	(scope
		(var isBattleTypeIcon:bool = "_item && _item != SC.Common.BATTLE_TYPES.ALL_TYPES")
	)
	(style (height = 32px) (flow = "horizontal") (paddingTop = "XS") (paddingLeft = "XS"))

	(block
		(bind visible "isBattleTypeIcon")
		(style
			(width = 24px)
			(height = 24px)
			(bind backgroundImage "isBattleTypeIcon ? 'url:../service_kit/battle_types/' + _item + '_tiny.png' : ''")
		)

		(bind colorTransform "	_state == SC.Ui_styles.BUTTON_STATE.DOWN ||
								_state == SC.Ui_styles.BUTTON_STATE.SELECTED	? COLOR_TRANSFORM_MOUSE_DOWN :
								_state == SC.Ui_styles.BUTTON_STATE.OVER		? COLOR_TRANSFORM_MOUSE_OVER
																				: {}")
	)

	(block
		(style
			(hitTest = false)
			(paddingLeft = "S")
			(paddingRight = 5px)
			(paddingTop = 6px)
			(paddingBottom = 6px)
		)

		(tf
			(class $TextDefaultBoldNM)
			(style
				(alpha = "ITEM_CHOOSER_LABEL_ALPHA[SC.Ui_styles.BUTTON_STATE.UP]")
				(elideMode = true)
			)

			(bind text "tr('IDS_' + toUpper(_item))")

			(macro DEFAULT_CONTROL_STATE_ANIMATION_ALPHA
				_trigger	= "_state"
				_alpha		= "ITEM_CHOOSER_LABEL_ALPHA[_state]"
			)
		)
	)
)

(def element SessionStatsTextListItemRenderer (_item:gfx, _curItemIndex:number)
	(style (width = 100%))

	(element TextListItemRenderer
		_curItemIndex = "_curItemIndex"
		_item = "tr('IDS_' + toUpper(_item))"
	)
)

(def element SessionStatsParamsListItem (_sessionBattleEfficiency:dict = {}, _isTotalEnabled:bool = true)
	(scope
		(var sessionValueText:str = " _sessionBattleEfficiency.valueUnitSymbol != 'IDS_SHORT_DASH'	? _sessionBattleEfficiency.hasSeparatedDigits	? formatSeparator(_sessionBattleEfficiency.sessionValue)
																																					: formatFloatingPoint(_sessionBattleEfficiency.sessionValue, 1, false)
																									: ''")
	)
	(style (width = 100%) (backgroundColor = "NO_COLOR"))

	(element ParamsModifierItemTooltipSystem
		_attribute = "{ measuredValue: sessionValueText,
						measure: _sessionBattleEfficiency.valueUnitSymbol,
						attributeIDS: _sessionBattleEfficiency.attributeIDS }"
	)

	(controller $Tooltip
		(renderer = 'SessionStatsBattleEfficiencyTooltip')
		(args
			_headerText = "_sessionBattleEfficiency.attributeIDS"
			_descriptionText = "_sessionBattleEfficiency.tooltipDesc"
			_hasSeparatedDigits = "_sessionBattleEfficiency.hasSeparatedDigits"
			_valueAllUnitSymbol = "_sessionBattleEfficiency.valueAllUnitSymbol"
			_allTimeValue = "_sessionBattleEfficiency.allTimeValue"
			_valueUnitSymbol = "_sessionBattleEfficiency.valueUnitSymbol"
			_sessionValue = "_sessionBattleEfficiency.sessionValue"
			_isTotalEnabled = "_isTotalEnabled"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR)
	)
)

(def element SessionStatsRewardListItem (_reward:dict)
	(scope
		(var title:str = "tr(toUpper('IDS_SESSION_REWARD_' + _reward.subtype + '_TITLE'))")
		(var priceInfo:dict = "{ finalPrice: _reward.amount, currency: _reward.subtype, isDash: _reward.isZeroAmount }")
	)

	(style (width = 100%) (marginBottom = 14px))

	(element TooltipSystemRewardPriceTag
		_title = "title"
		_priceInfo = "priceInfo"
	)

	(controller $Tooltip
		(renderer = 'SessionStatsRewardTooltip')
		(args _priceInfo = "priceInfo")
		(macro DEFAULT_TOOLTIP_BEHAVIOUR)
	)
)

(def element SystemMessageWrapper (_messageCollection:gfx, _isBattleResultGroup:bool)
	(scope
		(event evAddedToStage)
		(event evMouseUp)
		(var _messageEntity:gfx = "_messageCollection.items[$index]" (event "_messageCollection.evUpdated") (event "evAddedToStage"))

		
		(macro MOUSE_HANDLER_SCOPE)

		(var sysMessageCoreComponent:gfx = "_messageEntity ? _messageEntity.sysMessageCore : null")
		(var requestName:str = "sysMessageCoreComponent && sysMessageCoreComponent.eventName ? sysMessageCoreComponent.eventName : ''" (event "sysMessageCoreComponent.evEventNameChanged"))
		(var requestArgs:dict = "sysMessageCoreComponent && sysMessageCoreComponent.eventArgs ? sysMessageCoreComponent.eventArgs : {}" (event "sysMessageCoreComponent.evEventArgsChanged"))
		(var isClickableArea:bool = "requestName && requestArgs != null && requestArgs != {}")
	)
	(macro MOUSE_EVENTS_DISPATCHER)
	(dispatch evAddedToStage on='addedToStage')
	(dispatch evMouseUp on='mouseUp' args="{isDown: false}")

	
	(bindcall externalCall "isClickableArea ? 'inputMapping.onRequest' : ''" "[requestName, requestArgs]" init=false watch=false on='leftClick')

	(style
		(width = 100%)
		(height = "SYSTEM_MESSAGE_ITEM_HEIGHT")
	)

	
	(block
		(class $FullsizeAbsolute)
		(style (paddingTop = 1))

		(block
			(class $Fullsize)
			(style
				(backgroundImage = 'url:../service_kit/panel_backgrounds/menu_item_panel.png')
				(scale9grid = 3)
				(bind alpha "0" (event "evAddedToStage"))
			)

			(controller $Animation
				(bindcall play  duration=0.1
								to = "{alpha: 0}"
								(event "evRollOut")
				)
				(bindcall play  duration=0.1
								to = "{alpha: 1}"
								(event "evRollOver")
								(event "evMouseUp")
				)
				(bindcall play  duration=0.05
								action="kill"
								to = "{alpha: 0.4}"
								(event "evMouseDown")
								(bind enabled "isClickableArea && rollOver")
				)
			)
		)
	)

	(block
		(class $FullsizeAbsolute)

		(controller $Instance
			(bind renderer "_isBattleResultGroup ? 'SystemMessagePostBattle' : 'SystemMessageDefault'")
			(bind enabled "_messageEntity != null")
			(args
				_messageEntity = "_messageEntity"
			)
		)
	)

	(block
		(style (width = 100%) (position = "absolute") (bottom = 0))
		(element HorizontalDividerTwoPx)
	)

	(controller $Tooltip
		(renderer = 'SystemMessageTooltip')
		(bind enabled "_messageEntity != null")
		(args
			_messageEntity = "_messageEntity"
		)
		(macro SYSTEM_MESSAGE_TOOLTIP_BEHAVIOUR "1")
	)
)

(def element SystemMessageDefault (_messageEntity:gfx)
	(scope
		(var sysMessageCoreComponent:gfx = "_messageEntity ? _messageEntity.sysMessageCore : null")
		(var contentEntitiesIds:array = "sysMessageCoreComponent ? sysMessageCoreComponent.contentEntitiesIds : []" (event "sysMessageCoreComponent.evContentEntitiesIdsChanged"))
		
		(var contentHeaderEntityId:number = "contentEntitiesIds.length > 0 ? contentEntitiesIds[CONTENT_ENTITY_HEADER_ID] : null")
		(var contentHeaderEntity:gfx = "$datahub.getEntity(contentHeaderEntityId)")

		(var notificationHeaderComponent:gfx = "contentHeaderEntity && contentHeaderEntity.hasComponent(CC.sysMessageHeader) ? contentHeaderEntity.getComponent(CC.sysMessageHeader) : null")
		(var emergencyHeaderComponent:gfx = "contentHeaderEntity && contentHeaderEntity.hasComponent(CC.sysEmergencyMessageHeader) ? contentHeaderEntity.getComponent(CC.sysEmergencyMessageHeader) : null")

		(var contentHeaderComponent:gfx = "	notificationHeaderComponent ? notificationHeaderComponent :
											emergencyHeaderComponent	? emergencyHeaderComponent
																		: null" (event "notificationHeaderComponent.evChanged"))

		(var contentHeader:str = "contentHeaderComponent ? tr(contentHeaderComponent.header) : ''" (event "notificationHeaderComponent.evChanged"))
		(var unifiedStatus:str = "contentHeaderComponent ? contentHeaderComponent.unifiedStatus : SC.Ui_styles.UNIFIED_STATUS.DEFAULT" (event "notificationHeaderComponent.evChanged"))
		
		(var timeStamp:str = "_messageEntity ? formatTime(_messageEntity.sysMessageCore.localTimestamp, 'hh:mm', '', true) : ''")
	)
	(bind name "contentHeaderComponent ? 'SMC_' + contentHeaderComponent.header : ''")
	(macro UNIFIED_STATUS_TO_COLOR_AND_ALPHA "unifiedStatus" "'textColor'" "'textAlpha'")
	(class $Fullsize)

	(tf
		(class $TextDefaultBoldNM)
		(style
			(position = "absolute")
			(left = "M")
			(top = "SXS")
			(alpha = "TA")
			(width = "SYSTEM_MESSAGE_ITEM_LABEL_WIDTH")
			(letterSpacing = "0")
			(wordWrap = false)
			(elideMode = true)
			(bind textColor "textColor")
		)
		(bind text "contentHeader")
	)

	(tf
		(class $TextDefault13NM)
		(style
			(position = "absolute")
			(right = "M")
			(top = 13px)
			(alpha = "TC")
		)
		(bind text "timeStamp")
	)
)

(def element SystemMessagePostBattle (_messageEntity:gfx)
	(scope
		(var sysMessageCoreComponent:gfx = "_messageEntity ? _messageEntity.sysMessageCore : null")
		(var contentEntitiesIds:array = "sysMessageCoreComponent ? sysMessageCoreComponent.contentEntitiesIds : []" (event "sysMessageCoreComponent.evContentEntitiesIdsChanged"))
		
		(var headerEntityId:number = "contentEntitiesIds.length > 0 ? contentEntitiesIds[CONTENT_ENTITY_HEADER_ID] : null")
		(var headerEntity:gfx = "$datahub.getEntity(headerEntityId)")
		(var headerComponent:gfx = "headerEntity ? headerEntity.getComponent(CC.sysMessageHeader) : null")
		(var unifiedStatus:str = "headerComponent ? headerComponent.unifiedStatus : SC.Ui_styles.UNIFIED_STATUS.DEFAULT")
		(var contentHeader:str = "headerComponent ? headerComponent.header : ''")
		
		(var timeStamp:str = "_messageEntity ? formatTime(_messageEntity.sysMessageCore.localTimestamp, 'hh:mm', '', true) : ''")

		(var postBattleDataEntityId:number = "contentEntitiesIds.length > 0 ? contentEntitiesIds[1] : null")
		(var postBattleDataEntity:gfx = "$datahub.getEntity(postBattleDataEntityId)")
		(var postBattleDataComponent:gfx = "postBattleDataEntity ? postBattleDataEntity.getComponent(CC.postBattleSysMessage) : null")

		(var postBattleData:dict = "postBattleDataComponent ? postBattleDataComponent.data : null")
		(var isSpectator:bool = "'isSpectator' in postBattleData ? postBattleData.isSpectator : false")
		(var shipId:number = "postBattleData ? toNumber(postBattleData.shipId) : null")
	)
	(macro UNIFIED_STATUS_TO_COLOR_AND_ALPHA "unifiedStatus" "'textColor'" "'textAlpha'")

	(class $Fullsize)
	(style (flow = "horizontal"))

	(block
		(style
			(height = 100%)
			(align = "middle")
			(marginLeft = "M")
			(marginRight = "XS")
			(width = 85px)
		)
		(tf
			(class $TextDefaultBoldNM)
			(style
				(letterSpacing = "0")
				(wordWrap = false)
				(bind textColor "textColor")
				(bind alpha "textAlpha")
			)
			(bind text "contentHeader")
		)
	)

	(block
		(bind visible "!isSpectator")
		(style
			(width = 100%)
			(marginTop = "SXS")
		)

		(controller $Instance renderer='ShipLineItemNM'
			(bind enabled "shipId")
			(args
				_shipId = "shipId"
				_withFlag = "false"
				_fontClass = "'$TextDefaultBoldNM'"
			)
		)
	)

	(tf
		(class $TextDefault13NM)
		(style
			(marginTop = 13px)
			(marginRight = "M")
			(alpha = "TC")
		)

		(bind text "timeStamp")
	)
)

(def element SystemMessageTooltip (_messageEntity:gfx)
	(scope
		(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_SCOPE)
		(var sysMessageCoreComponent:gfx = "_messageEntity ? _messageEntity.sysMessageCore : null")
		(var contentEntitiesIds:array = "sysMessageCoreComponent ? sysMessageCoreComponent.contentEntitiesIds : []" (event "sysMessageCoreComponent.evContentEntitiesIdsChanged"))
	)
	(style (width = "DEFAULT_TOOLTIP_WIDTH") (hitTest = false))
	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_MARKUP)

	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(controller $Repeat renderer = 'NotificationItem'
			(bind count "contentEntitiesIds.length")
			(args
				_entityItemId = "contentEntitiesIds[$index]"
				_isFirstItem = "$index == 0"
				_isTooltip = "true"
			)
		)
	)
)


(def element SystemNotificationContainer ()
	(scope
		(macro USER_PREF_DATA)
		(macro CAROUSEL_HEIGHT_SCOPE)
		(macro STAGE_SIZE)

		(var isSmallWindow:bool = "stageHeight < 1000" (event "stageComponent.evStageSizeChanged"))
		(var systemNotificationCollection:gfx = "$datahub.getCollection(CC.renderedSysMsg).getChildByPath('byClassId.' + CC.notificationSysMsgToBeRendered)")
		(var emergencyAlertsCollection:gfx = "$datahub.getCollection(CC.renderedSysMsg).getChildByPath('byClassId.' + CC.emergencySysMsgToBeRendered)")
		(var emergencyAlertsCollectionLength:number = "emergencyAlertsCollection ? emergencyAlertsCollection.items.length : 0")
	)
	(style
		(width = 100%)
		(height = 100%)
		(align = "right|bottom")
		(paddingRight = 25px)
		(bind paddingBottom "carouselAreaHeight")
	)

	
	
	
	
	
	(block
		(block
			
	
			(controller $Repeat renderer = 'SystemNotification'
				(bind count "systemNotificationCollection ? systemNotificationCollection.items.length : 0")
				(bindcall addChildAt	"$event[1]" (event "systemNotificationCollection.evAdded"))
				(bindcall removeChildAt	"$event[1]" (event "systemNotificationCollection.evRemoved"))
				(args
					_collection = "systemNotificationCollection"
				)
			)
		)
		(block
			(style
				(right = 0)
				(bind position "isSmallWindow ? absolute : relative")
				(bind bottom "isSmallWindow ? -carouselAreaHeight + 30px : 0")
			)
			

			(controller $Repeat renderer = 'SystemNotification'
				(bind count "emergencyAlertsCollectionLength")
				(bindcall "'addChildAt'"	"$event[1]" (event "emergencyAlertsCollection.evAdded"))
				(bindcall "'removeChildAt'"	"$event[1]" (event "emergencyAlertsCollection.evRemoved"))
				(args
					_collection = "emergencyAlertsCollection"
					_isEmergency = true
				)
			)
		)
	)
)

(def element SampleMessage (_text:str)
	(style
		(width = "DEFAULT_TOOLTIP_WIDTH")
		(height = 100px)
		(paddingTop = "XS")
		(paddingBottom = "XS")
		(backgroundColor = "NO_COLOR")
	)

	(block
		(class $FullsizeAbsolute)
		(element BlurMapWithLayerPanel)
	)

	(block
		(class $FullsizeAbsolute)
		(style
			(backgroundColor = "SC.Ui_styles.SERVICE_COLORS.INNER_PANEL")
			(alpha = 0.5)
		)
	)
	
	(block
		(class $FullsizeAbsolute)
		(style
			(backgroundImage = 'url:../service_kit/panel_backgrounds/hint_panel.png')
			(scale9grid = 3)
		)
	)
	(macro trace "_text + ' (Sample)'")
)

(def element SystemNotification (_collection:gfx, _isEmergency:bool=false)
	(scope
		(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_SCOPE)

		(var notificationEntity:gfx = "_collection.items[$index]" watch=false)
		(var sysMessageCoreComponent:gfx = "notificationEntity ? notificationEntity.sysMessageCore : null")
		(var timeToLiveComponent:gfx = "notificationEntity ? notificationEntity.timeToLive : null" (event "notificationEntity.evAdded") (event "notificationEntity.evRemoved"))
		(var contentEntitiesIds:array = "sysMessageCoreComponent ? sysMessageCoreComponent.contentEntitiesIds : []" (event "sysMessageCoreComponent.evContentEntitiesIdsChanged"))
		(var isRemoving:bool = "timeToLiveComponent ? timeToLiveComponent.isRemoving : false" (event "timeToLiveComponent.evRemove"))

		
		(var isShowing:bool = true)
		(var isSystemNotificationVisible:bool = "sysMessageCoreComponent && ((!isRemoving && !isShowing))" )

		
		(macro MOUSE_HANDLER_SCOPE)
		(var requestName:str = "sysMessageCoreComponent && sysMessageCoreComponent.eventName ? sysMessageCoreComponent.eventName : ''" (event "sysMessageCoreComponent.evEventNameChanged"))
		(var requestArgs:dict = "sysMessageCoreComponent && sysMessageCoreComponent.eventArgs ? sysMessageCoreComponent.eventArgs : {}" (event "sysMessageCoreComponent.evEventArgsChanged"))
		(var isClickableArea:bool = "requestName && requestArgs != null && requestArgs != {}")
	)
	(macro MOUSE_EVENTS_DISPATCHER)
	(bindcall externalCall "isSystemNotificationVisible && !_isEmergency ? 'direct.action' : ''" "['rollOverNotification', {}]"	watch=false (event "evRollOver"))
	(bindcall externalCall "isSystemNotificationVisible && !_isEmergency ? 'direct.action' : ''" "['rollOutNotification', {}]"	watch=false (event "evRollOut"))

	(dispatch "'evBlurStartShow'" dir="EventDirection.DOWN" on='addedToStage')
	(dispatch "'evBlurStartHide'" dir="EventDirection.DOWN" (event "timeToLiveComponent.evRemove"))

	(style (bind hitTest "isSystemNotificationVisible"))

	(block
		(style (width = "DEFAULT_TOOLTIP_WIDTH") (paddingTop = "XS") (paddingBottom = "XS"))
		(alpha = 0)

		(controller $Animation
			(controllerEvents evNotificationShowed)

			
			(bindcall play
				from = 		"{ alpha: 0, visualOffsetY: 15px }"
				to =		"{ alpha: 1, visualOffsetY: 0px }"
				easing =	"Easing.quad_in"
				delay =		"0.05 + 0.03 * $index"
				duration =	0.2
				onEndedEvent = 'evNotificationShowed'

				on = 'addedToStage'
			)
			(bind isShowing "false" init=false watch=false on='evNotificationShowed')

			
			(bindcall play
				to =		"{ alpha: 0, visualOffsetY: -15px }"
				easing =	"Easing.quad_out"
				duration =	"SC.Ui_common.SYSTEM_MESSAGES_SHOW_CONFIG.LIFE_TIME_AFTER_HIDING - 0.05"
				delay =		"0.03 * $index"
				action =	"kill"
				(event "timeToLiveComponent.evRemove")
			)
		)

		(block
			(class $FullsizeAbsolute)
			(style (backgroundColor = "NO_COLOR"))

			(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_MARKUP)
	
			(controller $Animation
				(bindcall play
					from =		"{ alpha: 1 }"
					to =		"{ alpha: 1.5 }"
					easing =	"Easing.sine_in"
					duration =	0.1
					reverse =	"!rollOver"
					action =	"kill"
					(bind trigger "rollOver")
				)
			)

			
			(bindcall externalCall "isSystemNotificationVisible	? 'direct.action'			: ''" "[_isEmergency  ? 'closeEmergency' : 'closeNotification', {}]" watch=false on='rightClick')
			(bindcall externalCall "isClickableArea				? 'direct.action'			: ''" "['closeNotification', {}]"	watch=false on='leftClick')
			(bindcall externalCall "isClickableArea				? 'inputMapping.onRequest'	: ''" "[requestName, requestArgs]"	watch=false on='leftClick')
		)

		(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER

			(block
				(style (width = 100%))

				(controller $Repeat renderer = 'NotificationItem'
					(bind count "contentEntitiesIds.length")
					(args
						_entityItemId = "contentEntitiesIds[$index]"
						_isFirstItem = "$index == 0"
					)
				)
			)

			(block
				(style (position = "absolute") (right = "-XS"))

				(element CloseButton
					_name = 'CloseNotificationButton'
					_safeZone = "-SXS"
					_tooltipText = ''
					_methods = "[{ type: 'direct.action', name: _isEmergency  ? 'closeEmergency' : 'closeNotification', args: {}}]"
				)
			)
		)
	)
)

(def element NotificationItem (_entityItemId:number, _isFirstItem:bool=false, _isTooltip:bool=false)
	(scope
		(var notificationItemEntity:gfx = "$datahub.getEntity(_entityItemId)")
		(var messageContentTypeComponent:gfx = "notificationItemEntity ? notificationItemEntity.sysMessageContentType : null")
		(var notificationContentType:number = "messageContentTypeComponent ? messageContentTypeComponent.contentType : null")
		(var notificationContentComponent:gfx = "notificationContentType ? notificationItemEntity.getComponent(notificationContentType) : null")

		(var isTooltipButtons:bool = "notificationContentType == CC.sysMessageButtons && _isTooltip")
		(var isTooltipEmergencyHeader:bool = "notificationContentType && notificationContentType == CC.sysEmergencyMessageHeader && _isTooltip")
		(var customRenderElement:str = "isTooltipEmergencyHeader ? NOTIFICATION_RENDER_ITEM_LIST[CC.sysMessageHeader] : null")

		(var renderElement:str = "	customRenderElement			? customRenderElement :
									notificationContentType		? NOTIFICATION_RENDER_ITEM_LIST[notificationContentType]
																: null")
	)

	(style (width = 100%))

	(block
		(style (width = 100%))
		(controller $Instance renderer = 'TooltipSystemHorizontalDivider' (bind enabled "!_isFirstItem && !isTooltipButtons"))
	)

	(block
		(style (width = 100%))
		(controller $Instance
			(bind renderer "renderElement")
			(bind enabled "renderElement && !isTooltipButtons")
			(args
				_notificationContentComponent = "notificationContentComponent"
				_isTooltip = "_isTooltip"
			)
		)
	)
)


(def element SystemNotificationHeader (_notificationContentComponent:gfx, _isTooltip:bool=false)
	(scope
		(var header:str = "_notificationContentComponent.header" (event "_notificationContentComponent.evChanged"))
		(var subHeader:str = "_notificationContentComponent.subHeader" (event "_notificationContentComponent.evChanged"))
		(var unifiedStatus:str = "_notificationContentComponent.unifiedStatus" (event "_notificationContentComponent.evChanged"))
		(var hasSubHeader:bool = "subHeader && subHeader != ''")
	)
	(style (width = 100%) (hitTest = false))
	(bind name "header")

	
	(element TOOLTIP_SYSTEM_ELEMENTS_GROUP
		(element TOOLTIP_SYSTEM_GROUP_ELEMENT
			(style (width = 100%) (bind paddingRight "_isTooltip ? 0px : M"))

			(element TooltipSystemHeaderSubheaderText
				_headerText = "header"
				_unifiedStatus = "unifiedStatus"
			)
		)

		(element TOOLTIP_SYSTEM_GROUP_ELEMENT
			(bind visible "hasSubHeader")
			(controller $Instance renderer='TooltipSystemDescriptionText'
				(bind enabled "hasSubHeader")
				(args
					_descriptionText = "subHeader"
				)
			)
		)
	)
)


(def element SystemNotificationDescription (_notificationContentComponent:gfx)
	(scope
		(var description:str = "_notificationContentComponent.description" (event "_notificationContentComponent.evDescriptionChanged"))
	)
	(style (width = 100%) (hitTest = false))
	(name = 'SystemNotificationDescription')

	(controller $Instance renderer='TooltipSystemDescriptionText'
		(bind enabled "_notificationContentComponent")
		(args
			_descriptionText = "description"
		)
	)
)


(def element SystemNotificationHtmlDescription (_notificationContentComponent:gfx)
	(scope
		(var description:str = "_notificationContentComponent.description" (event "_notificationContentComponent.evDescriptionChanged"))
	)
	(style (width = 100%) (hitTest = false))

	(controller $Instance renderer='TooltipSystemHtmlDescriptionText'
		(bind enabled "_notificationContentComponent")
		(args
			_descriptionText = "description"
		)
	)
)


(def element SystemNotificationResourcesChanges (_notificationContentComponent:gfx)
	(scope
		(var title:str = "_notificationContentComponent.title" (event "_notificationContentComponent.evChanged"))
		(var resourcesChanges:dict = "_notificationContentComponent.resourcesChanges" (event "_notificationContentComponent.evChanged"))
	)
	(style (width = 100%) (hitTest = false))

	(controller $Instance renderer='TooltipSystemPriceTagLine'
		(bind enabled "_notificationContentComponent")
		(args
			_title = "title"
			_priceInfo = "resourcesChanges"
		)
	)
)


(def element SystemNotificationExchangeableChanges (_notificationContentComponent:gfx)
	(scope
		(var title:str = "_notificationContentComponent.title" (event "_notificationContentComponent.evChanged"))
		(var exchangeableChanges:dict = "_notificationContentComponent.exchangeableChanges" (event "_notificationContentComponent.evChanged"))
	)
	(style
		(hitTest = false)
		(width = 100%)
		(flow = "horizontal")
	)
	(tf
		(class $TextDefaultNM)
		(style
			(alpha = "TA")
			(leading = -2)
			(marginRight = "S")
			(width = 100%)
		)
		(bind text "title")
	)
	(block
		(controller $Instance renderer='ExchangeableItemAmount'
			(bind enabled "exchangeableChanges")
			(args
				_itemInfo = "exchangeableChanges"
			)
		)
	)
)


(def element SystemNotificationShipInfo (_notificationContentComponent:gfx)
	(scope
		(var shipId:number = "_notificationContentComponent.shipId" (event "_notificationContentComponent.evShipIdChanged"))
	)
	(style (width = 100%) (hitTest = false))

	(controller $Instance renderer='TooltipSystemShipLine'
		(bind enabled "_notificationContentComponent")
		(args
			_shipId = "shipId"
		)
	)
)


(def element SystemNotificationShipInfoWithTitle (_notificationContentComponent:gfx)
	(scope
		(var title:str = "_notificationContentComponent.title" (event "_notificationContentComponent.evTitleChanged"))
		(var shipId:number = "_notificationContentComponent.shipId" (event "_notificationContentComponent.evShipIdChanged"))
	)
	(style (width = 100%) (hitTest = false))

	(controller $Instance renderer='TooltipSystemShipWithTitle'
		(bind enabled "_notificationContentComponent")
		(args
			_title = "title"
			_shipId = "shipId"
			_withFlag = true
		)
	)
)

(def element SystemNotificationShipRangeInfo (_notificationContentComponent:gfx)
	(scope
		(var title:str = "_notificationContentComponent.title" (event "_notificationContentComponent.evTitleChanged"))
		(var startShipId:number = "_notificationContentComponent.startShipId" (event "_notificationContentComponent.evStartShipIdChanged"))
		(var finishShipId:number = "_notificationContentComponent.finishShipId" (event "_notificationContentComponent.evFinishShipIdChanged"))
	)
	(style (width = 100%) (hitTest = false))

	(controller $Instance renderer='TooltipSystemShipsRange'
		(bind enabled "_notificationContentComponent")
		(args
			_startShipId = "startShipId"
			_endShipId = "finishShipId"
		)
	)
)


(def element SystemNotificationCounterInfo (_notificationContentComponent:gfx)
	(scope
		(var counterInfo:dict = "_notificationContentComponent.counterInfo" (event "_notificationContentComponent.evCountChanged"))
	)
	(style (width = 100%) (hitTest = false))

	(controller $Instance renderer='TooltipSystemCounterLine'
		(bind enabled "_notificationContentComponent")
		(args
			_title = "counterInfo.title"
			_count = "counterInfo.count"
			_measurement = "counterInfo.measurement"
		)
	)
)


(def element SystemNotificationTimePeriodInfo (_notificationContentComponent:gfx)
	(style (width = 100%) (hitTest = false))
	(controller $Instance renderer='TooltipSystemStaticTimeLeftStatusLine'
		(bind enabled "_notificationContentComponent")
		(args
			_timeLeftTimeStamp =	"_notificationContentComponent.delta"
			_substTextIDS =		"_notificationContentComponent.textLine"
		)
	)
)


(def element SystemNotificationTimeLeftInfo (_notificationContentComponent:gfx)
	(style (width = 100%) (hitTest = false))
	(name = 'SystemNotificationTimeLeftInfo')
	(controller $Instance renderer='TooltipSystemTimeLeftStatusLine'
		(bind enabled "_notificationContentComponent")
		(args
			_timeLeftTimeStamp =	"_notificationContentComponent.timestamp"
			_substTextIDS =		"_notificationContentComponent.textLine"
			_zeroTimeTextIDS = "_notificationContentComponent.zeroTextLine"
		)
	)
)


(def element SystemNotificationDateInfo (_notificationContentComponent:gfx)
	(scope
		(var timestamp:number = "_notificationContentComponent.timestamp" (event "_notificationContentComponent.evTimestampChanged"))
		(var textLine:str = "_notificationContentComponent.textLine")
	)
	(style (width = 100%) (hitTest = false))

	(controller $Instance renderer='TooltipSystemDueDateStatusLine'
		(bind enabled "_notificationContentComponent")
		(args
			_dueDateTimeStamp =	"timestamp"
			_substTextIDS =		"textLine"
		)
	)
)


(def element SystemNotificationPostBattle (_notificationContentComponent:gfx)
	(scope
		(var battleData:dict = "_notificationContentComponent.data" (event "_notificationContentComponent.evChanged"))
		(var economicCurrency:array = "'economicCurrency' in battleData ? battleData.economicCurrency : []")
		(var hasRewardsCurrency:bool = "economicCurrency.length > 0")

		(var shipId:number = "battleData ? toNumber(battleData.shipId) : null")
		(var damage:str = "'damage' in battleData ? formatSeparator(battleData.damage) : ''")
		(var shipsKilled:str = "'shipsKilled' in battleData ? formatSeparator(battleData.shipsKilled) : ''")
		(var achievements:array = "battleData ? battleData.achievements : []")
		(var hasAchievements:bool = "achievements.length > 0")

		(var battleStats:array = " battleData	?	[	{	measure: '',
															measuredValue: damage,
															attributeIDS: 'IDS_SYS_MSG_BATTLE_STATS_DAMAGE',
															category: 'neutral'
														},
														{	measure: '',
															measuredValue: shipsKilled,
															attributeIDS: 'IDS_SYS_MSG_BATTLE_STATS_SHIPS_KILLED',
															category: 'neutral'
														}
													]
												:	null")

		(var isSpectator:bool = "'isSpectator' in battleData ? battleData.isSpectator : false")
		(var isBattleEfficiencyVisible:bool = "!battleData.wonPosition && battleStats")
	)
	(style (width = 100%) (hitTest = false))

	(block
		(bind visible "!isSpectator")
		(style (width = 100%))

		(block
			(style (width = 100%))
			(controller $Instance renderer='ShipLineItemNM'
				(bind enabled "shipId")
				(args
					_shipId = "shipId"
					_withFlag = "true"
					_fontClass = "'$TextDefaultBoldNM'"
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer = 'TooltipSystemHorizontalDivider' (bind enabled "hasRewardsCurrency"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemSecondaryHeaderText'
				(bind enabled "hasRewardsCurrency")
				(args
					_headerText = "tr('IDS_SYS_MSG_BATTLE_STATS_TAKEN_TILL_BATTLE')"
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer = 'TooltipSystemHorizontalDivider' (bind enabled "hasRewardsCurrency"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemRewardsList'
				(bind enabled "hasRewardsCurrency")
				(args
					_rewards = "economicCurrency"
				)
			)
		)

		
		(block
			(style (width = 100%))
			(controller $Instance renderer = 'TooltipSystemHorizontalDivider' (bind enabled "isBattleEfficiencyVisible"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemSecondaryHeaderText'
				(bind enabled "isBattleEfficiencyVisible")
				(args
					_headerText = "tr('IDS_SYS_MSG_BATTLE_EFFICIENCY')"
				)
			)
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer = 'TooltipSystemHorizontalDivider' (bind enabled "isBattleEfficiencyVisible"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemParamsModifiersList'
				(bind enabled "isBattleEfficiencyVisible")
				(args
					_attributesNeutral = "battleStats"
				)
			)
		)
		

		
		(block
			(style (width = 100%))
			(controller $Instance renderer = 'TooltipSystemHorizontalDivider' (bind enabled "hasAchievements"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemSecondaryHeaderText'
				(bind enabled "hasAchievements")
				(args
					_headerText = "tr('IDS_SYS_MSG_BATTLE_ACHIEVEMENTS')"
				)
			)
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer = 'TooltipSystemHorizontalDivider' (bind enabled "hasAchievements"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemAchievementsList'
				(bind enabled "hasAchievements")
				(args
					_achievementsIds = "achievements"
				)
			)
		)
		
	)
)


(def element SystemNotificationCampaignInfo (_notificationContentComponent:gfx)
	(scope
		(var campaignEntity:gfx = "$datahub.getPrimaryEntity(CC.campaignParams, _notificationContentComponent.campaignId)")
		(var campaignParams:gfx = "campaignEntity ? campaignEntity.campaignParams : null")
		(var campaignName:str = "campaignParams.name")
		(var headerText:str = "tr('IDS_' + campaignName + '_TITLE')")
		(var subheaderText:str = "tr('IDS_CAMPAIGN')")
	)
	(style (width = 100%) (hitTest = false))

	(element TooltipSystemHeaderWithIconAndText
		_imageHeight = 		"80"
		_imageWidth = 		"80"
		_headerText =		"headerText"
		_subheaderText =	"subheaderText"
		_headerIconType = 	"SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.CAMPAIGN"
		_data =				"{	entityId: _notificationContentComponent.campaignId,
								iconType: SC.Ui_common.CAMPAIGN_TYPE.CAMPAIGN }"
	)
)


(def element SystemNotificationCampaignMissionInfo (_notificationContentComponent:gfx)
	(scope
		(var campaignMissionEntity:gfx = "$datahub.getPrimaryEntity(CC.campaignMissionParams, _notificationContentComponent.missionId)")
		(var campaignMissionParams:gfx = "campaignMissionEntity ? campaignMissionEntity.campaignMissionParams : null")
		(var uiNumber:str = "campaignMissionParams.uiNumber")
		(var headerText:str = "tr(subst('IDS_CAMPAIGN_MISSION_NUMBER', [], { _missionNumber: uiNumber }))")

		(var campaignEntity:gfx = "$datahub.getPrimaryEntity(CC.campaignParams, campaignMissionParams.campaignID)")
		(var campaignParams:gfx = "campaignEntity ? campaignEntity.campaignParams : null")
		(var campaignName:str = "campaignParams.name")
		(var campaignNameIDS:str = "'IDS_' + campaignName + '_TITLE'")
	)
	(style (width = 100%) (hitTest = false))

	(element TooltipSystemHeaderWithIconAndText
		_imageHeight = 		60px
		_imageWidth = 		60px
		_headerText =		"headerText"
		_subheaderText =	"campaignNameIDS"
		_headerIconType = 	"SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.CAMPAIGN"
		_data =				"{	entityId: _notificationContentComponent.missionId,
								iconType: SC.Ui_common.CAMPAIGN_TYPE.MISSION }"
	)
)


(def element SystemNotificationCampaignTaskInfo (_notificationContentComponent:gfx)
	(scope
		(var campaignTaskEntity:gfx = "$datahub.getPrimaryEntity(CC.campaignTaskParams, _notificationContentComponent.taskId)")
		(var campaignTaskParams:gfx = "campaignTaskEntity ? campaignTaskEntity.campaignTaskParams : null")
		(var taskNumber:number = "campaignTaskParams.taskNumber")
		(var isMainTask:bool = "campaignTaskParams.isMainTask")

		(var campaignEntity:dhEntity = "getPrimaryEntity(CC.campaignParams, campaignTaskParams.campaignID)")
		(var campaignParams:dhComponent = "campaignEntity.campaignParams")

		(var campaignMissionEntity:dhEntity =		"getPrimaryEntity(CC.campaignMissionParams, campaignTaskParams.missionID)")
		(var campaignMissionParams:dhComponent =	"campaignMissionEntity.campaignMissionParams")
		(var missionNumber:str =	"campaignMissionParams.uiNumber")

		(var campaignAllMissionsLen:number = "campaignParams.allMissions.length ?: 0")
		(var isFinalTaskCampaign:bool =		"(toNumber(missionNumber) == campaignAllMissionsLen) && isMainTask")

		(var headerText:str = "	isFinalTaskCampaign	? 'IDS_FINAL_TASK_CAMPAIGN' :
								isMainTask			? 'IDS_FINAL_TASK_MISSION'
													: subst('IDS_CAMPAIGN_TASK_NUMBER', [], { _taskNumber: taskNumber })")

		(var campaignName:str = "campaignParams.name")
		(var campaignNameIDS:str = "'IDS_' + campaignName + '_TITLE'")
	)
	(style (width = 100%) (hitTest = false))

	(element TooltipSystemHeaderWithIconAndText
		_imageHeight = 		60px
		_imageWidth = 		60px
		_headerText =		"headerText"
		_subheaderText =	"campaignNameIDS"
		_headerIconType = 	"SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.CAMPAIGN"
		_data =				"{	entityId: _notificationContentComponent.taskId,
								iconType: SC.Ui_common.CAMPAIGN_TYPE.TASK }"
	)
)


(def element SystemNotificationRewardInfo (_notificationContentComponent:gfx)
	(scope
		(var rewards:array = "_notificationContentComponent.rewards" (event "_notificationContentComponent.evChanged"))
		(var isManyRewards:bool = "rewards.length > REWARDS_STACK_LIMIT")
		(var diffCount:number = "isManyRewards ? rewards.length - REWARDS_STACK_LIMIT : 0")
		(var reseivedManyRewardsIDS:str = "subst('IDS_SYS_MSG_PL_RECEIVED_REWARDS', [], { _countRestRewards: diffCount }, diffCount)")
	)
	(style (width = 100%) (hitTest = false))

	(block
		(style (width = 100%) (paddingTop = "-S") (paddingBottom = "-S"))

		(controller $Repeat renderer = 'RewardContainerTooltipItem'
			(bind count "isManyRewards ? REWARDS_STACK_LIMIT : rewards.length")
			(args
				_reward = "$datahub.getEntity(rewards[$index]).rewardComponent"
			)
		)
	)

	(block
		(style (width = 100%) (marginTop = "SXS"))
		(bind visible "isManyRewards")
		(tf
			(class $TextDefaultNM)
			(style (alpha = "TC"))
			(bind text "reseivedManyRewardsIDS")
		)
	)
)


(def element SystemNotificationStatusLineInfo (_notificationContentComponent:gfx)
	(style (width = 100%) (hitTest = false))

	(controller $Instance renderer='TooltipSystemStatusLine'
		(args
			_unifiedStatus = "_notificationContentComponent.unifiedStatus"
			_text = "_notificationContentComponent.textLine"
		)
	)
)

(def element SystemNotificationButtonContainer (_notificationContentComponent:gfx)
	(scope
		(var buttons:array = "_notificationContentComponent.buttons" (event "_notificationContentComponent.evChanged"))
	)
	(style (width = 100%) (flow = "horizontal") (align = "center"))

	(block
		(style (bind marginRight "buttons.length > 1 ? S : 0"))
		(controller $Instance renderer='DefaultButton'
			(bind enabled "buttons.length > 0")
			(args
				_name = "buttons[0].name"
				_enabled = "buttons[0].enabled"
				_type = "buttons[0].type"
				_isExternal = "buttons[0].isExternal"
				_width = "140"
				_label = "buttons[0].label"
				_methods = "buttons[0].methods"
			)
		)
	)

	(block
		(controller $Instance renderer='DefaultButton'
			(bind enabled "buttons.length > 1")
			(args
				_name = "buttons[1].name"
				_enabled = "buttons[1].enabled"
				_type = "buttons[1].type"
				_isExternal = "buttons[1].isExternal"
				_width = "140"
				_label = "buttons[1].label"
				_methods = "buttons[1].methods"
			)
		)
	)
)


(def element NotificationItemInnerPanel ()
	(class $FullsizeAbsolute)
	(style
		(hitTest = false)
		(paddingLeft = "-M")
		(paddingRight = "-M")
		(paddingTop = "-SXS")
		(paddingBottom = "-SXS")
	)

	(block
		(class $Fullsize)
		(style (backgroundColor = "SC.Ui_styles.SERVICE_COLORS.INNER_PANEL"))
	)
)

(def element SystemNotificationSkillItem (_notificationContentComponent:gfx)
	(scope
		(var skillEntityId:number =	"_notificationContentComponent.entityId")

		(struct skill =				PULL_SKILL(_entityId = "skillEntityId"))
		(var skillName:str =		"skill.component.name")
		(var skillSubType:number =	"skill.component.skillSubType")
		(var isEpic:bool =			"skillSubType == SC.Common.SKILL_SUBTYPE.EPIC")

		(var headerText:str =		"skillEntityId	? toUpper('IDS_SKILL_'+ skillName) : ''")
		(var subheaderText:str =	"skillEntityId	? isEpic	? 'IDS_SKILL_ISEPIC'
																: 'IDS_SKILL'
													: ''")
	)

	(style (hitTest = false) (width = 100%))

	(element NotificationItemInnerPanel)

	(hblock
		(style
			(align = "middle")
			(width = 100%)
			(minHeight = 60px)
		)

		(block
			(style (width = 80px) (height = 100%) (align = "top|center") (marginRight = "M"))

			(block
				(element CrewSkillIconView
					_name =			"skillName"
					_isLearned =	false
				)

				(block
					(class $FullsizeAbsolute)

					(controller $Instance renderer='CrewSkillEpicIcon'
						(bind enabled "isEpic")
					)
				)
			)
		)

		(element RewardTooltipItemText
			_title =		"headerText"
			_description =	"subheaderText"
		)
	)
)

(def element SystemNotificationUniqueSkillItem (_notificationContentComponent:gfx)
	(scope
		(var talentEntityId:number =	"_notificationContentComponent.entityId")

		(struct talent =				PULL_TALENT(_entityId = "talentEntityId"))
		(var talentId:str =				"talent.component.id")

		(var headerText:str =			"talentEntityId	? tr('IDS_TALENT_' + talentId) : ''")
		(var subheaderText:str =		"talentEntityId	? 'IDS_TALENT_CAT_NAME_DEFAULT' : ''")
	)

	(style (hitTest = false) (width = 100%))

	(element NotificationItemInnerPanel)

	(hblock
		(style
			(align = "middle")
			(width = 100%)
			(minHeight = 60px)
		)

		(block
			(style (width = 80px) (height = 100%) (align = "top|center") (marginRight = "M"))

			(element CrewTalentItemView
				_talentId =		"talentId"
				_isForceWhite =	true
			)
		)

		(element RewardTooltipItemText
			_title =		"headerText"
			_description =	"subheaderText"
		)
	)
)

(def element SystemNotificationStrategicActionsBonusItem (_notificationContentComponent:gfx)
	(scope
		(var rewardEntityId:number = "_notificationContentComponent.entityId")
		(var reward:gfx = "$datahub.getEntity(rewardEntityId).rewardComponent")
		(var isResMulCoeffPositive:bool = "reward.amount > 0")
		(var resMulCoeff:str = "(isResMulCoeffPositive ? '+' : '') + toString(reward.amount)")
		(var resMulCategory:str = "isResMulCoeffPositive ? 'positive' : 'negative'")

		(var isCreditsCoeff:bool = "reward.subtype == SC.Common.REWARD_SUBTYPE.CREDITSCOEFF")
		(var attributesPositive:array = "isCreditsCoeff	? [	{	attributeIDS: 'IDS_PARAMS_MODIFIER_CREDITSFACTOR',
																measuredValue: resMulCoeff,
																measure: 'IDS_PERCENT',
																category: resMulCategory}]
														: [	{	attributeIDS: 'IDS_PARAMS_MODIFIER_SHIPEXPFACTOR',
																measuredValue: resMulCoeff,
																measure: 'IDS_PERCENT',
																category: resMulCategory},
															{	attributeIDS: 'IDS_PARAMS_MODIFIER_CREWEXPFACTOR',
																measuredValue: resMulCoeff,
																measure: 'IDS_PERCENT',
																category: resMulCategory},
															{	attributeIDS: 'IDS_PARAMS_MODIFIER_FREEEXPFACTOR',
																measuredValue: resMulCoeff,
																measure: 'IDS_PERCENT',
																category: resMulCategory}]")
	)
	(style (hitTest = false) (width = 100%))
	(element NotificationItemInnerPanel)
	(block
		(style (width = 100%) (paddingTop = "-S") (paddingBottom = "-S"))
		(element RewardContainerTooltipItem _reward = "reward")
	)
	(element TooltipSystemHorizontalDivider)
	(element TooltipSystemStatusLine
		_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.INFO"
		_text = 'IDS_STRATEGIC_ACTIONS_NOTIFICATION_BONUS_STATUS'
	)
	(element TooltipSystemHorizontalDivider)
	(element TooltipSystemParamsModifiersList
		_attributesPositive = "attributesPositive"
	)
)

(def element SystemNotificationShipMastery (_notificationContentComponent:gfx)
	(scope
		(var shipId:number = "_notificationContentComponent.shipId")
		(var rank:number = "_notificationContentComponent.rank")
	)
	(style
		(hitTest = false)
		(width = 100%)
	)
	(element NotificationItemInnerPanel)
	(hblock
		(style
			(width = 100%)
			(align = "middle")
		)
		(element ShipLineItemNM
			_shipId = "shipId"
			_withFlag = true
			_fontClass = '$TextDefaultBoldNM'
			_width = '100%'
		)

		(controller $Instance renderer='ShipMasteryIcon'
			(bind enabled "rank")
			(args
				_rank = "rank"
			)
		)
	)
)