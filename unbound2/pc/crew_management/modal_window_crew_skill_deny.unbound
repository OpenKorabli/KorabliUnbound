(def constant SKILL_DENIAL_ENTITY_PK_KEYS_0 [
	'EPIC_SKILL_DENIAL_0_FREE',
	'EPIC_SKILL_DENIAL_0_CREDITS',
	'EPIC_SKILL_DENIAL_0_GOLD'
])

(def constant SKILL_DENIAL_ENTITY_PK_KEYS_1 [
	'EPIC_SKILL_DENIAL_1_FREE',
	'EPIC_SKILL_DENIAL_1_CREDITS',
	'EPIC_SKILL_DENIAL_1_GOLD'
])

(def constant SKILL_DENIAL_ENTITY_PK_KEYS_2 [
	'EPIC_SKILL_DENIAL_2_FREE',
	'EPIC_SKILL_DENIAL_2_CREDITS',
	'EPIC_SKILL_DENIAL_2_GOLD'
])

(def constant SKILL_DENIAL_ENTITY_PK_KEYS_BY_COST_CATEGORY [
	"SKILL_DENIAL_ENTITY_PK_KEYS_0",
	"SKILL_DENIAL_ENTITY_PK_KEYS_1",
	"SKILL_DENIAL_ENTITY_PK_KEYS_2"
])

(def constant TALENT_DENIAL_ENTITY_PK_KEYS [
	'UNIQUE_SKILL_DENIAL_FREE',
	'UNIQUE_SKILL_DENIAL_CREDITS',
	'UNIQUE_SKILL_DENIAL_GOLD'
])

(def constant MODAL_WINDOW_CREW_SKILL_FORGET_WIDTH 480px)

(def element ModalWindowDenyCrewSkill (_crewId:number, _crewSkillEntityId:number=0, _crewTalentEntityId:number=0, _selectedShipClass:str='')
	(macro MODAL_WINDOW_INIT)
	(macro MODAL_WINDOW_BG)

	(scope
		(var accountResourceComponent:dhComponent =	"getSingleComponent(CC.accountResource)")
		(var accountEliteXP:number =	"accountResourceComponent.eliteXP	?: 0" (event "accountResourceComponent.evChangedEliteXP"))
		(var accountCredits:number =	"accountResourceComponent.credits	?: 0" (event "accountResourceComponent.evChangedCredit"))
		(var accountGold:number =		"accountResourceComponent.gold		?: 0" (event "accountResourceComponent.evChangedGold"))

		(struct crew =	PULL_CREW(_crewId = "_crewId"))

		(var eliteCrewLearning:dhComponent =	"crew.entity.eliteCrewLearning")
		(var skillDenialCostCategory:number =	"eliteCrewLearning.skillDenialCostCategory"	(event "eliteCrewLearning.evChanged"))

		(var selectedShipClass:str =	"isIn(_selectedShipClass, SC.Common.SHIP_TYPE.PLAYABLE_SHIP_TYPES) ? _selectedShipClass : SC.Common.SHIP_TYPE.PLAYABLE_SHIP_TYPES[0]")

		(var denialPKKeys:array = "	_crewTalentEntityId	? TALENT_DENIAL_ENTITY_PK_KEYS
														: SKILL_DENIAL_ENTITY_PK_KEYS_BY_COST_CATEGORY[skillDenialCostCategory]")

		(struct denialBasePrice =		PULL_PRICE_WITH_REFUND_OPERATIONS(_entityId = "denialPKKeys[0]"		_actionId = "SC.Common.PRICE_ACTION.BUY"))
		(struct denialCreditPrice =		PULL_PRICE_WITH_REFUND_OPERATIONS(_entityId = "denialPKKeys[1]"		_actionId = "SC.Common.PRICE_ACTION.BUY"))
		(struct denialGoldPrice =		PULL_PRICE_WITH_REFUND_OPERATIONS(_entityId = "denialPKKeys[2]"		_actionId = "SC.Common.PRICE_ACTION.BUY"))

		(struct selectedDenialTypePref =	GET_PREF_NUMBER(_option="'ui.crew.skillDenialType'"))
		(var selectedDenialType:number =	"selectedDenialTypePref.value")

		(var isSelectedDenialTypeGold:bool =	"selectedDenialType == SC.Common.CREW_MENTORSHIP_DENIAL_TYPE.GOLD")
		(var isSelectedDenialTypeCredits:bool =	"selectedDenialType == SC.Common.CREW_MENTORSHIP_DENIAL_TYPE.CREDITS")

		(var priceInfo:dict = "	isSelectedDenialTypeGold	? denialGoldPrice.info :
								isSelectedDenialTypeCredits	? denialCreditPrice.info
															: denialBasePrice.info")

		(var skillDenialProfit:number = "	isSelectedDenialTypeGold		? denialGoldPrice.refundComponent.profit :
											isSelectedDenialTypeCredits		? denialCreditPrice.refundComponent.profit
																			: denialBasePrice.refundComponent.profit")

		(var priceDataELXP:dict =	"selectedDenialType != SC.Common.CREW_MENTORSHIP_DENIAL_TYPE.FREE	? { finalPrice: skillDenialProfit, currency: SC.Common.CURRENCIES.ELITE_XP }
																										: null")

		(var currenciesPanelPrices:array = "[	{ currency: SC.Common.CURRENCIES.GOLD,		finalPrice: isSelectedDenialTypeGold	? -denialGoldPrice.info.finalPrice : 0 },
												{ currency: SC.Common.CURRENCIES.CREDITS,	finalPrice: isSelectedDenialTypeCredits	? -denialCreditPrice.info.finalPrice : 0 },
												{ currency: SC.Common.CURRENCIES.ELITE_XP,	finalPrice: skillDenialProfit } ]")

		
		(struct skill =				PULL_SKILL(_entityId = "_crewSkillEntityId"))
		(var skillName:str =		"skill.component.name")
		(var skillSubType:number =	"skill.component.skillSubType")
		(var isEpic:bool =			"skillSubType == SC.Common.SKILL_SUBTYPE.EPIC")
		

		
		(struct talent =		PULL_TALENT(_entityId = "_crewTalentEntityId"))
		(var talentId:str =		"talent.component.id")
		

		(var modalWindowHeader:str = "	_crewSkillEntityId	? isEpic	? 'IDS_MODAL_WINDOW_TITLE_EPIC_SKILL_DENY'
																		: 'IDS_MODAL_WINDOW_TITLE_SKILL_DENY' :
										_crewTalentEntityId				? 'IDS_MODAL_WINDOW_TITLE_TALENT_DENY'
																		: ''")

		(var headerText:str =		"_crewSkillEntityId		? toUpper('IDS_SKILL_'+ skillName) :
									 _crewTalentEntityId	? tr('IDS_TALENT_' + talentId)
															: ''")
		(var subheaderText:str =	"_crewSkillEntityId	? isEpic				? 'IDS_SKILL_ISEPIC'
																				: 'IDS_SKILL'
														: _crewTalentEntityId	? 'IDS_TALENT_CAT_NAME_DEFAULT'
																				: ''")

		(var questionText:str =		"selectedDenialType == SC.Common.CREW_MENTORSHIP_DENIAL_TYPE.FREE	? _crewSkillEntityId	? isEpic	?	'IDS_CREW_EPIC_SKILL_DENIAL_FULL_FREE'
																																			:	'IDS_CREW_SKILL_DENIAL_FULL_FREE'
																																:				'IDS_CREW_TALENT_DENIAL_FULL_FREE'
																										: _crewSkillEntityId	? isEpic	?	'IDS_CREW_EPIC_SKILL_DENIAL_FULL'
																																			:	'IDS_CREW_SKILL_DENIAL_FULL'
																																:				'IDS_CREW_TALENT_DENIAL_FULL'")

		(var crewDenySkillDict:dict = "{ crewId: _crewId, skillEntityId: skill.entity.id, denialType: selectedDenialType }")
		(var crewDenyTalentDict:dict = "{ crewId: _crewId, talentEntityId: talent.entity.id, denialType: selectedDenialType }")
	)

	(style (align = "center|middle"))

	(block
		(style
			(align = "center")
			(width = "MODAL_WINDOW_CREW_SKILL_FORGET_WIDTH")
		)

		(block
			(macro DEFAULT_MODAL_WINDOW_ANIMATION 1)

			(style
				(align = "center")
				(marginBottom = "S")
				(width = 100%)
			)

			(element ModalWindowShortHeader
				_header =		"modalWindowHeader"
				_hasDivider =	false
			)

			(element CurrenciesPanel
				_priceInfo =	"currenciesPanelPrices"
				_width =		"MODAL_WINDOW_CREW_SKILL_FORGET_WIDTH"
			)
		)

		(block
			(macro DEFAULT_MODAL_WINDOW_ANIMATION 1.3)

			(style (marginBottom = "MS"))

			(controller $Tooltip
				(renderer = 'SkillTooltip')
				(bind enabled "_crewSkillEntityId")
				(args
					_skillKey =					"_crewSkillEntityId"
					_selectedShipClass =		"selectedShipClass"
					_noMouseInstructions =		true
				)
				(macro DEFAULT_TOOLTIP_BEHAVIOUR)
			)

			(controller $Tooltip
				(renderer = 'CrewTalentTooltip')
				(bind enabled "_crewTalentEntityId")
				(args
					_id =					"talentId"
					_crewId =				"_crewId"
					_selectedShipClass =	"selectedShipClass"
				)
				(macro DEFAULT_TOOLTIP_BEHAVIOUR)
			)

			(element ModalWindowSystemExpendableIconWithHeaderAndSubheader
				_headerIconType =	"MODAL_WINDOW_SYSTEM_PURCHASABLE_ITEM_ICON.SKILL"
				_unifiedStatus =	"SC.Ui_styles.UNIFIED_STATUS.DEFAULT"
				_headerText =		"headerText"
				_subheaderText =	"subheaderText"
				_imageWidth =		60px
				_imageHeight =		60px
				_maxWidth =			300px
				_data =				"_crewSkillEntityId		? { type: CREW_SKILL_TYPE.SKILL, name: skillName, isEpic: isEpic } :
									 _crewTalentEntityId	? { type: CREW_SKILL_TYPE.TALENT, id: talentId }
															: {}"
			)
		)

		(block
			(macro DEFAULT_MODAL_WINDOW_ANIMATION 2)
			(style
				(marginBottom = "LM")
				(width = 100%)
			)

			(element HorizontalDividerTwoPx)

			(block
				(style (width = 100%))

				(controller $Repeat renderer='SkillDenialTypeItem'
					(bind count "SC.Common.CREW_MENTORSHIP_DENIAL_TYPE.ALL.length")
					(args
						_items =				"denialPKKeys"
						_denialType =			"SC.Common.CREW_MENTORSHIP_DENIAL_TYPE.ALL[2 - $index]"
						_selectedDenialType =	"selectedDenialType"
					)
				)
			)

			(element HorizontalDividerTwoPx)
		)

		(block
			(macro DEFAULT_MODAL_WINDOW_ANIMATION 3)
			(style (marginBottom = "MS") (width = 100%))

			(block
				(style
					(width = 100%)
					(alpha = 1)
					(visualOffsetY = 0px)
				)

				(macro DEFAULT_MODAL_WINDOW_CONTENT_BLOCK_APPEAR_ANIMATION
					_trigger =		"selectedDenialType"
					_delay =		"0.1"
					_duration =		"0.15"
				)

				(element ModalWindowSystemPurchaseItemPriceAndInfo
					_priceInfo =			"priceInfo"
					_questionString =		"questionText"
				)
			)

			(block
				(bind visible "priceDataELXP")

				(style
					(align = "center")
					(marginTop = "SXS")
					(width = 100%)
					(alpha = 1)
					(visualOffsetY = 0px)
				)

				(macro DEFAULT_MODAL_WINDOW_CONTENT_BLOCK_APPEAR_ANIMATION
					_trigger =		"selectedDenialType"
					_delay =		"0.15"
					_duration =		"0.15"
				)

				(controller $Instance renderer='PriceTagWithLabel'
					(bind enabled "priceDataELXP")
					(args
						_priceInfo =	"priceDataELXP"
						_label =		'IDS_YOU_WILL_RECEIVE'
						_size =			"SIZE.MEDIUM"
						_labelAlpha =	"TC"
					)
				)
			)

			(block
				(style
					(align = "center")
					(marginTop = "M")
					(width = 100%)
				)

				(element StatusLine
					_unifiedStatus =	"SC.Ui_styles.UNIFIED_STATUS.ATTENTION"
					_text =				"_crewSkillEntityId		? isEpic	? 'IDS_CREW_EPIC_SKILL_DENIAL_ATTENTION_INFO'
																			: 'IDS_CREW_SKILL_DENIAL_ATTENTION_INFO' :
										 _crewTalentEntityId				? 'IDS_CREW_TALENT_DENIAL_ATTENTION_INFO'
																			: ''"
				)
			)
		)

		(block
			(macro DEFAULT_MODAL_WINDOW_ANIMATION 4)
			(style (align = "center") (width = 100%))

			(element ModalWindowSystemPurchaseItemYesNoCloseButtons
				_okMethods = "_crewSkillEntityId	? [{ type: 'inputMapping.onAction',	name: CREW_ACTIONS.DENY_SKILL,	args: crewDenySkillDict }]
													: [{ type: 'inputMapping.onAction',	name: CREW_ACTIONS.DENY_TALENT,	args: crewDenyTalentDict }]"
			)
		)
	)
)

(def element SkillDenialTypeItem (_items:array, _denialType:number, _selectedDenialType:number)
	(scope
		(var accountResourceComponent:dhComponent =	"getSingleComponent(CC.accountResource)")

		(struct denialPrice =	PULL_PRICE_WITH_REFUND_OPERATIONS(_entityId = "_items[_denialType]"		_actionId = "SC.Common.PRICE_ACTION.BUY"))
		(var priceInfoELXP:dict = "{ finalPrice: denialPrice.refundComponent.profit, currency: SC.Common.CURRENCIES.ELITE_XP }")

		(var denialCurrencyAmount:number = "accountResourceComponent[denialPrice.info.currency]" (event "accountResourceComponent.evChangedGold") (event "accountResourceComponent.evChangedCredit"))
		(var isCurrencyDeficit:bool = "_denialType != SC.Common.CREW_MENTORSHIP_DENIAL_TYPE.FREE && (denialCurrencyAmount - denialPrice.info.finalPrice < 0)")

		(var disableReasonText:str = "isCurrencyDeficit	? _denialType == SC.Common.CREW_MENTORSHIP_DENIAL_TYPE.CREDITS	? 'IDS_NOT_ENOUGH_CREDITS'
																														: 'IDS_NOT_ENOUGH_GOLD'
														: ''")

		(var isSelected:bool = "_selectedDenialType == _denialType")
	)

	(bindcall externalCall "isSelected ? 'direct.action' : ''"						"['option.set', [ 'ui.crew.skillDenialType', SC.Common.CREW_MENTORSHIP_DENIAL_TYPE.FREE ]]"	watch=false (bind enabled "isCurrencyDeficit"))
	(bindcall externalCall "isCurrencyDeficit && isSelected ? 'direct.action' : ''"	"['option.set', [ 'ui.crew.skillDenialType', SC.Common.CREW_MENTORSHIP_DENIAL_TYPE.FREE ]]"	watch=false on='addedToStage')

	(style (width = 100%))

	(element BigMenuItemWithPrice
		_subTitle =				"'IDS_CREW_SKILL_DENIAL_ELITE_XP_REFUND_' + _denialType"
		_isSelected =			"isSelected"
		_isAvailable =			"!isCurrencyDeficit"
		_disableReasonText =	"disableReasonText"
		_priceInfo =			"denialPrice.info"
		_titlePriceInfo =		"priceInfoELXP"
		_methods =				"[{ type: 'direct.action', name: 'option.set', args: [ 'ui.crew.skillDenialType', _denialType ] }]"
	)
)
