(def element ShipTTXCrewBlock (_crewId:number, _currentTTXShipId:number, _isNotExpanded:bool, _isCrewBlockVisible:bool)
	(scope
		(macro MOUSE_HANDLER_SCOPE)
		(macro PULL_SHIP_ID)

		(struct crewFeature =	FEATURES(_state="SC.Common.ACCOUNT_FEATURE.CREW"))
		(struct crew =			PULL_CREW(_crewId = "_crewId"))

		(var classificationId:number =	"crew.component.classificationId"	(event "crew.component.evClassificationIdChanged"))
		(var timeRent:number =			"crew.component.timeRent ?: 0"		(event "crew.component.evTimeRentChanged") (event "crew.component.evChanged"))

		(var canCrewBeUpgradedToElite:bool = "isIn(classificationId, SC.Common.COMMANDER_CLASSIFICATIONS.CAN_LEARN_ELITE_CREW_BOOK)")
		(var isRental:bool = "timeRent > 0")

		(var crewDataEntity:dhEntity =	"getSingleEntity(CC.crewData)")
		(var crewData:dhComponent =		"crewDataEntity.crewData")

		(var doesPlayerHaveNewEliteBooks:bool =	"crewDataEntity.hasComponent(CC.newItem)")

		(var booksAmount:number =		"crewData.eliteCrewBooksCount ?: 0"		(event "crewData.evEliteCrewBooksCountChanged"))
		(var doesPlayerHaveBook:bool =	"booksAmount > 0")
		(var canConvertIntoElite:bool =	"doesPlayerHaveBook && !isRental && canCrewBeUpgradedToElite")

		(var isNewEliteBookMarkerShown:bool =	"doesPlayerHaveNewEliteBooks && canConvertIntoElite")

		(var isCrewAssigned:bool =		"_crewId > 0")
		(var isMarkerNewVisible:bool =	"crewFeature.state == 'new' || isNewEliteBookMarkerShown")
	)

	(bindcall externalCall "'inputMapping.onAction'" "['featureSeen', { featureIndex: SC.Common.ACCOUNT_FEATURE.CREW }]" on='leftClick')

	(class $Fullsize)

	(block
		(bind visible "isCrewAssigned")

		(class $Fullsize)
		(style (marginTop = -1px))

		(block
			(class $FullsizeAbsolute)

			(controller $Instance renderer='ShipTTXAssignedCrew'
				(bind enabled "isCrewAssigned")
				(args
					_crewId =				"_crewId"
					_isNotExpanded =		"_isNotExpanded"
					_isCrewBlockVisible =	"_isCrewBlockVisible"
				)
			)
		)
	)

	(block
		(bind visible "!isCrewAssigned")

		(class $Fullsize)
		(style (backgroundColor = "NO_COLOR"))

		(macro MOUSE_EVENTS_DISPATCHER)

		(block
			(visible = "_isCrewBlockVisible")

			(class $Fullsize)

			(controller $Animation
				(bindcall play
					duration =	0.15
					from =		"{ alpha: 0, scaleY: 0, visible: false }"
					to =		"{ alpha: 1, scaleY: 1, visible: true }"
					reverse =	"!_isCrewBlockVisible"
					(bind trigger "_isCrewBlockVisible")
				)
			)

			(controller $Instance renderer='ShipTTXEmptyCrew'
				(bind enabled "!isCrewAssigned")
				(args
					_currentTTXShipId =		"_currentTTXShipId"
					_rollOver =				"rollOver"
					_isNotExpanded =		"_isNotExpanded"
				)
			)
		)
	)

	(block
		(macro DEFAULT_CONTROL_MARKER_ANIMATION "isMarkerNewVisible")
		(style
			(position = "absolute")
			(hitTest = false)
			(bottom = 22px)
			(right = "XXS")
		)

		(element MarkerNew)
	)

	(element HorizontalDividerTwoPx)
)

(def element ShipTTXAssignedCrew (_crewId:number, _isNotExpanded:bool, _isCrewBlockVisible:bool)
	(scope
		(macro MOUSE_HANDLER_SCOPE)

		(struct crew =			PULL_CREW(_crewId = "_crewId"))
		(struct permissions =	PULL_CREW_PERMISSIONS(_crew = "crew.component"))

		(var hasCrewRestrictions:bool = "permissions.isDisabledBarracks && permissions.isDisabledCrewFire && permissions.isDisabledCrewLevelUp && permissions.isDisabledLearnSkills")

		(var shipId:number =		"crew.component.shipID")
		(var shipEntity:dhEntity =	"getPrimaryEntity(CC.ship, shipId)")
		(var shipInfo:dhComponent =	"shipEntity.ship")

		(var baseUrl:str =				"crew.component.baseUrl ?: ''"			(event "crew.component.evRankChanged"))
		(var overlayUrl:str =			"crew.component.overlayUrl ?: ''"		(event "crew.component.evRankChanged"))

		(var classificationId:number =	"crew.component.classificationId"		(event "crew.component.evClassificationIdChanged"))
		(var isCrewElite:bool =			"classificationId == SC.Common.COMMANDER_CLASSIFICATIONS.ELITE")
		(var isMaxLevel:bool =			"crew.component.isMaxLevel"				(event "crew.component.evLevelUp"))
		(var skillMatrixId:number =		"crew.component.skillMatrixId ?: 0"		(event "crew.component.evChanged"))
		(var allSkillPoints:number =	"crew.component.allSkillPoints"			(event "crew.component.evLevelUp"))
		(var isEliteCrewMaxLevel:bool =	"isCrewElite && isMaxLevel")

		(var eliteCrewLearning:dhComponent =			"crew.entity.eliteCrewLearning")
		(var isAnyTalentAvailable:bool =				"eliteCrewLearning.isAnyTalentAvailable"				(event "eliteCrewLearning.evIsAnyTalentAvailableChanged"))
		(var isAnySkillForBoardedShipAvailable:bool =	"eliteCrewLearning.isAnySkillForBoardedShipAvailable"	(event "eliteCrewLearning.evIsAnySkillForBoardedShipAvailableChanged"))

		(var isExpandedCrewBlockVisible:bool =	"!_isNotExpanded && _isCrewBlockVisible")

		(var isEliteCrewTalentOrSkillUpgradeAvailable:bool = "isEliteCrewMaxLevel && (isAnyTalentAvailable || isAnySkillForBoardedShipAvailable)")

		(var state:number = "mouseDown		? SC.Ui_styles.BUTTON_STATE.DOWN :
							 rollOver		? SC.Ui_styles.BUTTON_STATE.OVER
											: SC.Ui_styles.BUTTON_STATE.UP")
	)

	(macro MOUSE_EVENTS_DISPATCHER)
	(macro SOUND_HANDLER
		_soundSet = "'default_button'"
	)
	(bindcall externalCall "'inputMapping.onAction'" "['navigateTo', { route: SC.Ui_windows.ROUTE.CREW_MANAGEMENT }]" on='leftClick')

	(name = 'CrewShipPanelBlock')

	(class $Fullsize)

	(element MenuItemBackground
		_state = "state"
	)

	(block
		(class $FullsizeAbsolute)
		(style (backgroundColor = "NO_COLOR"))

		(controller $Tooltip
			(renderer = 'CrewTooltip')
			(args
				_crewId =	"_crewId"
				_fromDock =	true
			)
			(macro DEFAULT_TOOLTIP_BEHAVIOUR)
		)

		(controller $Tooltip
			(bind enabled "skillMatrixId && !hasCrewRestrictions")
			(renderer = 'CrewMenuTTX')
			(args
				_crewId =	"_crewId"
			)
			(macro DEFAULT_MENU_BEHAVIOUR "1")
		)
	)

	(block
		(style
			(position = "absolute")
			(right = 0px)
			(bottom = 0px)
			(alpha = "isExpandedCrewBlockVisible ? 1 : 0")
		)

		(controller $Animation
			(bindcall play
				delay =		"_isNotExpanded ? 0 : 0.04"
				duration =	0.06
				watch =		false
				from =		"{ alpha: 0 }"
				to =		"{ alpha: 1 }"
				easing =	"Easing.quad_out"
				action =	"kill"
				reverse =	"!isExpandedCrewBlockVisible"
				(bind trigger "isExpandedCrewBlockVisible")
			)
		)

		(element CrewPortraitBig
			_baseUrl =		"baseUrl"
			_overlayUrl =	"overlayUrl"
		)
	)

	(block
		(style
			(width = 180px)
			(height = 100%)
			(marginLeft = 34px)
			(paddingTop = "S")
			(paddingBottom = "S")
		)

		
		(block
			(style
				(hitTest = false)
				(width = 100%)
				(alpha = "_isCrewBlockVisible ? 1 : 0")
				(scaleY = "_isCrewBlockVisible ? 1 : 0")
			)

			(controller $Animation
				(bindcall play
					duration =	0.15
					watch =		false
					from =		"{ alpha: 0, scaleY: 0 }"
					to =		"{ alpha: 1, scaleY: 1 }"
					reverse =	"!_isCrewBlockVisible"
					(bind trigger "_isCrewBlockVisible")
				)
			)

			(element CrewNameWithIcon
				_crewId =		"_crewId"
				_hideRank =		"_isNotExpanded"
				_isBig =		false
				_isTTX =		true
			)
		)

		
		(block
			(style
				(position = "absolute")
				(bottom = 0px)
				(width = 150px)
				(bind hitTest "!_isNotExpanded && _isCrewBlockVisible")
				(alpha = "isExpandedCrewBlockVisible ? 1 : 0")
				(scaleY = "isExpandedCrewBlockVisible ? 1 : 0")
			)

			(controller $Animation
				(bindcall play
					duration =	0.09
					watch =		false
					from =		"{ alpha: 0, scaleY: 0 }"
					to =		"{ alpha: 1, scaleY: 1 }"
					reverse =	"!isExpandedCrewBlockVisible"
					(bind trigger "isExpandedCrewBlockVisible")
				)
			)

			(block
				(style (width = 100%))

				(controller $Instance renderer='CrewExperienceBar'
					(bind enabled "skillMatrixId && !isEliteCrewTalentOrSkillUpgradeAvailable")
					(args
						_crewId =		"_crewId"
						_isFromTTX =	true
					)
				)
			)

			(block
				(bind visible "isEliteCrewMaxLevel")

				(style
					(hitTest = false)
					(marginLeft = -22px)
					(marginBottom = "XS")
				)

				(controller $Instance renderer='StatusLine'
					(bind enabled "isEliteCrewTalentOrSkillUpgradeAvailable")
					(args
						_text =				"isAnyTalentAvailable	? 'IDS_TTX_ELITE_CREW_CAN_GET_TALENT'
																	: 'IDS_TTX_ELITE_CREW_CAN_UPGRADE_SKILL'"
						_unifiedStatus =	"SC.Ui_styles.UNIFIED_STATUS.UPGRADE_AVAILABLE"
					)
				)
			)
		)
	)

	
	(block
		(style
			(position = "absolute")
			(right = 10px)
			(bottom = "XS")
			(alpha = "_isCrewBlockVisible ? 1 : 0")
			(scaleY = "_isCrewBlockVisible ? 1 : 0")
		)

		(controller $Animation
			(bindcall play
				duration =	0.15
				watch =		false
				from =		"{ alpha: 0, scaleY: 0 }"
				to =		"{ alpha: 1, scaleY: 1 }"
				reverse =	"!_isCrewBlockVisible"
				(bind trigger "_isCrewBlockVisible")
			)
		)

		(controller $Instance renderer='CrewSkillPoints'
			(bind enabled "allSkillPoints > 0 && skillMatrixId")
			(args
				_crewId =		"_crewId"
				_shipClass =	"shipInfo.subtype"
				_isBig =		false
			)
		)
	)
)

(def element ShipTTXEmptyCrew (_currentTTXShipId:number, _rollOver:bool, _isNotExpanded:bool)
	(scope
		(macro PULL_SHIP_ID)

		(var ownShipEntity:dhEntity =		"getPrimaryEntity(CC.ownShip, _currentTTXShipId)")
		(var shipInfo:dhComponent =			"ownShipEntity.ship")
		(var ownShipInfo:dhComponent =		"ownShipEntity.ownShip")

		(var lastBoardedCrewId:number =		"shipInfo.lastBoardedCrewId"		(event "shipInfo.evUpdate") (event "shipInfo.evLastBoardedCrewIdChanged"))
		(var isWithoutCrewPenalty:bool =	"shipInfo.isWithoutCrewPenalty"		(event "shipInfo.evUpdate"))
		(var crewId:number =				"ownShipEntity.ownShip.crewId"		(event "ownShipEntity.ownShip.evCrewChanged"))

		(struct lastBoardedCrew =		PULL_CREW(_crewId = "lastBoardedCrewId"))

		(var hasLastBoardedCrew:bool =				"lastBoardedCrew.entity != null")
		(var isReturnLastCrewButtonVisible:bool =	"!_isNotExpanded && crewId == 0 && lastBoardedCrewId != 0 && hasLastBoardedCrew")
		(var lastBoardedCrewShipId:number =			"lastBoardedCrew.component.shipID")
		(var lastBoardedCrewSpecID:number =			"lastBoardedCrew.component.specializationID ?: 0"	(event "lastBoardedCrew.component.evChanged"))

		(var otherShipEntity:dhEntity =		"getPrimaryEntity(CC.ownShip, lastBoardedCrewShipId)")
		(var isOtherShipExist:bool =		"otherShipEntity != null")
		(var isOtherShipLocked:bool =		"otherShipEntity.ownShip.isLocked"	(event "otherShipEntity.ownShip.evUpdateLock"))

		(var isLocked:bool =		"ownShipInfo.isLocked"			(event "ownShipInfo.evUpdateLock"))
		(var isInFormation:bool =	"ownShipInfo.isInFormation"		(event "ownShipInfo.evUpdateLock"))

		(var isLastBoardedCrewLocked:bool =		"isOtherShipExist && isOtherShipLocked")
		(var canAssignWithoutRetrain:bool =		"(lastBoardedCrewSpecID == _currentTTXShipId) || isWithoutCrewPenalty")
		(var isButtonDisabled:bool =			"isLocked || isInFormation || isLastBoardedCrewLocked")
	)

	(class $Fullsize)

	(block
		(visible = "!_rollOver")

		(class $MiddleVHAbsolutely)

		(style
			(hitTest = false)
			(width = 100%)
			(alpha = "_rollOver ? 0 : 1")
			(visualOffsetY = "_rollOver ? -10px : 0px")
		)

		(controller $Animation
			(bindcall play
				duration =	0.15
				from =		"{ alpha: 0, visualOffsetY: -10px, visible: false }"
				to =		"{ alpha: 1, visualOffsetY: 0px, visible: true }"
				reverse =	"_rollOver"
				(bind trigger "!_rollOver")
			)
		)

		(tf
			(name = 'No_Crew')

			(class $TextDefaultBoldNM)
			(style
				(width = 100%)
				(textAlign = "center")
				(textColor = "SC.Ui_styles.SERVICE_COLORS.ORANGE")
			)

			(text = "toUpper(tr('IDS_NO_CREW'))")
		)
	)

	(block
		(visible = "_rollOver")

		(class $MiddleVHAbsolutely)

		(style
			(width = 200px)
			(alpha = "_rollOver ? 1 : 0")
			(visualOffsetY = "_rollOver ? 0px : 10px")
		)

		(controller $Animation
			(bindcall play
				duration =	0.15
				from =		"{ alpha: 0, visualOffsetY: 10px, visible: false }"
				to =		"{ alpha: 1, visualOffsetY: 0px, visible: true }"
				reverse =	"!_rollOver"
				(bind trigger "_rollOver")
			)
		)

		(block
			(style (width = 100%))

			(controller $Animation
				(bindcall play
					duration =	0.15
					from =		"{ alpha: 0, visualOffsetY: 10px, visible: false }"
					to =		"{ alpha: 1, visualOffsetY: 0px, visible: true }"
					reverse =	"!_rollOver"
					(bind trigger "_rollOver")
				)
			)

			(controller $Tooltip
				(renderer = 'SimpleStatusTooltip')
				(args
					_unifiedStatus =	"SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT"
					_text =				'IDS_ASSIGN_OR_RECRUIT_CREW_MOUSE_INSTRUCTION'
				)
				(macro DEFAULT_TOOLTIP_BEHAVIOUR)
			)

			(element DefaultButton
				_type =			"SC.Ui_styles.BUTTON_TYPE.SECONDARY"
				_width =		100%
				_name =			'AssignCrewButton'
				_label =		'IDS_ASSIGN_CREW'
				_methods =		"[{ type: 'inputMapping.onAction', name: 'navigateTo', args: { route: SC.Ui_windows.ROUTE.CREW_MANAGEMENT } }]"
			)
		)

		(block
			(bind visible "isReturnLastCrewButtonVisible")

			(style
				(width = 100%)
				(marginTop = "XS")
			)

			(block
				(style (width = 100%))

				(controller $Tooltip
					(renderer = 'CrewTooltip')
					(bind enabled "isReturnLastCrewButtonVisible")
					(args
						_crewId =					"lastBoardedCrewId"
						_targetShipId =				"_currentTTXShipId"
						_noContextMenuInstruction =	true
					)
					(macro DEFAULT_TOOLTIP_BEHAVIOUR)
				)

				(controller $Instance renderer='DefaultButton'
					(bind enabled "isReturnLastCrewButtonVisible")
					(args
						_type =				"SC.Ui_styles.BUTTON_TYPE.SECONDARY"
						_width =			100%
						_label =			'IDS_CREW_HIRE_LAST_CREW'
						_isTransactionBtn =	true
						_methods =			"canAssignWithoutRetrain	? [{ type: 'inputMapping.onAction',		name: CREW_ACTIONS.ASSIGN_TO_SHIP,				args: { crewId: lastBoardedCrewId, shipId: _currentTTXShipId } }]
																		: [{ type: 'inputMapping.onRequest',	name: CREW_ACTIONS.OPEN_CREW_RETRAIN_WINDOW,	args: { crewId: lastBoardedCrewId, shipId: _currentTTXShipId } }]"
						_enabled =			"!isButtonDisabled"
					)
				)
			)
		)
	)
)