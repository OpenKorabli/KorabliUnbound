(def element DockNaviButtons ()
	(scope
		(macro HIGH_CONTRAST_DATA_SCOPE)

		(macro PULL_FULL_ROUTE
			_nodeId =				"SC.Ui_windows.ROUTE.PORT"
			_fieldIsActive =		"'isInPort'"
			_fieldActiveChild =		"'currentPortSubroute'"
			_fieldPrevActiveChild =	"'prevPortSubroute'"
			_fieldChildren =		"'availablePortSubroutes'"
		)

		(var browserWindowWatcher:gfx = "$datahub.getFirstWatcher(CC.webBrowser)")
		(var browserWindowEntity:gfx = "browserWindowWatcher.entity" (event "browserWindowWatcher.event"))
		(var webBrowserComponent:gfx = "browserWindowEntity.webBrowser")
		(var isBrowserTextureReady:bool = "webBrowserComponent.isTextureReady" (event "webBrowserComponent.evIsTextureReadyChanged"))

		(macro PULL_SHIP_ID)
		(macro PULL_OWN_SHIP_SCOPE "playerShipId" "'shipEntity'" "'shipInfo'")
		(var isAnyShipAvailable:bool = "playerShipId != 0")

		
		(struct portNewTip = PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.CHECK_PROSPECTIVE_EVENT"))
		

		
		(macro FEATURES "12")
		(macro FEATURES "14")
		(macro FEATURES "17")

		(var isResearchUnlocked:bool = "feature_17 != 'locked'")

		(var modernizationCollection:gfx = "$datahub.getCollection(CC.equipmentSlot).getChildByPath('bySlotType.' + SC.Ships.SHIP_SLOT_TYPES.MODERNIZATION)")
		(var modernizationCollectionItems:array = "modernizationCollection ? modernizationCollection.items : []" (event "modernizationCollection.evUpdated") (event "modernizationCollection.evAdded") (event "modernizationCollection.evRemoved"))
		(var expiredSignalsCollection:gfx = "$datahub.getCollection(CC.signal).getChildByPath('installedSignals.expired')")
		(var expiredSignalsCollectionItems:array = "expiredSignalsCollection ? expiredSignalsCollection.items : []" (event "expiredSignalsCollection.evUpdated") (event "expiredSignalsCollection.evAdded") (event "expiredSignalsCollection.evRemoved"))

		(var doesShipHaveExpiredSignals:bool = "expiredSignalsCollectionItems.length != 0")
		(struct alchemyNewMarker = GET_PREF_BOOL(_option="'ui.alchemy.isSignalsAlchemyNew'"))
		(var isNewModulesMarker:bool = "(feature_14 == 'new') || (feature_12 == 'new' && (modernizationCollectionItems.length > 0)) || alchemyNewMarker.value")
		(var isSignalsExpired:bool = "doesShipHaveExpiredSignals && (currentPortSubroute != SC.Ui_windows.ROUTE.MANAGEMENT)")

		(struct modIntroNewTip =					PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.MODERNIZATION_INTRO"))
		(struct modIntroRepeatNewTip =				PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.MODERNIZATION_INTRO_REPEAT"))
		(struct freeXPIntroNewTip =					PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.FREE_XP_MODULE_TAB"))
		(struct freeXPIntroRepeatNewTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.FREE_XP_MODULE_TAB_REPEAT"))
		(struct battleBonusIntroNewTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.BATTLE_BONUS_INTRO"))
		(struct battleBonusIntroRepeatNewTip =		PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.BATTLE_BONUS_INTRO_REPEAT"))
		

		
		(macro FEATURES "15")

		(var selectedBattleTypeEntity:dhEntity = "getSingleEntity(CC.battleType, 'selected')")
		(var battleUIInfoComponent:dhComponent = "selectedBattleTypeEntity.battleUIInfo")
		(var hideExteriorsByScenario:bool = "toBool(battleUIInfoComponent.tagsMaskForUI & (1 << SC.Common.SCENARIO_TAGS_MASK.HIDE_EXTERIORS))")

		(var newExteriorsMarkerEntity:dhEntity = "getPrimaryEntity(CC.newContent, SC.Common.CONTENT_CATEGORY.EXTERIOR)"  )
		(var showNewContentCounter:bool = "newExteriorsMarkerEntity && !hideExteriorsByScenario")
		(var newExteriorsContentCounter:number = "showNewContentCounter ? newExteriorsMarkerEntity.newContent.count : 0" (event "newExteriorsMarkerEntity.newContent.evCountChanged"))

		(var installedCamouflageWatcher:gfx = "$datahub.getFirstWatcher(CC.installedCamouflage)")
		(var installedCamouflageEntity:gfx = "installedCamouflageWatcher ? installedCamouflageWatcher.entity : null" (event "installedCamouflageWatcher.event"))
		(var exteriorsInStorage:number = "installedCamouflageEntity	? installedCamouflageEntity.countComponent.value : 0" (event "installedCamouflageEntity.countComponent.evUpdate"))
		(var isCamouflageExpired:bool = "installedCamouflageEntity	? exteriorsInStorage == 0 : false")

		(var isCamouflagesUnlocked:bool = "feature_15 != 'locked'")

		(struct exteriorIntroNewTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_INTRO"))
		(struct exteriorIntroRepeatNewTip =		PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_INTRO_REPEAT"))
		

		
		(var paragonSeasonEntity:gfx = "$datahub.getSingleEntity(CC.paragonSeason)")
		(var isParagonEnabled:bool = "paragonSeasonEntity ? paragonSeasonEntity.paragonSeason.enabled : false" (event "paragonSeasonEntity.paragonSeason.evUpdate"))

		(var userTaskEntity:gfx = "$datahub.getSingleEntity(CC.userTask)")
		(var userTaskComponent:gfx = "userTaskEntity ? userTaskEntity.userTask : null")
		(var currentUserTaskFlags:array = "userTaskComponent ? userTaskComponent.flags : []" (event "userTaskComponent.evFlagChanged"))
		(var isNotSeenParagonInShipTree:bool = "currentUserTaskFlags[BINARY_SHIFT_MAP[SC.Common.USER_TASKS_FLAGS.KNOWS_ABOUT_PARAGONS_IN_SHIP_TREE]] == 0")

		(struct researchIntroTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.RESEARCH_INTRO"))
		(struct researchIntroRepeatTip =	PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.RESEARCH_INTRO_REPEAT"))
		(struct researchShipFeaturesTip =	PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.SHIP_FEATURES_RESEARCH_DOCK"))
		(struct researchShipClassesTip =	PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.SHIP_CLASSES_RESEARCH_TAB"))
		(struct researchSupershipsTip =		PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.SUPERSHIPS"))
		(struct researchParagonsTip =		PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.PARAGONS_INTRO"))
		

		
		(macro FEATURES "16") 

		(var rankSeasonEntity:gfx = "$datahub.getSingleEntity(CC.rankSeason)")

		(var newCardsEntity:gfx =				"$datahub.getPrimaryEntity(CC.newContent, SC.Common.CONTENT_CATEGORY.CARDS)")
		(var newCardsCounter:number =			"newCardsEntity ? newCardsEntity.newContent.count : 0" (event "newCardsEntity.newContent.evCountChanged"))

		(var newAchievementEntity:gfx =			"$datahub.getPrimaryEntity(CC.newContent, SC.Common.CONTENT_CATEGORY.ACHIEVEMENT)")
		(var newAchievementCounter:number =		"newAchievementEntity ? newAchievementEntity.newContent.count : 0" (event "newAchievementEntity.newContent.evCountChanged"))

		(var newAccountLevelsEntity:gfx =		"$datahub.getPrimaryEntity(CC.newContent, SC.Common.CONTENT_CATEGORY.ACCOUNT_LEVELS)")
		(var newAccountLevelsCounter:number =	"newAccountLevelsEntity ? newAccountLevelsEntity.newContent.count : 0" (event "newAccountLevelsEntity.newContent.evCountChanged"))

		(var newProfileCounter:number = "newCardsCounter + newAchievementCounter + newAccountLevelsCounter")
		

		
		(macro FEATURES "27")
		(macro PULL_SELF_PLAYER_SCOPE)

		(var playerHasClanManComponent:bool = "selfPlayerEntity && selfPlayerEntity.hasComponent(CC.clanman)" (event "selfPlayerEntity.evAdded") (event "selfPlayerEntity.evRemoved"))
		(var playerComponentClanman:gfx = "playerHasClanManComponent ? selfPlayerEntity.clanman : null" (event "selfPlayerEntity.evAdded") (event "selfPlayerEntity.evRemoved"))
		(var clanId:number = "playerComponentClanman ? playerComponentClanman.clanId : 0" (event "playerComponentClanman.evClanIdChanged"))

		(var cwInfoEntity:dhEntity = "getPrimaryEntity(CC.clanWarsInfo, selfPlayerDbId)")
		(var clanWarsInfoComponent:dhComponent = "cwInfoEntity.clanWarsInfo")
		(var isClanWarSeen:bool = "clanWarsInfoComponent.warSeen" (event "clanWarsInfoComponent.evWarSeenChanged"))

		(macro PULL_CLANINFO
			_clanId = "clanId"
		)

		(var isClanTabVisible:bool = "playerHasClanManComponent || (feature_27 != 'locked')")
		(var clanLabel:str = "playerHasClanManComponent ? '[' + clanTag + ']' : toUpper(tr('IDS_CLANS'))")

		(struct clansIntroNewTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.CLANS_INTRO"))
		(struct clansIntroRepeatNewTip =	PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.CLANS_INTRO_REPEAT"))

		(var chainId:number = "		clansIntroNewTip.isActive			? SC.Context_guiding_tip.TIP_CHAIN_ID.CLANS :
									clansIntroRepeatNewTip.isActive		? SC.Context_guiding_tip.TIP_CHAIN_ID.CLANS_REPEAT
																		: SC.Context_guiding_tip.TIP_CHAIN_ID.NONE")
		

		
		(var guidingTipId:number = "portNewTip.isActive						? SC.Context_guiding_tip.TIP_TYPE.CHECK_PROSPECTIVE_EVENT :
									modIntroNewTip.isActive					? SC.Context_guiding_tip.TIP_TYPE.MODERNIZATION_INTRO :
									modIntroRepeatNewTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.MODERNIZATION_INTRO_REPEAT :
									freeXPIntroNewTip.isActive				? SC.Context_guiding_tip.TIP_TYPE.FREE_XP_MODULE_TAB :
									freeXPIntroRepeatNewTip.isActive		? SC.Context_guiding_tip.TIP_TYPE.FREE_XP_MODULE_TAB_REPEAT :
									battleBonusIntroNewTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.BATTLE_BONUS_INTRO :
									battleBonusIntroRepeatNewTip.isActive	? SC.Context_guiding_tip.TIP_TYPE.BATTLE_BONUS_INTRO_REPEAT :
									exteriorIntroNewTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_INTRO :
									exteriorIntroRepeatNewTip.isActive		? SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_INTRO_REPEAT :
									researchIntroTip.isActive				? SC.Context_guiding_tip.TIP_TYPE.RESEARCH_INTRO :
									researchIntroRepeatTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.RESEARCH_INTRO_REPEAT :
									researchShipFeaturesTip.isActive		? SC.Context_guiding_tip.TIP_TYPE.SHIP_FEATURES_RESEARCH_DOCK :
									researchShipClassesTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.SHIP_CLASSES_RESEARCH_TAB :
									researchSupershipsTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.SUPERSHIPS :
									clansIntroNewTip.isActive				? SC.Context_guiding_tip.TIP_TYPE.CLANS_INTRO :
									clansIntroRepeatNewTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.CLANS_INTRO_REPEAT :
									researchParagonsTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.PARAGONS_INTRO
																			: SC.Context_guiding_tip.TIP_TYPE.NONE")


		(var isPortTipVisible:bool =		"guidingTipId == SC.Context_guiding_tip.TIP_TYPE.CHECK_PROSPECTIVE_EVENT")
		(var isManagementTipVisible:bool =	"isIn(guidingTipId, [	SC.Context_guiding_tip.TIP_TYPE.MODERNIZATION_INTRO,
																	SC.Context_guiding_tip.TIP_TYPE.MODERNIZATION_INTRO_REPEAT,
																	SC.Context_guiding_tip.TIP_TYPE.FREE_XP_MODULE_TAB,
																	SC.Context_guiding_tip.TIP_TYPE.FREE_XP_MODULE_TAB_REPEAT,
																	SC.Context_guiding_tip.TIP_TYPE.BATTLE_BONUS_INTRO,
																	SC.Context_guiding_tip.TIP_TYPE.BATTLE_BONUS_INTRO_REPEAT ])")
		(var isExteriorTipVisible:bool =	"isIn(guidingTipId, [	SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_INTRO,
																	SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_INTRO_REPEAT ])")
		(var isResearchTipVisible:bool =	"isIn(guidingTipId, [	SC.Context_guiding_tip.TIP_TYPE.RESEARCH_INTRO,
																	SC.Context_guiding_tip.TIP_TYPE.RESEARCH_INTRO_REPEAT,
																	SC.Context_guiding_tip.TIP_TYPE.SHIP_FEATURES_RESEARCH_DOCK,
																	SC.Context_guiding_tip.TIP_TYPE.SHIP_CLASSES_RESEARCH_TAB,
																	SC.Context_guiding_tip.TIP_TYPE.PARAGONS_INTRO,
																	SC.Context_guiding_tip.TIP_TYPE.SUPERSHIPS ])")
		(var isClanTipVisible:bool =		"isIn(guidingTipId, [	SC.Context_guiding_tip.TIP_TYPE.CLANS_INTRO,
																	SC.Context_guiding_tip.TIP_TYPE.CLANS_INTRO_REPEAT ])")
		

		(var isBlurOnTabsDisabled:bool = "isHighContrast || (currentPortSubroute == SC.Ui_windows.ROUTE.CLANS && isBrowserTextureReady)")
	)

	
	
	
	
	

	(block
		(style (flow = "reverse_horizontal"))

		(block
			(bind visible "!isBlurOnTabsDisabled")
			(class $FullsizeAbsolute)

			(element BlurMap
				_blurType = "BLUR_TYPE.LOW"
			)
		)

		(block
			(class $FullsizeAbsolute)
			(style
				(bind alpha "isBlurOnTabsDisabled ? 1 : 0.6")
				(backgroundColor = "PORT_HEADER_BACKGROUND_COLOR")
			)
		)

		
		(block
			(bind visible "isClanTabVisible")

			(block
				(controller $Instance renderer='DockTabButton'
					(bind enabled "isClanTabVisible")
					(args
						_label =		"clanLabel"
						_name =			'DockSubMenuClan'
						_isSelected =	"currentPortSubroute == SC.Ui_windows.ROUTE.CLANS"
						_methods =		"[	{ type: 'inputMapping.onAction', name: 'navigateTo', args: { route: SC.Ui_windows.ROUTE.CLANS ,
																											data: { url: SC.Ui_windows.GUI_URL.CLANS_IN_GAME }} },
											{ type: 'inputMapping.onAction', name: 'featureSeen', args: { featureIndex: 27 } },
											{ type: 'inputMapping.onAction', name: (chainId != SC.Context_guiding_tip.TIP_CHAIN_ID.NONE) ? 'deactivateTipChain' : '', args: { tip_chain_id: chainId } }]"
						_isNewMarker =	"feature_27 == 'new' && !playerHasClanManComponent || playerHasClanManComponent && !isClanWarSeen"
					)
				)
			)

			(controller $Instance renderer='GuidingTipHub'
				(bind enabled "isClanTipVisible")
				(args
					_tipId = "guidingTipId"
					_tipPositioning = "TIP_POSITION_BOTTOM"
					_modalWindowName = 'Dock'
				)
			)
		)
		

		
		(element DockTabButton
			_label =				'IDS_PROFILE'
			_name =					'DockSubMenuProfile'
			_isSelected =			"currentPortSubroute == SC.Ui_windows.ROUTE.PROFILE"
			_methods =				"[ { type: 'inputMapping.onAction', name: 'navigateTo', args: { route: SC.Ui_windows.ROUTE.PROFILE }} ]"
			_newContentCounter =	"newProfileCounter"
			_isNewMarker =			"feature_16 == 'new' && rankSeasonEntity"
		)
		

		
		(block
			(controller $Instance renderer='DockTabButton'
				(bind enabled "isResearchUnlocked")
				(args
					_label =		'IDS_RESEARCH'
					_name =			'DockSubMenuResearch'
					_isSelected =	"currentPortSubroute == SC.Ui_windows.ROUTE.RESEARCH"
					_methods =		"[	{ type: 'inputMapping.onAction', name: 'navigateTo', args: { route: SC.Ui_windows.ROUTE.RESEARCH }},
										{ type: 'inputMapping.onAction', name: 'featureSeen', args: { featureIndex: 17 } }]"
					_isNewMarker =	"isParagonEnabled && isNotSeenParagonInShipTree || feature_17 == 'new'"
				)
			)

			(controller $Instance renderer='GuidingTipHub'
				(bind enabled "isResearchTipVisible && isResearchUnlocked")
				(args
					_tipId = "guidingTipId"
					_tipPositioning = "TIP_POSITION_BOTTOM"
					_modalWindowName = 'Dock'
					_tipChainId = "isParagonEnabled && isNotSeenParagonInShipTree ? SC.Context_guiding_tip.TIP_CHAIN_ID.PARAGONS : null"
					_isHideOnBounds = true
				)
			)
		)
		

		
		(block
			(bind visible "isCamouflagesUnlocked")

			(name = 'camouflagesTabBlock')

			(block
				(controller $Instance renderer='DockTabButton'
					(bind enabled "isCamouflagesUnlocked")
					(args
						_label =				'IDS_EXTERIOR'
						_name =					'DockSubMenuExterior'
						_isSelected =			"currentPortSubroute == SC.Ui_windows.ROUTE.EXTERIOR"
						_methods =				"[	{ type: 'inputMapping.onAction', name: 'navigateTo', args: { route: SC.Ui_windows.ROUTE.EXTERIOR }},
													{ type: 'inputMapping.onAction', name: 'featureSeen', args: { featureIndex: 15 } }]"
						_isDisabled =			"!isAnyShipAvailable"
						_newContentCounter =	"newExteriorsContentCounter"
						_isAttentionMarker =	"isCamouflageExpired"
					)
				)

				(controller $Tooltip
					(bind enabled "isCamouflagesUnlocked && (!isAnyShipAvailable || (isCamouflageExpired && !(currentPortSubroute == SC.Ui_windows.ROUTE.EXTERIOR)))")
					(renderer = 'SimpleStatusTooltip')
					(args
						_unifiedStatus =	"SC.Ui_styles.UNIFIED_STATUS.ATTENTION"
						_text =				"!isAnyShipAvailable	? 'IDS_WARNING_NO_SHIPS_IN_PORT'
																	: 'IDS_WARNING_CAMOUFLAGE_EXPIRED'"
					)
					(macro DEFAULT_TOOLTIP_BEHAVIOUR)
				)
			)

			(controller $Instance renderer='GuidingTipHub'
				(bind enabled "isExteriorTipVisible")
				(args
					_tipId = "guidingTipId"
					_tipPositioning = "TIP_POSITION_BOTTOM"
					_modalWindowName = 'Dock'
				)
			)
		)
		

		
		(block
			(bind visible "isResearchUnlocked")
			(name = 'moduleTabBlock')

			(block
				(controller $Instance renderer='DockTabButton'
					(bind enabled "isResearchUnlocked")
					(args
						_label =				'IDS_MODULES'
						_name =					'DockSubMenuModules'
						_isSelected =			"currentPortSubroute == SC.Ui_windows.ROUTE.MANAGEMENT"
						_methods =				"[	{ type: 'inputMapping.onAction', name: 'navigateTo', args: { route: SC.Ui_windows.ROUTE.MANAGEMENT }},
													{ type: 'inputMapping.onAction', name: 'featureSeen', args: { featureIndex: 17 } }]"
						_isDisabled =			"!isAnyShipAvailable"
						_isNewMarker =			"isNewModulesMarker"
						_isAttentionMarker =	"isSignalsExpired"
					)
				)

				(controller $Tooltip
					(bind enabled "isResearchUnlocked && (!isAnyShipAvailable || isSignalsExpired)")
					(renderer = 'SimpleStatusTooltip')
					(args
						_unifiedStatus =	"SC.Ui_styles.UNIFIED_STATUS.ATTENTION"
						_text =				"!isAnyShipAvailable	? 'IDS_WARNING_NO_SHIPS_IN_PORT'
																	: 'IDS_WARNING_SIGNALS_EXPIRED'"
					)
					(macro DEFAULT_TOOLTIP_BEHAVIOUR)
				)
			)

			(controller $Instance renderer='GuidingTipHub'
				(bind enabled "isManagementTipVisible")
				(args
					_tipId = "guidingTipId"
					_tipPositioning = "TIP_POSITION_BOTTOM"
					_modalWindowName = 'Dock'
				)
			)
		)
		

		
		(block
			(element DockTabButton
				_label = 'IDS_DOCK'
				_name = 'DockSubMenuPort'
				_isSelected = "currentPortSubroute == SC.Ui_windows.ROUTE.MAIN"
				_methods = "[{ type: 'inputMapping.onAction', name: 'navigateTo', args: { route: SC.Ui_windows.ROUTE.MAIN }}]"
			)

			(controller $Instance renderer='GuidingTipHub'
				(bind enabled "isPortTipVisible")
				(args
					_tipId = "guidingTipId"
					_tipPositioning = "TIP_POSITION_BOTTOM"
					_modalWindowName = 'Dock'
				)
			)
		)
		
	)
)