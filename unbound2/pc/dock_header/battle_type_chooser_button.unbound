(def element BattleTypeChooser ()
	(scope
		(macro MOUSE_HANDLER_SCOPE)

		(macro CALCULATE_PORT_HEADER_ELEM_SIDE_PADDING)

		(var isDivision:bool = "getSingleEntity(CC.division) != null")

		(var selfPlayerEntity:dhEntity = "getSingleEntity(CC.accountSelf)")

		(var preBattlePlayerSimpleComponent:dhComponent = "selfPlayerEntity.preBattlePlayerSimple")
		(var isCommander:bool = "preBattlePlayerSimpleComponent.isCommander ?: false" (event "preBattlePlayerSimpleComponent.evIsCommanderChanged"))

		(var battleTypeCollection:dhCollection = "getCollection(CC.battleType).child('selected')")
		(var battleTypeEntity:dhEntity = "battleTypeCollection.length > 0 ? battleTypeCollection[0] : null")

		(var battleTypeEntityId:number = 				"battleTypeEntity.id ?: 0")
		(var battleTypeComponent:dhComponent = 			"battleTypeEntity.battleType")
		(var eventBattleStateComponent:dhComponent = 	"battleTypeEntity.eventBattleState")

		(var battleType:str = 				"battleTypeComponent.type ?: ''" 					(event "battleTypeComponent.evStatusChanged"))
		(var isSelected:bool = 				"battleTypeComponent.selected ?: false" 			(event "battleTypeComponent.evSelectionChanged"))
		(var status:number = 				"battleTypeComponent.status ?: 0" 					(event "battleTypeComponent.evStatusChanged"))
		(var battleTypeGameParamId:number = "battleTypeComponent.battleTypeGameParamId ?: 0")

		(var selectedEventBattleName:str = 	"eventBattleStateComponent.name ?: ''" 				(event "eventBattleStateComponent.evChanged"))

		(var isDisabled:bool = "status == BATTLE_TYPE.DISABLED")

		(var trainingRoomEntity:dhEntity = "getSingleEntity(CC.trainingRoomWindowState)")

		(var isRandomBattle:bool =				"battleType == SC.Common.BATTLE_TYPES.RANDOM_BATTLE")
		(var isCooperativeBattle:bool =			"battleType == SC.Common.BATTLE_TYPES.COOPERATIVE_BATTLE")
		(var isRankedBattle:bool =				"battleType == SC.Common.BATTLE_TYPES.RANKED_BATTLE")
		(var isPVEBattle:bool =					"battleType == SC.Common.BATTLE_TYPES.PVE_BATTLE")
		(var isClanBattle:bool =				"battleType == SC.Common.BATTLE_TYPES.CLAN_BATTLE")
		(var isEventBattle:bool =				"battleType == SC.Common.BATTLE_TYPES.EVENT_BATTLE")
		(var isBrawlBattle:bool =				"battleType == SC.Common.BATTLE_TYPES.BRAWL_BATTLE")
		(var isRatingBattle:bool =				"battleType == SC.Common.BATTLE_TYPES.RATING_BATTLE")
		(var isActiveTournamentBattle:bool = 	"battleType == SC.Common.BATTLE_TYPES.TOURNAMENT_BATTLE")
		(var isActiveTrainingBattle:bool = 		"battleType == SC.Common.BATTLE_TYPES.TRAINING_BATTLE && trainingRoomEntity != null")

		(var isActiveRoomBattle:bool = "isActiveTrainingBattle || isActiveTournamentBattle")
		(var isCommonBattle:bool = "isRandomBattle || isCooperativeBattle")

		(var unseenBattleTypes:dhEntity = "getPrimaryEntity(CC.newContent, SC.Common.CONTENT_CATEGORY.BATTLE_TYPES)")
		(var unseenBattleTypesNewContentComponent:dhComponent = "unseenBattleTypes.newContent")
		(var unseenBattleTypesCount:number = "unseenBattleTypesNewContentComponent.count ?: 0" (event "unseenBattleTypesNewContentComponent.evCountChanged"))

		(var isNew:bool = "!isActiveRoomBattle && unseenBattleTypesCount != 0")

		(var operationEntity:dhEntity = "getPrimaryEntity(CC.operation, battleTypeGameParamId)")
		(var operationComponent:dhComponent = "operationEntity.operation")

		(var operationGPName:str = "operationComponent.gpName ?: ''")
		(var pveOperationCustomIconName:str = "operationComponent.customIconName ?: ''" (event "operationComponent.evStatusChanged"))

		(var battleTypeIcon:str = "	pveOperationCustomIconName	? pveOperationCustomIconName :
									isEventBattle				? selectedEventBattleName
																: battleType")

		(var pveBattleButtonText:str = "operationGPName ? tr('IDS_' + toUpper(operationGPName) + '_NAME') : ''")
		(var isTournamentRoomInfo:bool = "getSingleComponent(CC.tournamentRoomInfo) != null")

		
		(var battleTypeLabel:str = "isPVEBattle									? pveBattleButtonText :
									isEventBattle && selectedEventBattleName	? tr(toUpper('IDS_' + selectedEventBattleName)) :
									isTournamentRoomInfo						? 'IDS_TOURNAMENTBATTLE' :
									battleType									? tr(toUpper('IDS_' + battleType))
																				: ''")

		(var battleTypeDescription:str = "isActiveRoomBattle ? 'IDS_RETURN_TO_TRAINING_ROOM' : 'IDS_CHOOSE_BATTLE_TYPE'")
		
		(var isBtnChooserEnabled:bool = "isCommander || !isDivision")

		(struct pvpIntroNewTip =				PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.PVP_INTRO"))
		(struct repeatPvpIntroNewTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.PVP_INTRO_REPEAT"))
		(struct pveIntroNewTip =				PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.PVE_INTRO"))
		(struct pveIntroRepeatNewTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.PVE_INTRO_REPEAT"))
		(struct competitiveIntroNewTip =		PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.COMPETITIVE_INTRO"))
		(struct competitiveIntroRepeatNewTip =	PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.COMPETITIVE_INTRO_REPEAT"))
		(struct battleChooserBlockedTip =		PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.BATTLE_TYPE_BLOCKED_DIVISION"))
		(struct trialsOnboardingIntroNewTip =	PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.TRIALS_ONBOARDING_INTRO"))

		(var newTipId:number = "pvpIntroNewTip.isActive					? SC.Context_guiding_tip.TIP_TYPE.PVP_INTRO :
								repeatPvpIntroNewTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.PVP_INTRO_REPEAT :
								pveIntroNewTip.isActive					? SC.Context_guiding_tip.TIP_TYPE.PVE_INTRO :
								pveIntroRepeatNewTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.PVE_INTRO_REPEAT :
								competitiveIntroNewTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.COMPETITIVE_INTRO :
								competitiveIntroRepeatNewTip.isActive	? SC.Context_guiding_tip.TIP_TYPE.COMPETITIVE_INTRO_REPEAT :
								battleChooserBlockedTip.isActive		? SC.Context_guiding_tip.TIP_TYPE.BATTLE_TYPE_BLOCKED_DIVISION :
								trialsOnboardingIntroNewTip.isActive	? SC.Context_guiding_tip.TIP_TYPE.TRIALS_ONBOARDING_INTRO
																		: SC.Context_guiding_tip.TIP_TYPE.NONE")

		(var isNewTipVisible:bool = "newTipId != SC.Context_guiding_tip.TIP_TYPE.NONE")

		(var state:number = "	!isBtnChooserEnabled	? SC.Ui_styles.BUTTON_STATE.DISABLED :
								mouseDown				? SC.Ui_styles.BUTTON_STATE.DOWN :
								rollOver				? SC.Ui_styles.BUTTON_STATE.OVER
														: SC.Ui_styles.BUTTON_STATE.UP")

		(var iconAlpha:number = "PORT_HEADER_BATTLE_TYPE_CHOOSER_ICON_ALPHA[state]")
		(var mainLabelAlpha:number = "PORT_HEADER_MAIN_TEXT_ALPHA[state]")
		(var subTextAlpha:number = "PORT_HEADER_SUBTEXT_ALPHA[state]")

		
		(var ctRollOver:dict = "{ redMultiplier: 1,	greenMultiplier: 1,	blueMultiplier: 1,	alphaMultiplier: 1,
								  redOffset: 15,	greenOffset: 15,	blueOffset: 15,		alphaOffset: 0 }")
		(var ctDown:dict = "	{ redMultiplier: 1,	greenMultiplier: 1,	blueMultiplier: 1,	alphaMultiplier: 1,
								  redOffset: 0,		greenOffset: 0,		blueOffset: 0,		alphaOffset: 0 }")
		

		(var battleTypeTooltipRenderer:str = "	isEventBattle	? 'EventBattleTypeTooltip' :
												isRankedBattle	? 'RankedBattleTypeTooltip' :
												isClanBattle	? 'ClanBattleTypeTooltip' :
												isPVEBattle		? 'PVEOperationTooltip' :
												isBrawlBattle	? 'BrawlBattleTypeTooltip' :
												isRatingBattle	? 'RatingBattleTypeTooltip' :
												isCommonBattle	? 'CommonBattleTypeTooltip'
																: 'CommonBattleTypeTooltip'")
	)

	
	(style
		(bind paddingLeft "-PORT_HEADER_CONTROL_DEFAULT_PADDING")
		(bind paddingRight "-PORT_HEADER_CONTROL_DEFAULT_PADDING")
	)

	(block
		(class $FullsizeAbsolute)
		(style (backgroundColor = "NO_COLOR"))

		(element DockHeaderControlBackground
			_state = "state"
		)

		(controller $Tooltip
			(bind renderer "battleTypeTooltipRenderer")
			(bind enabled "isBtnChooserEnabled")
			(args
				_battleTypeEntityId = "battleTypeEntityId"
				_isFromPort = true
			)
			(macro DEFAULT_TOOLTIP_BEHAVIOUR)
		)

		(controller $Tooltip
			(renderer = 'SimpleStatusTooltip')
			(bind enabled "!isBtnChooserEnabled")
			(args
				_text = 'IDS_STARTBATTLE_LOCK_REASON_NOT_COMMANDER_DIVISION'
				_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.WARNING"
			)
			(macro DEFAULT_TOOLTIP_BEHAVIOUR)
		)

		(macro MOUSE_HANDLER
			_enabled = "isBtnChooserEnabled"
			_soundSet = "'button_battle_type'"
			_methods = "isBtnChooserEnabled && isActiveRoomBattle		? [{ type: 'inputMapping.onAction', name: 'navigateTo', args: { route: SC.Ui_windows.ROUTE.TRAINING_ROOM_MAIN } }] :
						isBtnChooserEnabled								? [{ type: 'inputMapping.onAction', name: 'navigateTo', args: { route: SC.Ui_windows.ROUTE.BATTLE_TYPE_CHOOSER_SHOW } }]
																		: []"
		)
	)

	(block
		(style
			(hitTest = false)
			(flow = "horizontal")
			(height = 60px)
			(bind paddingLeft "PORT_HEADER_CONTROL_DEFAULT_PADDING")
			(bind paddingRight "PORT_HEADER_CONTROL_DEFAULT_PADDING")
		)

		(name = 'ButtonDock')

		(block
			(bind colorTransform "	mouseDown	? ctDown :
									rollOver	? ctRollOver
												: CT_NONE")
			(style
				(marginTop = "SXS")
				(marginRight = "S")
				(width = 35px)
				(height = 35px)
				(marginLeft = -5px)
				(bind backgroundImage "isDisabled	? 'url:../service_kit/battle_types/' + battleTypeIcon + '_disabled_small.png'
													: 'url:../service_kit/battle_types/' + battleTypeIcon + '_small.png'")
			)

			(bind name "isPVEBattle ? 'operationType_' + operationGPName : ''")
		)

		(block
			(style
				(align = "middle")
				(height = 100%)
			)

			(block
				(tf
					(name = 'battleTypeChooserBtn')

					(class $TextDefaultBold17NM)
					(style
						(wordWrap = false)
						(alpha = "mainLabelAlpha")
					)

					(bind text "battleTypeLabel")

					(macro DEFAULT_CONTROL_STATE_ANIMATION_ALPHA
						_trigger	= "state"
						_alpha		= "mainLabelAlpha"
					)
				)

				(block
					(macro DEFAULT_CONTROL_MARKER_ANIMATION "isNew")
					(style
						(position = "absolute")
						(right = -47px)
						(top = "-S")
						(hitTest = false)
					)

					(element MarkerNew)
				)
			)

			(tf
				(class $TextDefault13NM)
				(style
					(marginTop = "S")
					(wordWrap = false)
					(bind alpha "subTextAlpha" watch=false)
				)

				(bind text "battleTypeDescription")

				(macro DEFAULT_CONTROL_STATE_ANIMATION_ALPHA
					_trigger	= "state"
					_alpha		= "subTextAlpha"
				)
			)

			(block
				(style (width = 100%))

				(controller $Instance renderer='GuidingTipHub'
					(bind enabled "isNewTipVisible")
					(args
						_tipId =			"newTipId"
						_tipPositioning =	"TIP_POSITION_BOTTOM"
						_offsetY =			"battleChooserBlockedTip.isActive ? 0 : 5px"
						_offsetX =			"battleChooserBlockedTip.isActive ? XXL : 0"
						_noArrow =			"battleChooserBlockedTip.isActive"
						_noPointer =		"battleChooserBlockedTip.isActive"
						_modalWindowName =	'Dock'
					)
				)
			)
		)
	)
)