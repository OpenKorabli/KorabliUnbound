


(def constant DOCK_HEADER_ELEMS_WIDTH {
	SETTINGS: 48,
	DOGTAG: 60,
	PORT_LARGEST: 183,
	WANT_IN_DIVISION: 139,
	START_BATTLE_BTN: 132
})

(def constant ACCOUNT_BUTTON_ELEMS_WIDTH {
	ARROW: 10,
	RANK_ICON: 24,
	REFERRAL_ACTIVE_ICON: 24
})

(def element ButtonAccount ()
	(scope
		(event evAccountInfotipItemClicked)

		(macro MOUSE_HANDLER_SCOPE)
		(macro PULL_SELF_PLAYER_SCOPE)

		(var accountInfotipIsVisible:bool = "false")

		(var abuseStatus:number =	"selfPlayerEntity	? selfPlayerEntity.accountInfo.abuseStatus	: 0"	(event "selfPlayerEntity.accountInfo.evAbuseStatusChanged"))
		(var accountLevel:number =	"selfPlayerEntity	? selfPlayerEntity.accountLevel.level		: 0"	(event "selfPlayerEntity.accountLevel.evLevelChanged"))
		(var rank:number =			"selfPlayerEntity	? selfPlayerEntity.accountRank.rank			: 0"	(event "selfPlayerEntity.accountRank.evChanged"))
		(var rankLeague:number =	"selfPlayerEntity	? selfPlayerEntity.accountRank.league		: 0"	(event "selfPlayerEntity.accountRank.evChanged"))

		(var rating:number =		"selfPlayerEntity	? selfPlayerEntity.accountRating.leagueProgress	: 1"						(event "selfPlayerEntity.accountRating.evChanged"))
		(var ratingLeague:str =		"selfPlayerEntity	? selfPlayerEntity.accountRating.leagueName		: RATING_LEAGUE_NAME_NONE"	(event "selfPlayerEntity.accountRating.evChanged"))

		(var realmConstantsEntity:gfx = "$datahub.getSingleEntity(CC.realmConstants)")
		(var realmConstantsComponent:gfx = "realmConstantsEntity ? realmConstantsEntity.realmConstants : null")
		(var isInviteRefferalFriendUIAvailable:bool = "realmConstantsComponent ? realmConstantsComponent.isInviteRefferalFriendUIAvailable : false")


		(var resourceWatcher:gfx = "$datahub.getFirstWatcher(CC.accountResource)")
		(var resourceEntity:gfx = "resourceWatcher.entity" (event "resourceWatcher.event"))
		(var resourceComponent:gfx = "resourceEntity ? resourceEntity.accountResource : null")

		(var premiumType:number =		"resourceComponent ? resourceComponent.activePremiumType : 0"		(event "resourceComponent.evActivePremiumTypeChanged"))
		(var premBefore:number =		"resourceComponent ? resourceComponent.premBefore : 0"				(event "resourceComponent.evChangedPrem"))
		(var mkPremBefore:number =		"resourceComponent ? resourceComponent.wowsPremBefore : 0"			(event "resourceComponent.evChangedPrem"))
		(var hasReferralPoints:bool =	"resourceComponent ? resourceComponent.hasReferralPoints : false"	(event "resourceComponent.evChangedHasReferralPoints"))

		(var isPremiumAccount:bool = "premiumType != SC.Common.PREMIUM_TYPE.NONE")
		(var activePremTime:number = "premiumType == SC.Common.PREMIUM_TYPE.WOWS ? mkPremBefore : premBefore")

		(macro SERVER_TIME_SCOPE)
		(var timeLeft:number = "floor(activePremTime - serverTime)")
		(var timeLeftFormatted:str = "formatTime(timeLeft, 'HIGHESTDAYS')")

		(var accountText:str = "isPremiumAccount	? tr('IDS_ACCOUNT_PREMIUM') + ' ' + timeLeftFormatted
													: 'IDS_ACCOUNT_DEFAULT'")

		(var isSyncedWithWallet:bool =	"resourceComponent ? resourceComponent.isSyncedWithWallet : false"	(event "resourceComponent.evChangedIsSyncedWithWallet"))
		(var walletAvailable:bool =		"resourceComponent ? resourceComponent.walletStatus : false"		(event "resourceComponent.evChangedWalletStatus"))
		(var isAbuseStatusConfirmed:bool = "abuseStatus > 0")

		
		(macro FEATURES "23")				

		(var referralCollection:gfx = "$datahub.getCollection(CC.referral)")
		(var referralCollectionItems:array = "referralCollection ? referralCollection.items : []" (event "referralCollection.evAdded") (event "referralCollection.evRemoved"))
		(var isRefSysParticipant:bool = "referralCollectionItems.length > 0")

		(var accountCompletionEntity:gfx = "$datahub.getSingleEntity(CC.accountCompletion)")
		(var isAccountCompletionAvailable:bool = "accountCompletionEntity ? accountCompletionEntity.accountCompletion.isAvailable : false")
		(var steamLoginEntity:gfx = "$datahub.getSingleEntity(CC.steamLoginData)")
		(var steamLoginEmailBound:bool = "steamLoginEntity ? steamLoginEntity.steamLoginData.emailBind : false" (event "steamLoginEntity.steamLoginData.evUpdate"))

		(var isAccountNotCompletedMarkerVisible:bool = "isAccountCompletionAvailable && !steamLoginEmailBound")

		(var almanacStateEntity:dhEntity =			"getSingleEntity(CC.almanacState)")
		(var almanacStateComponent:dhComponent =	"almanacStateEntity.almanacState")
		(var currentStage:number =					"almanacStateComponent.currentStage" (event "almanacStateComponent.evChanged"))
		(var almanacStageStateCurrent:dhComponent =	"getPrimaryEntity(CC.almanacStageState, currentStage).almanacStageState")
		(var hasAlmanacReward:bool =				"almanacStageStateCurrent && !almanacStageStateCurrent.isLooted" (event "almanacStageStateCurrent.evStageUpdated"))

		(var userTaskComponent:dhComponent = "getSingleComponent(CC.userTask)")
		(var currentUserTaskFlags:array = "userTaskComponent.flags ?: []" (event "userTaskComponent.evFlagChanged"))

		(var isReferralMenuItemVisible:bool = "isInviteRefferalFriendUIAvailable && (accountLevel >= SC.Ui_common.AL_MENU_FEATURES_VISIBILITY.REFERRAL || isRefSysParticipant)")
		(var isReferralNotSeen:bool = "isReferralMenuItemVisible && currentUserTaskFlags[BINARY_SHIFT_MAP[SC.Common.USER_TASKS_FLAGS.CONTROL_SEEN_PLAYTOGETHER]] == 0")
		(var isBuyPremiumNotSeen:bool = "	currentUserTaskFlags[BINARY_SHIFT_MAP[SC.Common.USER_TASKS_FLAGS.KNOWS_ABOUT_WOWS_PREM]] == 0 &&
											accountLevel >= SC.Ui_common.AL_MENU_FEATURES_VISIBILITY.BUY_PREMIUM")
		(var isWarehouseNotSeen:bool = "feature_23 == 'new'")
		(var isAlmanacNotSeen:bool = "currentUserTaskFlags[BINARY_SHIFT_MAP[SC.Common.USER_TASKS_FLAGS.KNOWS_ABOUT_ALMANAC]] == 0 && almanacStateEntity.hasComponent(CC.newItem)")

		(var isMarkerNewVisible:bool = "isAccountNotCompletedMarkerVisible || isReferralNotSeen || isBuyPremiumNotSeen || isWarehouseNotSeen || isAlmanacNotSeen")
		(var isRefPointsRewardVisible:bool = "hasReferralPoints && !isMarkerNewVisible")

		(var ingamePortalEntity:dhEntity = "getSingleEntity(CC.ingamePortal)")
		(var hasRewardNews:bool = "ingamePortalEntity.ingamePortal.isGiftAwaiting" (event "ingamePortalEntity.ingamePortal.evUpdate"))
		(var isRewardNewsVisible:bool = "hasRewardNews && !isMarkerNewVisible")

		(var maxAccountSublabelAlpha:number = "isPremiumAccount ? 1 : TA")
		

		(var state:number = "	accountInfotipIsVisible	? SC.Ui_styles.BUTTON_STATE.SELECTED :
								mouseDown				? SC.Ui_styles.BUTTON_STATE.DOWN :
								rollOver				? SC.Ui_styles.BUTTON_STATE.OVER
														: SC.Ui_styles.BUTTON_STATE.UP")

		(var mainLabelAlpha:number = "	abuseStatus == SC.Common.ABUSE_STATUS.CONFIRMED ||
										abuseStatus == SC.Common.ABUSE_STATUS.SUSPECT ||
										isPremiumAccount || hasAlmanacReward				? PORT_HEADER_MAIN_TEXT_COLORIZED_ALPHA[state]
																							: PORT_HEADER_MAIN_TEXT_ALPHA[state]")
		(var subTextAlpha:number = "isPremiumAccount	? PORT_HEADER_SUBTEXT_COLORIZED_ALPHA[state]
														: PORT_HEADER_SUBTEXT_ALPHA[state]")

		
		(var ctRollOver:dict = "{ redMultiplier: 1,	greenMultiplier: 1,	blueMultiplier: 1,	alphaMultiplier: 1,
								  redOffset: 15,	greenOffset: 15,	blueOffset: 15,		alphaOffset: 0 }")
		(var ctDown:dict = "	{ redMultiplier: 1,	greenMultiplier: 1,	blueMultiplier: 1,	alphaMultiplier: 1,
								  redOffset: -30,	greenOffset: -30,	blueOffset: -30,	alphaOffset: 0 }")
		

		
		
		
		(macro CALCULATE_PORT_HEADER_ELEM_SIDE_PADDING)

		(var rankIconWidthWithMargins:number =				"rank > 0					? ACCOUNT_BUTTON_ELEMS_WIDTH.RANK_ICON + XS : 0")
		(var referralActiveIconWidthWithMargins:number =	"isRefPointsRewardVisible	? ACCOUNT_BUTTON_ELEMS_WIDTH.REFERRAL_ACTIVE_ICON + XXS + XXS : 0")

		
		(var maxTotalAccountButtonWidth:number = "(stageWidth / 2) - ((DOCK_HEADER_ELEMS_WIDTH.SETTINGS + PORT_HEADER_SETTINGS_AND_DOGTAG_GAP) + DOCK_HEADER_ELEMS_WIDTH.DOGTAG + (DOCK_HEADER_ELEMS_WIDTH.PORT_LARGEST + S) + (DOCK_HEADER_ELEMS_WIDTH.WANT_IN_DIVISION + S) + (DOCK_HEADER_ELEMS_WIDTH.START_BATTLE_BTN / 2) + PORT_HEADER_START_BATTLE_BTN_SIDE_MARGIN)")
		
		(var minTotalAccountButtonWidth:number = "111 + (2 * PORT_HEADER_CONTROL_DEFAULT_PADDING) + (ACCOUNT_BUTTON_ELEMS_WIDTH.ARROW + SXS)")
		(var accountButtonWidth:number = "maxTotalAccountButtonWidth < minTotalAccountButtonWidth	? minTotalAccountButtonWidth
																									: maxTotalAccountButtonWidth")

		(var sideMarginFor17NMText:number = "3")
		(var maxNicknameTextWidth:number = "accountButtonWidth - ((2 * PORT_HEADER_CONTROL_DEFAULT_PADDING) + (ACCOUNT_BUTTON_ELEMS_WIDTH.ARROW + SXS) + rankIconWidthWithMargins + referralActiveIconWidthWithMargins) + (2 * sideMarginFor17NMText)")
		

		(struct webStorageIntroNewTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.WEB_STORAGE_INTRO"))
		(struct webStorageIntroRepeatNewTip =	PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.WEB_STORAGE_INTRO_REPEAT"))
		(struct inviteFriendNewTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.INVITE_DOCK_USER_MENU"))

		(var chainId:number = "	webStorageIntroNewTip.isActive			? SC.Context_guiding_tip.TIP_CHAIN_ID.WEB_STORAGE :
								webStorageIntroRepeatNewTip.isActive	? SC.Context_guiding_tip.TIP_CHAIN_ID.WEB_STORAGE_REPEAT :
								inviteFriendNewTip.isActive				? SC.Context_guiding_tip.TIP_CHAIN_ID.INVITE_FRIEND
																		: SC.Context_guiding_tip.TIP_CHAIN_ID.NONE")

		(var tipId:number = "	webStorageIntroNewTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.WEB_STORAGE_INTRO :
								webStorageIntroRepeatNewTip.isActive	? SC.Context_guiding_tip.TIP_TYPE.WEB_STORAGE_INTRO_REPEAT :
								inviteFriendNewTip.isActive				? SC.Context_guiding_tip.TIP_TYPE.INVITE_DOCK_USER_MENU
																		: SC.Context_guiding_tip.TIP_TYPE.NONE")

		(var isNewTipVisible:bool = "!accountInfotipIsVisible && tipId != SC.Context_guiding_tip.TIP_TYPE.NONE")
	)
	(name = 'buttonAccount')

	(style (height = 60px) )

	(block
		(class $FullsizeAbsolute)
		(style (backgroundColor = "NO_COLOR"))

		(element DockHeaderControlBackground
			_state = "state"
		)

		(controller $Tooltip
			(bind enabled "isAbuseStatusConfirmed")
			(renderer = 'AbuseStatusProfileTooltip')
			(args
				_mouseInstructionText = 'IDS_CHOOSE_ACCOUNT_ACTION'
			)
			(macro DEFAULT_TOOLTIP_BEHAVIOUR)
		)

		(controller $Tooltip
			(bind enabled "!isAbuseStatusConfirmed")
			(renderer = 'DescriptionStatusLineTooltip')
			(args
				_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT"
				_statusText = 'IDS_CHOOSE_ACCOUNT_ACTION'
				_descriptionText = 'IDS_TOOLTIP_ACCOUNT_TYPE'
			)
			(macro DEFAULT_TOOLTIP_BEHAVIOUR)
		)

		(controller $Tooltip
			(renderer = 'AccountInfotip')
			(macro DEFAULT_INFOTIP_BEHAVIOUR "1")
			(macro TOOLTIP_HIDE_ON_EVENT "evAccountInfotipItemClicked")

			(bind accountInfotipIsVisible "true" init=false on='evStartShow')
			(bind accountInfotipIsVisible "false" init=false on='evHide')

			(offset = "{ x: 0px, y: XS }")
			(align = "bottom|center")
			(position = "border")
			(screenBoundsOffset = "{ left: M, top: M, right: M, bottom: M }")
		)

		(macro MOUSE_HANDLER
			_soundSet = "'dropdown'"
			_methods = "[{ type: 'inputMapping.onAction', name: (chainId != SC.Context_guiding_tip.TIP_CHAIN_ID.NONE) ? 'setNextTip' : '', args: { tip_chain_id: chainId } }]"
		)
	)

	
	(hblock
		(style
			(hitTest = false)
			(align = "middle")
			(height = 100%)
			(bind paddingLeft "PORT_HEADER_CONTROL_DEFAULT_PADDING")
			(bind paddingRight "PORT_HEADER_CONTROL_DEFAULT_PADDING")
		)

		(block
			(style
				(align = "middle")
				(height = 100%)
				(marginRight = "SXS")
			)

			(hblock
				
				(block
					(bind visible "rank > 0")

					(bind colorTransform "	mouseDown	? ctDown :
											rollOver	? ctRollOver
														: CT_NONE")
					(style
						(height = 15px)
						(align = "middle")
						(marginLeft = -3px)
						(marginRight = "XS")
					)

					(controller $Instance renderer='IconRankSmall'
						(bind enabled "rank > 0")
						(args
							_league	= "rankLeague"
							_rank	= "rank"
						)
					)
				)
				

				
				(block
					(bind visible "ratingLeague != RATING_LEAGUE_NAME_NONE")

					(bind colorTransform "	mouseDown	? ctDown :
											rollOver	? ctRollOver
														: CT_NONE")
					(style
						(height = 15px)
						(align = "middle")
						(marginLeft = -3px)
						(marginRight = "XS")
					)

					(controller $Instance renderer='RatingIconSmall'
						(bind enabled "ratingLeague != RATING_LEAGUE_NAME_NONE")
						(args
							_rating = "rating"
							_leagueName = "ratingLeague"
						)
					)
				)
				

				
				(block
					(tf
						(name = 'playerName_button_account')

						(class $TextDefaultBold17NM)
						(style
							(bind maxWidth "maxNicknameTextWidth")
							(wordWrap = false)
							(elideMode = true)
							(noTranslate = true)
							(bind textColor "	abuseStatus == SC.Common.ABUSE_STATUS.CONFIRMED	? SC.Ui_styles.SERVICE_COLORS.RED :
												abuseStatus == SC.Common.ABUSE_STATUS.SUSPECT	? SC.Ui_styles.SERVICE_COLORS.PINK :
												isPremiumAccount || hasAlmanacReward			? SC.Ui_styles.SERVICE_COLORS.YELLOW
																								: SC.Ui_styles.SERVICE_COLORS.WHITE")
							(bind alpha "mainLabelAlpha" watch=false)
						)

						(bind text "selfPlayerName")

						(macro DEFAULT_CONTROL_STATE_ANIMATION_ALPHA
							_trigger	= "state"
							_alpha		= "mainLabelAlpha"
						)
					)

					(block
						(macro DEFAULT_CONTROL_MARKER_ANIMATION "isMarkerNewVisible")
						(style
							(position = "absolute")
							(right = -47px)
							(top = "-S")
							(hitTest = false)
						)

						(element MarkerNew)
					)
				)
				

				
				(block
					(bind visible "isRefPointsRewardVisible || isRewardNewsVisible")

					(style
						(marginLeft = "XXS")
						(marginRight = "XXS")
						(width = 19px)
						(height = 8px)
					)

					(block
						(style (position = "absolute") (left = 3px) (top = -3px))
						(controller $Instance renderer='MarkerReward'
							(bind enabled "isRefPointsRewardVisible || isRewardNewsVisible")
							(args
								_iconReward = "isRefPointsRewardVisible	? 'url:../service_kit/unified_status_icons/icon_brotherhood_reward.png'
																        : 'url:../service_kit/unified_status_icons/icon_reward_available.png'"
							)
						)
					)
				)
				
			)


			(tf
				(name = 'label_button_account')

				(class $TextDefault13NM)
				(style
					(marginTop = "S")
					(wordWrap = false)
					(bind textColor "isPremiumAccount ? SC.Ui_styles.SERVICE_COLORS.YELLOW : SC.Ui_styles.SERVICE_COLORS.WHITE")
					(bind alpha "subTextAlpha" watch=false)
				)

				(bind text "accountText")

				(macro DEFAULT_CONTROL_STATE_ANIMATION_ALPHA
					_trigger	= "state"
					_alpha		= "subTextAlpha"
				)
			)
		)

		(element DockHeaderControlArrow
			_state = "state"
		)
	)
	

	(block
		(style (width = 100%))
		(controller $Instance renderer='GuidingTipHub'
			(bind enabled "isNewTipVisible")
			(args
				_tipId =			"tipId"
				_tipPositioning =	"TIP_POSITION_BOTTOM"
				_modalWindowName =	'Dock'
			)
		)
	)
)

(def element IconRankSmall (_league:number, _rank:number)
	(style
		(width = "ACCOUNT_BUTTON_ELEMS_WIDTH.RANK_ICON")
		(height = "ACCOUNT_BUTTON_ELEMS_WIDTH.RANK_ICON")
		(backgroundSize = "cover")
		(bind backgroundImage "_league > 0	? 'url:../ranks/numbers_small/league_' + _league + '_' + _rank + '.png'
											: ''")
	)
)
