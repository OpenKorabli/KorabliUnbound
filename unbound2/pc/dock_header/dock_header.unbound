
(def macro CALCULATE_PORT_HEADER_ELEM_SIDE_PADDING ()
	(var stageComponent:gfx = "$datahub.getSingleEntity(CC.stage).stage")
	(var stageWidth:number = "stageComponent.width" (event "stageComponent.evStageSizeChanged"))
	(var PORT_HEADER_CONTROL_DEFAULT_PADDING:number = "S + ((stageWidth - 1280) * (S / (1920 - 1280)))")
)

(def constant DOCK_HEADER_HEIGHT 60)

(def constant PORT_HEADER_CONTROL_BACKGROUND_COLOR 0xFFFFFFFF)
(def constant PORT_HEADER_BACKGROUND_COLOR 0xFF262F40)

(def constant PORT_HEADER_START_BATTLE_BTN_SIDE_MARGIN 8)
(def constant PORT_HEADER_SETTINGS_AND_DOGTAG_GAP 4)

(def constant PORT_HEADER_CONTROL_BACKGROUND_ALPHA {
	SC.Ui_styles.BUTTON_STATE.DISABLED	: 0,
	SC.Ui_styles.BUTTON_STATE.SELECTED	: 0.05,
	SC.Ui_styles.BUTTON_STATE.DOWN		: 0.05,
	SC.Ui_styles.BUTTON_STATE.OVER		: 0.1,
	SC.Ui_styles.BUTTON_STATE.UP		: 0
})

(def constant PORT_HEADER_MAIN_TEXT_ALPHA {
	SC.Ui_styles.BUTTON_STATE.DISABLED	: 0.2,
	SC.Ui_styles.BUTTON_STATE.SELECTED	: 0.5,
	SC.Ui_styles.BUTTON_STATE.DOWN		: 0.4,
	SC.Ui_styles.BUTTON_STATE.OVER		: "TA",
	SC.Ui_styles.BUTTON_STATE.UP		: "TC"
})

(def constant PORT_HEADER_SUBTEXT_ALPHA {
	SC.Ui_styles.BUTTON_STATE.DISABLED	: 0.2,
	SC.Ui_styles.BUTTON_STATE.SELECTED	: 0.4,
	SC.Ui_styles.BUTTON_STATE.DOWN		: 0.32,
	SC.Ui_styles.BUTTON_STATE.OVER		: "TC",
	SC.Ui_styles.BUTTON_STATE.UP		: 0.6
})

(def constant PORT_HEADER_MAIN_TEXT_COLORIZED_ALPHA {
	SC.Ui_styles.BUTTON_STATE.DISABLED	: 0.2,
	SC.Ui_styles.BUTTON_STATE.SELECTED	: "TA",
	SC.Ui_styles.BUTTON_STATE.DOWN		: 0.7,
	SC.Ui_styles.BUTTON_STATE.OVER		: 1,
	SC.Ui_styles.BUTTON_STATE.UP		: 1
})

(def constant PORT_HEADER_SUBTEXT_COLORIZED_ALPHA {
	SC.Ui_styles.BUTTON_STATE.DISABLED	: 0.4,
	SC.Ui_styles.BUTTON_STATE.SELECTED	: 0.7,
	SC.Ui_styles.BUTTON_STATE.DOWN		: 0.6,
	SC.Ui_styles.BUTTON_STATE.OVER		: 1,
	SC.Ui_styles.BUTTON_STATE.UP		: 1
})

(def constant PORT_HEADER_BATTLE_TYPE_CHOOSER_ICON_ALPHA {
	SC.Ui_styles.BUTTON_STATE.DISABLED	: 0.5,
	SC.Ui_styles.BUTTON_STATE.SELECTED	: 0.7,
	SC.Ui_styles.BUTTON_STATE.DOWN		: 0.7,
	SC.Ui_styles.BUTTON_STATE.OVER		: 1,
	SC.Ui_styles.BUTTON_STATE.UP		: 0.85
})

(def constant BATTLE_TYPE {
	AVAILABLE:	0,
	INACTIVE:	1,
	DISABLED:	3
})

(def element DockHeaderControlBackground (_state:number)
	(scope
		(var backgroundAlpha:number = "PORT_HEADER_CONTROL_BACKGROUND_ALPHA[_state]")
	)

	(class $FullsizeAbsolute)
	(style
		(hitTest = false)
		(backgroundColor = "PORT_HEADER_CONTROL_BACKGROUND_COLOR")
		(bind alpha "PORT_HEADER_CONTROL_BACKGROUND_ALPHA[_state]" watch=false)
	)

	(macro DEFAULT_CONTROL_STATE_ANIMATION_ALPHA
		_trigger	= "_state"
		_alpha		= "backgroundAlpha"
	)
)

(def element DockHeaderControlArrow (_state:number)
	(scope
		(var arrowAlpha:number = "ITEM_CHOOSER_ARROW_ALPHA[_state]")
	)

	(style
		(hitTest = false)
		(width = 10px)
		(height = "DOCK_HEADER_HEIGHT")
	)

	(block
		(style
			(position = "absolute")
			(top = 22px)
			(left = -3px)
			(width = 16px)
			(height = 16px)
			(bind alpha "arrowAlpha" watch=false)
			(backgroundImage = 'url:../service_kit/buttons/navigate_arrow/down.png')
		)

		(macro DEFAULT_CONTROL_STATE_ANIMATION_ALPHA
			_trigger	= "_state"
			_alpha		= "arrowAlpha"
		)
	)
)

(def element DockHeader ()
	(scope
		(macro MOUSE_HANDLER_SCOPE _prefix = "'centralBtn_'")
		(macro HIGH_CONTRAST_DATA_SCOPE)

		(macro CALCULATE_PORT_HEADER_ELEM_SIDE_PADDING)

		(macro PULL_ROUTE _nodeId = "SC.Ui_windows.ROUTE.CLANS" _fieldIsActive = "'isInClanBase'")

		(var isDivision:bool = "getSingleEntity(CC.division) != null")
		(var selfPlayerEntity:dhEntity = "getSingleEntity(CC.accountSelf)")
		(var preBattlePlayerSimpleComponent:dhComponent = "selfPlayerEntity.preBattlePlayerSimple")
		(var isSelfPlayerCommander:bool = "preBattlePlayerSimpleComponent.isCommander" (event "preBattlePlayerSimpleComponent.evIsCommanderChanged"))

		(var isHeaderTransparent:bool = "!isInClanBase && !isHighContrast")

		(struct repeatFinalShipNewTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.RESEARCH_FINAL_REPEAT"))
		(struct crewBlockedDivisionTip =		PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.CREW_BLOCKED_DIV_READY"))
		(struct crewBlockedLockedTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.CREW_BLOCKED_BATTLE"))
		(struct researchFinalInBattleTip =		PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.RESEARCH_FINAL_IN_BATTLE"))
		(struct continuousBattleEnterTip =		PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.CONTINUOUS_BATTLE_ENTER"))
		(struct firstBattleTip =				PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.FIRST_BATTLE"))

		(var newTipId:number = "firstBattleTip.isActive				? SC.Context_guiding_tip.TIP_TYPE.FIRST_BATTLE :
								repeatFinalShipNewTip.isActive		? SC.Context_guiding_tip.TIP_TYPE.RESEARCH_FINAL_REPEAT :
								crewBlockedDivisionTip.isActive		? SC.Context_guiding_tip.TIP_TYPE.CREW_BLOCKED_DIV_READY :
								crewBlockedLockedTip.isActive		? SC.Context_guiding_tip.TIP_TYPE.CREW_BLOCKED_BATTLE :
								researchFinalInBattleTip.isActive	? SC.Context_guiding_tip.TIP_TYPE.RESEARCH_FINAL_IN_BATTLE :
								continuousBattleEnterTip.isActive	? SC.Context_guiding_tip.TIP_TYPE.CONTINUOUS_BATTLE_ENTER
																	: SC.Context_guiding_tip.TIP_TYPE.NONE")

		(var hasFinishButton:bool = "isIn(newTipId, [SC.Context_guiding_tip.TIP_TYPE.RESEARCH_FINAL_REPEAT])")
		(var isUnderStartButtonTips:bool = "isIn(newTipId, [SC.Context_guiding_tip.TIP_TYPE.RESEARCH_FINAL_IN_BATTLE,
															SC.Context_guiding_tip.TIP_TYPE.CONTINUOUS_BATTLE_ENTER,
															SC.Context_guiding_tip.TIP_TYPE.FIRST_BATTLE])")

		(var battleTypeCollection:dhCollection = "getCollection(CC.battleType).child('selected')")
		(var battleTypeEntity:dhEntity = "battleTypeCollection.length > 0 ? battleTypeCollection[0] : null")
		(var battleTypeComponent:dhComponent = "battleTypeEntity.battleType")

		(var battleType:str = "battleTypeComponent.type ?: ''" (event "battleTypeComponent.evStatusChanged"))

		(var trainingRoomEntity:dhEntity = "getSingleEntity(CC.trainingRoomWindowState)")

		(var isActiveTrainingBattle:bool = "trainingRoomEntity != null && battleType == SC.Common.BATTLE_TYPES.TRAINING_BATTLE")
		(var isActiveTournamentBattle:bool = "battleType == SC.Common.BATTLE_TYPES.TOURNAMENT_BATTLE")
		(var isActiveRoomBattle:bool = "isActiveTrainingBattle || isActiveTournamentBattle")
		
		(var selfTeamId:number = "preBattlePlayerSimpleComponent.teamId ?: 0" (event "preBattlePlayerSimpleComponent.evTeamIdChanged"))

		(var isSpectatorsTeam:bool = 	"selfTeamId == SC.Common.TRAINING_ROOM_TEAMS_IDS.OBSERVER_TEAM")
		(var isNeutralTeam:bool = 		"selfTeamId == SC.Common.TRAINING_ROOM_TEAMS_IDS.NEUTRAL_TEAM")

		(var isStartBattleButtonBigVisible:bool = "isActiveRoomBattle		? isSpectatorsTeam || (isActiveTournamentBattle && isNeutralTeam)
																			: !isDivision || isSelfPlayerCommander")

		(var isVisibleTournamentTimer:bool = "isActiveTournamentBattle && stageWidth > 1280")
	)
	(bindcall externalCall "'inputMapping.onAction'" "[ 'deactivateTipChain', { tip_chain_id: SC.Context_guiding_tip.TIP_CHAIN_ID.CONTINUOUS_BATTLE_ENTER } ]" init=false watch=false (event "centralBtn_evClicked"))

	(style
		(flow = "horizontal")
		(align = "center")
		(bind width "stageWidth")
		(height = "DOCK_HEADER_HEIGHT")
	)

	
	(block
		(class $FullsizeAbsolute)

		(controller $Instance renderer='BlurMapWithLayerPanel'
			(bind enabled "!isHighContrast")
		)
	)

	
	(block
		(class $FullsizeAbsolute)
		(style
			(backgroundColor = "PORT_HEADER_BACKGROUND_COLOR")
			(bind alpha "isHeaderTransparent ? 0.8 : 1" watch=false)
		)

		(controller $Animation
			(bindcall play
				duration = 0.15
				from	 = "{ alpha: 1 }"
				to		 = "{ alpha: 0.8 }"
				easing	 = "Easing.quad_out"
				action	 ="kill"
				reverse = "!isHeaderTransparent"
				(bind trigger "isHeaderTransparent")
			)
		)
	)
	

	(block
		(class $MiddleAlignedAbsolutely)
		(style
			(width = 1280px)
			(height = 60px)
			(backgroundImage = 'url:../panel_background/dock_menu_bg.png')
		)
	)

	(hblock
		(style (position = "absolute") (width = 50%))

		(element SettingsButtonPort)

		(block
			(style (marginLeft = "PORT_HEADER_SETTINGS_AND_DOGTAG_GAP"))
			(element PlayerDogTagButtonPort)
		)

		(hblock
			(style (width = 100%))

			(element ButtonAccount)

			(block
				(bind visible "!isActiveTournamentBattle")

				(style
					(maxWidth = "DOCK_HEADER_ELEMS_WIDTH.PORT_LARGEST + S")
					(marginLeft = "S")
				)

				(element PortSwitcher)
			)
		)

		
		
		
		
		
		
		
	)

	(block
		(style (align = "center") (height = "DOCK_HEADER_HEIGHT"))

		(block
			(style (marginTop = "S"))

			(controller $Instance renderer='StartBattleButtonBig'
				(bind enabled "isStartBattleButtonBigVisible")
			)

			(controller $Instance renderer='BigReadyForFormationBattleButton'
				(bind enabled "!isStartBattleButtonBigVisible")
				(args
					_isTrainingRoom = "isActiveRoomBattle"
				)
			)

			(macro MOUSE_EVENTS_DISPATCHER "'centralBtn_'")
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='GuidingTipHub'
				(bind enabled "newTipId != SC.Context_guiding_tip.TIP_TYPE.NONE")
				(args
					_tipId = "newTipId"
					_tipPositioning = "TIP_POSITION_BOTTOM"
					_offsetY = "isUnderStartButtonTips ? 5px : XXLXL"
					_hasFinishButton = "hasFinishButton"
					_noArrow = "!isUnderStartButtonTips"
					_noPointer = "!isUnderStartButtonTips"
					_modalWindowName = 'Dock'
				)
			)
		)

		(hblock
			(style
				(position = "absolute")
				(marginLeft = -100%)
				(height = 100%)
				(align = "left|middle")
			)

			(block
				(bind visible "isVisibleTournamentTimer")
				(style
					(marginBottom = "XXS")
					(marginRight = "{ 1920:LS, 1440:L }")
				)
				(controller $Instance renderer='TimerStartTournament'
					(bind enabled "isVisibleTournamentTimer")
				)	
			)

			(block
				(controller $Instance
					(bind renderer "isActiveRoomBattle ? 'TrainingRoomPlayerState' : 'DivisionButtonPort'")
				)
			)
		)

		(block
			(style
				(position = "absolute")
				(left = 100%)
				(bind marginLeft "PORT_HEADER_CONTROL_DEFAULT_PADDING + PORT_HEADER_START_BATTLE_BTN_SIDE_MARGIN")
			)

			(element BattleTypeChooser)
		)
	)

	(block
		(style (position = "absolute") (right = 0px))
		(element AccountResourcesWidget)
	)

	(block
		(class $MiddleAlignedAbsolutely)
		(style (top = "DOCK_HEADER_HEIGHT"))
		(element DockNaviButtons)
	)
)