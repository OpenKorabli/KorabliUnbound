(def constant ECOBOOST_DESCRIPTION_SMALL_HEIGHT 260px)
(def constant ECOBOOST_DESCRIPTION_DEFAULT_HEIGHT 290px)

(def constant ECOBOOST_HEADER_SMALL_MARGIN_BOTTOM 8px)
(def constant ECOBOOST_HEADER_DEFAULT_MARGIN_BOTTOM 12px)

(def constant ECOBOOST_CARDS_WITH_MARGIN_SMALL_WIDTH 644px)
(def constant ECOBOOST_CARDS_WITH_MARGIN_DEFAULT_WIDTH 1068px)

(def constant ECOBOOST_CARD_SMALL_WIDTH 146px)
(def constant ECOBOOST_CARD_DEFAULT_WIDTH 237px)

(def constant ECOBOOST_CARD_SMALL_HEIGHT 215px)
(def constant ECOBOOST_CARD_DEFAULT_HEIGHT 344px)

(def constant ECOBOOST_CARD_SMALL_HGAP 20px)
(def constant ECOBOOST_CARD_DEFAULT_HGAP 40px)

(def constant MULTIBOOST_CARD_SMALL_HEIGHT 70px)
(def constant MULTIBOOST_CARD_DEFAULT_HEIGHT 115px)


(def constant DEFAULT_EQUIP_SLOT_PK '_0_')

(def constant CT_PAPER_ROLL_OVER "{		redOffset: 10,
										greenOffset: 10,
										blueOffset: 10,
										alphaOffset: 0 }")

(def constant CT_PAPER_MOUSE_DOWN "{	redOffset: -10,
										greenOffset: -10,
										blueOffset: -10,
										alphaOffset: 0 }")

(def constant CT_VOID_ROLL_OVER "{		redOffset: 255,
										greenOffset: 255,
										blueOffset: 255,
										alphaOffset: 5 }")

(def constant CT_VOID_MOUSE_DOWN "{		redOffset: 10,
										greenOffset: 10,
										blueOffset: 10,
										alphaOffset: 0 }")

(def element EconomicsManagementContainer (_isSmallScreen:bool=false)
	(macro DEFAULT_MODAL_WINDOW_SCOPE_EVENTS)
	(scope
		(macro PULL_SHIP_ID)
		(var shipEntity:dhEntity = "getPrimaryEntity(CC.ownShip, viewedShipId)")
		(var shipInfo:dhComponent = "shipEntity.ship")
		(var ownShipInfo:dhComponent = "shipEntity.ownShip")

		(var isInFormation:bool = "ownShipInfo.isInFormation" (event "ownShipInfo.evUpdateLock"))
		(var isLocked:bool = "ownShipInfo.isLocked" (event "ownShipInfo.evUpdateLock"))
		(var isNeedRepair:bool = "ownShipInfo.isNeedRepair" (event "ownShipInfo.evUpdateDockState"))

		(var isActionsAvailable:bool = "!(isInFormation || isLocked || isNeedRepair)")

		(var installedEcoBoostsCollection:dhCollection = "getCollection(CC.ecoBoost).getChildByPath('availableToUser.byType.' + SC.Common.ECOBOOST_TYPES.COMMON + '.installed')")
		(var preinstalledEcoBoostsCollection:dhCollection = "getCollection(CC.ecoBoost).getChildByPath('availableToUser.byType.' + SC.Common.ECOBOOST_TYPES.COMMON + '.preinstalled')")

		(var isAnyBoostInstalled:bool = "installedEcoBoostsCollection.length > 0")

		
		(struct ecoBonusBlockedDivisionTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.ECO_BONUS_BLOCKED_DIV_READY"))
		(struct ecoBonusBlockedLockedTip =				PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.ECO_BONUS_BLOCKED_BATTLE"))
		(struct ecoBonusBlockedMaintenanceTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.ECO_BONUS_BLOCKED_MAINTENANCE"))
		(struct ecoBonusBoostInstalledNewTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.ECO_BONUS_BOOST_INSTALLED"))
		(struct ecoBonusBoostInstalledRepeatNewTip =	PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.ECO_BONUS_BOOST_INSTALLED_REPEAT"))

		(var ecoBonusTipId:number = "	ecoBonusBlockedDivisionTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.ECO_BONUS_BLOCKED_DIV_READY :
										ecoBonusBlockedLockedTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.ECO_BONUS_BLOCKED_BATTLE :
										ecoBonusBlockedMaintenanceTip.isActive		? SC.Context_guiding_tip.TIP_TYPE.ECO_BONUS_BLOCKED_MAINTENANCE :
										ecoBonusBoostInstalledNewTip.isActive		? SC.Context_guiding_tip.TIP_TYPE.ECO_BONUS_BOOST_INSTALLED :
										ecoBonusBoostInstalledRepeatNewTip.isActive	? SC.Context_guiding_tip.TIP_TYPE.ECO_BONUS_BOOST_INSTALLED_REPEAT
																					: SC.Context_guiding_tip.TIP_TYPE.NONE")

		(var hasFinishButton:bool = "ecoBonusBoostInstalledNewTip.isActive || ecoBonusBoostInstalledRepeatNewTip.isActive")
		(var ecoBonusTipVisible:bool = "ecoBonusTipId != SC.Context_guiding_tip.TIP_TYPE.NONE")
		

		
		(var isAutopurchaseOnDH:bool = "ownShipInfo.autopurchaseCamoboosts" (event "ownShipInfo.evUpdateAutorecharge"))
		(var isAutopurchaseEnabled:bool = "installedEcoBoostsCollection.length - preinstalledEcoBoostsCollection.length > 0")
		(var isAutopurchaseOn:bool = "isAutopurchaseEnabled	? isAutopurchaseOnDH : false")
		

		(var multiBoostSlotEntity:dhEntity = "getPrimaryEntity(CC.equipmentSlot, SC.Ships.SHIP_SLOT_TYPES.PERMANENT + DEFAULT_EQUIP_SLOT_PK)")
		(var installedMultiBoostId:number = "multiBoostSlotEntity.equipmentSlot.installedEntityId" (event "multiBoostSlotEntity.equipmentSlot.evInstalledEntityIdChanged"))

		(var purchasableMultiboostEntity:dhEntity = "getSingleEntity(CC.ecoBoost, 'availableToUser.' + 'byType.' + SC.Common.ECOBOOST_TYPES.LINKABLE + '.purchasableMultiboost')")
		(var multiBoostEntity:dhEntity = "getEntity(installedMultiBoostId ?: purchasableMultiboostEntity.id)")
		(var isLinkedToShip:bool = "multiBoostEntity.ecoBoost.isLinkedToShip" (event "multiBoostEntity.ecoBoost.evUpdated"))
		(var multiboostsAmount:number = "multiBoostEntity.countComponent.value" (event "multiBoostEntity.countComponent.evUpdate"))

		(var isSuitableShip:bool = "shipInfo.group == SC.Ships.SHIP_GROUPS.UPGRADEABLE ||
									shipInfo.group == SC.Ships.SHIP_GROUPS.EARLY_ACCESS ||
									shipInfo.group == SC.Ships.SHIP_GROUPS.DEMO_WITH_STATS ||
									shipInfo.group == SC.Ships.SHIP_GROUPS.SUPER_SHIP ||
									isLinkedToShip")

		(var isMultiBoostInteractionAvailiable:bool = "multiBoostEntity && isSuitableShip")
		(var isMultiBoostOperationAvailiable:bool = "isMultiBoostInteractionAvailiable && isActionsAvailable && !isLinkedToShip")

		(var multiBoostRestrictions:dhComponent = "multiBoostEntity.shipListRestrictions")
		(var multiBoostLevelFiltersRoman:str ="multiBoostRestrictions.levelString" (event "multiBoostRestrictions.evUpdate"))

		(var multiBoostTitle:str = "multiBoostLevelFiltersRoman.length > 0		? subst('IDS_MULTIBOOST_WITH_LEVEL_TITLE', [], { levelRange: multiBoostLevelFiltersRoman })
																				: tr('IDS_MULTIBOOST_TITLE')")

		(var totalSlotCreditsEntity:dhEntity =	"getPrimaryEntity(CC.equipmentSlot, toString(SC.Ships.SHIP_SLOT_TYPES.CREDITS) + DEFAULT_EQUIP_SLOT_PK)")
		(var totalSlotExpEntity:dhEntity =		"getPrimaryEntity(CC.equipmentSlot, toString(SC.Ships.SHIP_SLOT_TYPES.EXP) + DEFAULT_EQUIP_SLOT_PK)")
		(var totalSlotCrewExpEntity:dhEntity =	"getPrimaryEntity(CC.equipmentSlot, toString(SC.Ships.SHIP_SLOT_TYPES.CREW_EXP) + DEFAULT_EQUIP_SLOT_PK)")
		(var totalSlotFreeExpEntity:dhEntity =	"getPrimaryEntity(CC.equipmentSlot, toString(SC.Ships.SHIP_SLOT_TYPES.FREE_EXP) + DEFAULT_EQUIP_SLOT_PK)")

		(var totalCreditsAttributes:array = "totalSlotCreditsEntity.attributes.positive ?: []" (event "totalSlotCreditsEntity.attributes.evChanged"))
		(var totalExpAttributes:array = "totalSlotExpEntity.attributes.positive ?: []" (event "totalSlotExpEntity.attributes.evChanged"))
		(var totalCrewExpAttributes:array = "totalSlotCrewExpEntity.attributes.positive ?: []" (event "totalSlotCrewExpEntity.attributes.evChanged"))
		(var totalFreeExpAttributes:array = "totalSlotFreeExpEntity.attributes.positive ?: []" (event "totalSlotFreeExpEntity.attributes.evChanged"))

		(var isTotalBonusContainerEnabled:bool = "totalCreditsAttributes.length > 0 ||
												totalExpAttributes.length > 0 ||
												totalCrewExpAttributes.length > 0 ||
												totalFreeExpAttributes.length > 0")

		(macro MOUSE_HANDLER_SCOPE)
		(var multiBoostCardAlpha:number = "	!isMultiBoostOperationAvailiable	? 1 :
											mouseDown							? 0.6 :
											rollOver							? 1
																				: 0.7")

		(var multiBoostCardCT:dict = "	!isMultiBoostOperationAvailiable	? CT_NONE :
										mouseDown							? CT_VOID_MOUSE_DOWN :
										rollOver							? CT_VOID_ROLL_OVER
																			: CT_NONE")
	)
	(class $Fullsize)

	(controller $Animation
		(bindcall play
			keyframes = "[
							{ time:0,		to:{ alpha:0 }},
							{ time:0.2,		to:{ alpha:0 }},
							{ time:0.45,	to:{ alpha:1 }, easing:Easing.quad_out}
						]"
			action = "kill"
			(event "shipSelectionComponent.evPlayerShipIdChanged")
		)
	)

	(hblock
		(macro DEFAULT_MODAL_WINDOW_ANIMATION 2)
		(style
			(width = 100%)
			(bind hgap "_isSmallScreen ? ECOBOOST_CARD_SMALL_HGAP : ECOBOOST_CARD_DEFAULT_HGAP")
		)
		(block
			(style
				(bind width "_isSmallScreen ? ECOBOOST_DESCRIPTION_SMALL_HEIGHT : ECOBOOST_DESCRIPTION_DEFAULT_HEIGHT")
				(bind marginTop "_isSmallScreen ? 26px : LM")
			)

			(tf
				(bind class "_isSmallScreen ? '$TextDefaultBoldNM' : '$TextDefaultBold19NM'")
				(style
					(width = 100%)
					(alpha = "TA")
					(bind marginBottom "_isSmallScreen ? ECOBOOST_HEADER_SMALL_MARGIN_BOTTOM : ECOBOOST_HEADER_DEFAULT_MARGIN_BOTTOM")
				)
				(text = 'IDS_MODAL_WINDOW_ECONOMIC_BOOSTS_CATEGORY_EXPENDABLE_HEADER')
			)

			(tf
				(bind class "_isSmallScreen ? '$TextDefault13NM' : '$TextDefaultNM'")
				(style (width = 100%) (alpha = "TC") (bind marginBottom "_isSmallScreen ? SXS : M"))
				(text = 'IDS_MODAL_WINDOW_ECONOMIC_BOOSTS_CATEGORY_EXPENDABLE_DESC')
			)

			(hblock
				(style (width = 100%) (align = "middle"))

				(block
					(style (width = 100%))

					(controller $Tooltip
						(renderer = 'AutoPurchaseTooltip')
						(args
							_type = "SC.Common.AUTOPURCHASABLE_ITEMS.ECOBOOST"
							_isAutopurchaseOn = "isAutopurchaseOn"
						)
						(macro DEFAULT_TOOLTIP_BEHAVIOUR)
					)

					(element SwitchWithLeftLabel
						_state = 	"isAutopurchaseOn"
						_enabled = 	"isAutopurchaseEnabled && isActionsAvailable"
						_textClass = "_isSmallScreen ? '$TextDefault13NM' : '$TextDefaultNM'"
						_label = 	'IDS_AUTOPURCHASE'
						_methods = 	"[{ type: 'inputMapping.onAction', name: 'autoPurchaseEcoBoost', args: { enabled: !isAutopurchaseOnDH } }]"
					)
				)

				(element InstallEconomicBoostsRaritiesButton
					_isAnyBoostInstalled = "isAnyBoostInstalled"
				)
			)
		)

		(block
			(style (width = 100%) (align = "center"))

			(block
				(style (bind width "_isSmallScreen ? ECOBOOST_CARDS_WITH_MARGIN_SMALL_WIDTH : ECOBOOST_CARDS_WITH_MARGIN_DEFAULT_WIDTH"))

				(hblock
					(style (bind hgap "_isSmallScreen ? ECOBOOST_CARD_SMALL_HGAP : ECOBOOST_CARD_DEFAULT_HGAP"))

					(controller $Repeat renderer='InteractableBoostCard'
						(count = "SC.Ships.SHIP_SLOT_TYPES.ECOBOOSTS.length")
						(args
							_slotType = "SC.Ships.SHIP_SLOT_TYPES.ECOBOOSTS[$index]"
							_isSmallScreen = "_isSmallScreen"
						)
					)

					(controller $Instance renderer='GuidingTipHub'
						(bind enabled "ecoBonusTipVisible")
						(args
							_tipId =			"ecoBonusTipId"
							_tipPositioning =	"TIP_POSITION_BOTTOM"
							_offsetX =			5px
							_hasFinishButton =	"hasFinishButton"
							_noArrow =			true
							_noPointer =		true
							_modalWindowName =	'ModalWindowEconomicsManagement'
						)
					)
				)

				(block
					(style
						(width = 100%)
						(bind marginTop "_isSmallScreen ? SXS : MS")
						(bind marginBottom "_isSmallScreen ? SXS : MS")
					)
					(element HorizontalDividerTwoPx)
				)
			)
		)
	)

	(hblock
		(macro DEFAULT_MODAL_WINDOW_ANIMATION 2.5)
		(style
			(width = 100%)
			(bind hgap "_isSmallScreen ? ECOBOOST_CARD_SMALL_HGAP : ECOBOOST_CARD_DEFAULT_HGAP")
		)

		(block
			(style
				(bind width "_isSmallScreen ? ECOBOOST_DESCRIPTION_SMALL_HEIGHT : ECOBOOST_DESCRIPTION_DEFAULT_HEIGHT")
				(bind marginTop "_isSmallScreen ? XXS : 5px")
			)

			(tf
				(bind class "_isSmallScreen ? '$TextDefaultBoldNM' : '$TextDefaultBold19NM'")
				(style
					(width = 100%)
					(alpha = "TA")
					(bind marginBottom "_isSmallScreen ? ECOBOOST_HEADER_SMALL_MARGIN_BOTTOM : ECOBOOST_HEADER_DEFAULT_MARGIN_BOTTOM")
				)
				(bind text "multiBoostTitle")
			)

			(tf
				(bind class "_isSmallScreen ? '$TextDefault13NM' : '$TextDefaultNM'")
				(style (width = 100%) (alpha = "TC") (bind marginBottom "_isSmallScreen ? XXS : M"))
				(text = 'IDS_MODAL_WINDOW_ECONOMIC_BOOSTS_CATEGORY_PERMANENT_DESC')
			)

			(block
				(style (width = 100%))
				(controller $Instance renderer='MultiBoostPurchaseAndInstallContainer'
					(bind enabled "isMultiBoostInteractionAvailiable")
					(args
						_multiBoostEntity = "multiBoostEntity"
						_isActionsAvailable = "isActionsAvailable"
						_isSmallScreen = "_isSmallScreen"
					)
				)
			)
		)

		(block
			(style (width = 100%) (align = "center"))

			(block
				(block
					(style
						(backgroundColor = "NO_COLOR")
						(bind alpha "isMultiBoostInteractionAvailiable && !isLinkedToShip ? 0.7 : 1")
						(bind width "_isSmallScreen ? ECOBOOST_CARDS_WITH_MARGIN_SMALL_WIDTH : ECOBOOST_CARDS_WITH_MARGIN_DEFAULT_WIDTH")
						(bind height "_isSmallScreen ? MULTIBOOST_CARD_SMALL_HEIGHT : MULTIBOOST_CARD_DEFAULT_HEIGHT")
					)
					(macro MOUSE_EVENTS_DISPATCHER)
					(macro DEFAULT_CONTROL_STATE_ANIMATION_ALPHA _trigger="multiBoostCardAlpha" _alpha="multiBoostCardAlpha")

					(bindcall externalCall	"isMultiBoostOperationAvailiable ? 'inputMapping.onRequest' : ''"
											"[ SC.Ui_common.ECOBOOST_ACTIONS.OPEN_MODAL_BUY_AND_INSTALL, {	_ecoBoostId: multiBoostEntity.ecoBoost.id,
																											_linkFromStorage: multiboostsAmount > 0 }]" watch=false on='leftClick')
					(block
						(class $FullsizeAbsolute)
						(style
							(bind backgroundImage "isMultiBoostInteractionAvailiable && !isLinkedToShip ? 'url:../eco_boosts/cards/empty_slots/slot_multiboost_empty.png' : ''")
							(backgroundSize = "fill")
						)
						(element EconomicBoostsEmptyCardBackground _colorTransform = "multiBoostCardCT")
					)

					(hblock
						(class $FullsizeAbsolute)
						(style (bind hgap "_isSmallScreen ? ECOBOOST_CARD_SMALL_HGAP : ECOBOOST_CARD_DEFAULT_HGAP"))

						(controller $Repeat renderer='MultiBoostCard'
							(bind enabled "isMultiBoostInteractionAvailiable")
							(count = "SC.Ships.SHIP_SLOT_TYPES.ECOBOOSTS.length")
							(args
								_slotType = "SC.Ships.SHIP_SLOT_TYPES.ECOBOOSTS[$index]"
								_isSmallScreen = "_isSmallScreen"
							)
						)
					)

					(hblock
						(bind visible "!isMultiBoostInteractionAvailiable")
						(class $FullsizeAbsolute)
						(style (hitTest = false) (align = "center|middle") (alpha = "TS"))

						(element StatusLine
							_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.LOCK"
							_text = 'IDS_MODAL_WINDOW_ECONOMIC_BOOSTS_ASIDE_CONTAINER_MULTIBOOST_CARD_UNAVAILABLE_HINT'
							_textClass = '$TextDefault17NM'
						)
					)

					(controller $Tooltip
						(bind enabled "isMultiBoostInteractionAvailiable  && !isLinkedToShip")
						(renderer = 'MultiBoostTooltip')
						(args
							_id = "multiBoostEntity.ecoBoost.id"
						)
						(macro DEFAULT_TOOLTIP_BEHAVIOUR)
					)
				)

				(block
					(bind visible "isTotalBonusContainerEnabled")
					(style
						(width = 100%)
						(bind marginTop "_isSmallScreen ? SXS : MS")
						(bind marginBottom "_isSmallScreen ? SXS : MS")
					)
					(element HorizontalDividerTwoPx)
				)
			)
		)
	)

	(hblock
		(bind visible "isTotalBonusContainerEnabled")
		(macro DEFAULT_MODAL_WINDOW_ANIMATION 3)
		(style (width = 100%) (bind hgap "_isSmallScreen ? ECOBOOST_CARD_SMALL_HGAP : ECOBOOST_CARD_DEFAULT_HGAP"))

		(block
			(style
				(bind width "_isSmallScreen ? ECOBOOST_DESCRIPTION_SMALL_HEIGHT : ECOBOOST_DESCRIPTION_DEFAULT_HEIGHT")
				(bind marginTop "_isSmallScreen ? XXS : 5px")
			)

			(tf
				(bind class "_isSmallScreen ? '$TextDefaultBoldNM' : '$TextDefaultBold19NM'")
				(style
					(width = 100%)
					(alpha = "TA")
					(bind marginBottom "_isSmallScreen ? ECOBOOST_HEADER_SMALL_MARGIN_BOTTOM : ECOBOOST_HEADER_DEFAULT_MARGIN_BOTTOM")
				)
				(text = 'IDS_MODAL_WINDOW_ECONOMIC_BOOSTS_CATEGORY_OTHER_HEADER')
			)

			(tf
				(bind class "_isSmallScreen ? '$TextDefault13NM' : '$TextDefaultNM'")
				(style (width = 100%) (alpha = "TC"))
				(text = 'IDS_MODAL_WINDOW_ECONOMIC_BOOSTS_CATEGORY_OTHER_DESC')
			)
		)

		(block
			(style (width = 100%) (align = "center"))

			(hblock
				(style
					(bind width "_isSmallScreen ? ECOBOOST_CARDS_WITH_MARGIN_SMALL_WIDTH : ECOBOOST_CARDS_WITH_MARGIN_DEFAULT_WIDTH")
					(bind hgap "_isSmallScreen ? ECOBOOST_CARD_SMALL_HGAP : ECOBOOST_CARD_DEFAULT_HGAP")
				)

				(controller $Repeat renderer='TotalBoostCard'
					(bind enabled "isTotalBonusContainerEnabled")
					(count = "SC.Ships.SHIP_SLOT_TYPES.ECOBOOSTS.length")
					(args
						_slotType = "SC.Ships.SHIP_SLOT_TYPES.ECOBOOSTS[$index]"
						_isSmallScreen = "_isSmallScreen"
					)
				)
			)

		)
	)
)

(def element MultiBoostPurchaseAndInstallContainer (_multiBoostEntity:dhEntity, _isActionsAvailable:bool, _isSmallScreen:bool)
	(scope
		(var multiBoostId:number = "_multiBoostEntity.ecoBoost.id" (event "_multiBoostEntity.countecoBoostComponent.evUpdated"))
		(var isLinkedToShip:bool = "_multiBoostEntity.ecoBoost.isLinkedToShip" (event "_multiBoostEntity.ecoBoost.evUpdated"))
		(var multiboostsAmount:number = "_multiBoostEntity.countComponent.value" (event "_multiBoostEntity.countComponent.evUpdate"))
		(var isMultiBoostOperationAvailiable:bool = "_isActionsAvailable && !isLinkedToShip")

		(struct multiBoostPrice = PULL_PRICE(_entityId = "toString(multiBoostId)" _actionId = "SC.Common.PRICE_ACTION.BUY"))
		(var isPriceVisible:bool = "isMultiBoostOperationAvailiable && multiboostsAmount == 0")
		(var isLinkedVisible:bool = "isMultiBoostOperationAvailiable && multiboostsAmount > 0")

		(var label:str = "	isPriceVisible ? 'IDS_COST_COLON' :
							isLinkedVisible	? tr('IDS_IN_WAREHOUSE') + ' ' + multiboostsAmount
											: ''")
	)
	(style (flow = "horizontal") (width = 100%) (align = "middle"))

	(hblock
		(style (align = "middle") (width = 100%))

		(tf
			(bind class "_isSmallScreen ? '$TextDefault13NM' : '$TextDefaultNM'")
			(style (marginRight = "XS") (alpha = "TC"))
			(bind text "label")
		)

		(block
			(controller $Instance renderer='PriceTag'
				(bind enabled "isPriceVisible")
				(args
					_priceInfo = "multiBoostPrice.info"
					_showDiscountTag =	true
					_size = "_isSmallScreen ? SIZE.SMALL : SIZE.MEDIUM"
				)
			)
		)
	)
	(block
		(controller $Tooltip
			(bind enabled "isMultiBoostOperationAvailiable")
			(renderer = 'MultiBoostTooltip')
			(args
				_id = "multiBoostId"
			)
			(macro DEFAULT_TOOLTIP_BEHAVIOUR)
		)

		(controller $Instance renderer='DefaultButton'
			(bind enabled "isMultiBoostOperationAvailiable")
			(args
				_enabled = "isMultiBoostOperationAvailiable"
				_width = 120px
				_isTransactionBtn = true
				_label = "multiboostsAmount > 0 ? 'IDS_ECONOMIC_BOOSTS_INSTALL_BTN' : 'IDS_DO_PURCHASE'"
				_size = "SIZE.SMALL"
				_methods = "[ {	type: 'inputMapping.onRequest',
								name: SC.Ui_common.ECOBOOST_ACTIONS.OPEN_MODAL_BUY_AND_INSTALL,
								args: {	_ecoBoostId: multiBoostId,
										_linkFromStorage: multiboostsAmount > 0 }}]"
			)
		)
	)
)

(def element MultiBoostCard (_slotType:number, _isSmallScreen:bool=false)
	(scope
		(var multiBoostSlotEntity:dhEntity = "getPrimaryEntity(CC.equipmentSlot, SC.Ships.SHIP_SLOT_TYPES.PERMANENT + DEFAULT_EQUIP_SLOT_PK)")
		(var installedMultiBoostId:number = "multiBoostSlotEntity.equipmentSlot.installedEntityId" (event "multiBoostSlotEntity.equipmentSlot.evInstalledEntityIdChanged"))

		(var purchasableMultiboostEntity:dhEntity = "getSingleEntity(CC.ecoBoost, 'availableToUser.' + 'byType.' + SC.Common.ECOBOOST_TYPES.LINKABLE + '.purchasableMultiboost')")
		(var multiBoostEntity:dhEntity = "getEntity(installedMultiBoostId ?: purchasableMultiboostEntity.id)")
		(var isLinkedToShip:bool = "multiBoostEntity.ecoBoost.isLinkedToShip" (event "multiBoostEntity.ecoBoost.evUpdated"))

		(var boostTypeTxt:str = "SC.Ships.SHIP_SLOT_TYPES.VALUE_TO_NAME[_slotType]")
		(var boostTypeModifier:str = "SC.Common.ECOBOOST_MODIFIERS[boostTypeTxt]")
		(var modifiers:dict = "multiBoostEntity.attributes.modifiers" (event "multiBoostEntity.attributes.evChanged"))

		(var hasModifier:bool = "boostTypeModifier in modifiers")
		(var modifierText:str = "hasModifier ? '+' + modifiers[boostTypeModifier] + '%' : 'IDS_DASH'")
	)
	(style
		(flow = "horizontal")
		(backgroundColor = "NO_COLOR")
	)

	(block
		(style
			(align = "center|middle")
			(backgroundSize = "cover")
			(bind width "_isSmallScreen ? ECOBOOST_CARD_SMALL_WIDTH : ECOBOOST_CARD_DEFAULT_WIDTH")
			(bind height "_isSmallScreen ? MULTIBOOST_CARD_SMALL_HEIGHT : MULTIBOOST_CARD_DEFAULT_HEIGHT")
			(bind backgroundImage "isLinkedToShip && hasModifier ? 'url:../eco_boosts/cards/items/multiboost/card_multiboost.png' : ''")
		)

		(tf
			(bind class "_isSmallScreen ? '$TextDefaultBold30NMWithoutShadow' : '$TextDefaultBold46NMWithoutShadow'")
			(style
				(bind alpha "isLinkedToShip && hasModifier ? TC : 0.4")
				(bind textColor "isLinkedToShip && hasModifier ? C_DARK : SC.Ui_styles.SERVICE_COLORS.WHITE")
			)
			(bind text "modifierText")
		)
	)

	(controller $Tooltip
		(bind enabled "isLinkedToShip")
		(renderer = 'MultiBoostTooltip')
		(args
			_id = "multiBoostEntity.ecoBoost.id"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR)
	)
)

(def element InteractableBoostCard (_slotType:number, _isSmallScreen:bool=false)
	(scope
		(event evHideInfotip)
		(event evChangeEcoBoost)

		(var ecoBoostSlotPk:str = "toString(_slotType) + DEFAULT_EQUIP_SLOT_PK")
		(var ecoBoostSlotEntity:dhEntity = "getPrimaryEntity(CC.equipmentSlot, ecoBoostSlotPk)")
		(var equipmentSlot:dhComponent = "ecoBoostSlotEntity.equipmentSlot")

		(var subCollectionKey:number = "equipmentSlot.subCollectionKey")
		(var installedEntityId:number = "equipmentSlot.installedEntityId" (event "equipmentSlot.evInstalledEntityIdChanged"))

		(var boostTypeTxt:str = "SC.Ships.SHIP_SLOT_TYPES.VALUE_TO_NAME[_slotType]")
		(var boostTypeModifier:str = "SC.Common.ECOBOOST_MODIFIERS[boostTypeTxt]")
		(var slotTypeHeader:str = "'IDS_ECONOMIC_HEADER_BOOST_TYPE_' + boostTypeTxt")

		(var ecoBoostEntity:dhEntity = "getEntity(installedEntityId)")
		(var ecoBoost:dhComponent = "ecoBoostEntity.ecoBoost")
		(var rarity:number = "ecoBoost.rarity ?: 0")
		(var amount:number = "ecoBoostEntity.countComponent.value ?: 0" (event "ecoBoostEntity.countComponent.evUpdate"))
		(var ecoBoostId:number = "ecoBoost.id")
		(var allEcoboostsRarities:array = "[SC.Ui_common.ECOBOOST_RARITY.STANDART,
											SC.Ui_common.ECOBOOST_RARITY.SPECIAL,
											SC.Ui_common.ECOBOOST_RARITY.RARE,
											SC.Ui_common.ECOBOOST_RARITY.UNIQUE]")

		(var bgPostfix:str = "allEcoboostsRarities[rarity - 1]")

		(var isInstalledAndActive:bool = "installedEntityId && amount > 0")
		(var isInstalledAndInactive:bool = "installedEntityId && amount == 0")
		(var boostShownInTooltip:bool = "installedEntityId > 0")

		(var shipAttrsEntity:dhEntity = "getSingleEntity(CC.shipEconomicAttributes)")
		(var modifiers:dict = "shipAttrsEntity.attributes.modifiers" (event "shipAttrsEntity.attributes.evChanged"))

		(var expendableAttributesPositive:array = "ecoBoostEntity.attributes.positive ?: []" (event "ecoBoostEntity.attributes.evChanged"))
		(var expendableBoostInfluence:str = "expendableAttributesPositive[0]['measuredValue'] + expendableAttributesPositive[0]['measure']")

		(macro PULL_SHIP_ID)
		(var shipEntity:dhEntity = "getPrimaryEntity(CC.ownShip, viewedShipId)")
		(var ownShipInfo:dhComponent = "shipEntity.ownShip")

		(var isInFormation:bool = "ownShipInfo.isInFormation" (event "ownShipInfo.evUpdateLock"))
		(var isLocked:bool = "ownShipInfo.isLocked" (event "ownShipInfo.evUpdateLock"))
		(var isNeedRepair:bool = "ownShipInfo.isNeedRepair" (event "ownShipInfo.evUpdateDockState"))

		(var isEcoboostSlotInfotipVisible:bool = false)

		(macro MOUSE_HANDLER_SCOPE)
		(var isClickableSlot:bool = "!(isLocked || isInFormation || isNeedRepair)")
		(var isCardMouseDown:bool = "isClickableSlot && (mouseDown || isEcoboostSlotInfotipVisible)")
		(var isCardRollOver:bool = "isClickableSlot && rollOver && !isEcoboostSlotInfotipVisible")

		(var cardAlpha:number = "	isInstalledAndActive	? 0 :
									isCardMouseDown			? 0.6 :
									isCardRollOver			? 1
															: 0.7")

		(var ctPaper:dict = "	isCardMouseDown	? CT_PAPER_MOUSE_DOWN :
								isCardRollOver	? CT_PAPER_ROLL_OVER
												: CT_NONE")

		(var ctVoid:dict = "	isCardMouseDown	? CT_VOID_MOUSE_DOWN :
								isCardRollOver	? CT_VOID_ROLL_OVER
												: CT_NONE")
	)
	(dispatch evChangeEcoBoost args="{}" (bind enabled "installedEntityId != 0") (bind trigger "installedEntityId"))
	(colorTransform = "ctPaper")

	(controller $Animation
		(bindcall play
			duration = 0.1
			to = "{ colorTransform: ctPaper }"
			easing = "Easing.quad_out"
			action = "kill"
			(bind trigger "ctPaper")
		)
	)

	(block
		(style
			(width = 100%)
			(align = "center")
			(bind height "_isSmallScreen ? 12px : 19px")
			(bind marginBottom "_isSmallScreen ? SXS : MS")
		)
		(tf
			(bind class "_isSmallScreen ? '$TextDefaultBold13NM' : '$TextDefaultBoldNM'")
			(style (alpha = "TC"))
			(bind text "toUpper(tr(slotTypeHeader))")
		)
	)

	(block
		(style
			(bind width "_isSmallScreen ? ECOBOOST_CARD_SMALL_WIDTH : ECOBOOST_CARD_DEFAULT_WIDTH")
			(bind height "_isSmallScreen ? ECOBOOST_CARD_SMALL_HEIGHT : ECOBOOST_CARD_DEFAULT_HEIGHT")
			(backgroundColor = "NO_COLOR")
		)
		(macro MOUSE_EVENTS_DISPATCHER)

		
		
		(block
			(class $FullsizeAbsolute)
			(style (alpha = "cardAlpha"))
			(macro DEFAULT_CONTROL_STATE_ANIMATION_ALPHA _trigger="cardAlpha" _alpha="cardAlpha")

			(block
				(class $FullsizeAbsolute)
				(style
					(backgroundSize = "fill")
					(bind backgroundImage "isInstalledAndInactive	? 'url:../eco_boosts/cards/empty_slots/slot_attention.png'
																	: 'url:../eco_boosts/cards/empty_slots/slot_empty.png'")
				)
			)

			
			(element EconomicBoostsEmptyCardBackground _colorTransform = "ctVoid")

			
			(block
				(class $FullsizeAbsolute)
				(style
					(backgroundSize = "fill")
					(bind alpha "isInstalledAndActive ? 1 : 0.4")
					(bind backgroundImage "'url:../eco_boosts/cards/types/' + boostTypeModifier + '.png'")
				)
			)
			
		)
		

		(block
			(class $Fullsize)
			(style
				(pivotX = 50%)
				(pivotY = 50%)
			)

			(controller $Animation
				(bindcall play
					duration = 0.1
					from = "{alpha: 0, visualScaleX: 1.1, visualScaleY: 1.1}"
					to = "{alpha: 1, visualScaleX: 1, visualScaleY: 1}"
					easing = "Easing.quad_out"
					action = "kill"
					(event "evChangeEcoBoost")
				)
			)

			
			(block
				(class $FullsizeAbsolute)
				(style
					(backgroundSize = "fill")
					(bind backgroundImage "isInstalledAndActive ? 'url:../eco_boosts/cards/items/card_boost_'+ bgPostfix + '.png' : ''")
				)
			)
			

			
			(block
				(bind visible "isInstalledAndActive")
				(class $FullsizeAbsolute)
				(style
					(backgroundSize = "fill")
					(bind backgroundImage "'url:../eco_boosts/cards/types/' + boostTypeModifier + '.png'")
				)
			)
			

			
			(block
				(bind visible "isInstalledAndActive && modifiers[boostTypeModifier]")
				(class $FullsizeAbsolute)
				(style
					(align = "center|bottom")
					(paddingLeft = "S")
					(paddingRight = "S")
					(bind bottom "_isSmallScreen ? 41px : 68px")
				)

				(tf
					(bind class "_isSmallScreen ? '$TextDefaultBold30NMWithoutShadow' : '$TextDefaultBold46NMWithoutShadow'")
					(style
						(bind alpha "isInstalledAndActive ? TC : 1")
						(bind textColor "isInstalledAndActive	? C_DARK
																: SC.Ui_styles.SERVICE_COLORS.PAPER")
					)
					(bind text "expendableBoostInfluence")
				)
			)
			

			
			(hblock
				(bind visible "isInstalledAndActive")
				(class $FullsizeAbsolute)
				(style
					(position = "absolute")
					(width = 100%)
					(align = "center|bottom")
					(paddingLeft = "S")
					(paddingRight = "S")
					(bind bottom "_isSmallScreen ? 15px : 26px")
					(hgap = 6px)
				)

				(tf
					(bind class "_isSmallScreen ? '$TextDefaultNMWithoutShadow' : '$TextDefault17NMWithoutShadow'")
					(style (textColor = "SC.Ui_styles.SERVICE_COLORS.PAPER"))
					(text = 'IDS_IN_WAREHOUSE')
				)

				(tf
					(bind class "_isSmallScreen ? '$TextDefaultBoldNMWithoutShadow' : '$TextDefaultBold17NMWithoutShadow'")
					(style (textColor = "SC.Ui_styles.SERVICE_COLORS.PAPER"))
					(bind text "formatSeparator(amount)")
				)
			)
			

			
			(block
				(bind visible "isInstalledAndInactive")
				(class $FullsizeAbsolute)
				(style (align = "center|bottom") (bind paddingBottom "_isSmallScreen ? 16px : 26px") (paddingLeft = "S") (paddingRight = "S"))

				(tf
					(bind class "_isSmallScreen ? '$TextDefaultNMWithoutShadow' : '$TextDefault17NMWithoutShadow'")
					(style (width = 100%) (leading = -3) (textAlign = "center") (textColor = "SC.Ui_styles.SERVICE_COLORS.ORANGE"))
					(text = 'IDS_MODAL_WINDOW_ECONOMIC_BOOSTS_CENTRAL_BLOCK_CARD_OUT_OF_STOCK_HINT')
				)
			)
			

			
			(block
				(bind visible "isInstalledAndActive")
				(class $FullsizeAbsolute)
				(style (backgroundImage = 'url:../eco_boosts/cards/misc/card_over.png') (backgroundSize = "fill"))
			)
			


		)

		
		(block
			(class $FullsizeAbsolute)
			(style (backgroundColor = "NO_COLOR"))
			(macro SOUND_HANDLER "isClickableSlot ? 'button_flat' : ''")

			(controller $Tooltip
				(bind enabled "boostShownInTooltip")
				(renderer = 'FilledEconomicBoostSlotTooltip')
				(args
					_ecoBoostSlotEntityId = "ecoBoostSlotEntity.id"
					_boostTypeModifier = "boostTypeModifier"
					_showPermoboostStatusIfActive = true
				)
				(macro DEFAULT_TOOLTIP_BEHAVIOUR)
			)

			(controller $Tooltip
				(bind enabled "!boostShownInTooltip")
				(renderer = 'EmptyEconomicBoostSlotTooltip')
				(args
					_slotType = "_slotType"
					_boostTypeModifier = "boostTypeModifier"
					_slotId = "subCollectionKey"
				)
				(macro DEFAULT_TOOLTIP_BEHAVIOUR)
			)

			(controller $Tooltip
				(bind enabled "isClickableSlot")
				(renderer = 'EconomicBoostSlotInfotip')

				(args
					_slotType = "_slotType"
					_slotId = "subCollectionKey"
					_installedEcoBoostId = "ecoBoostId"
				)

				(macro VERTICAL_INFOTIP_BEHAVIOUR "1")
				(macro TOOLTIP_HIDE_ON_EVENT "evHideInfotip")

				(screenBoundsOffset = {	left:	6px,
										top:	6px,
										right:	6px,
										bottom:	6px })

				(align = "center|bottom")

				(pinTop = 'InfotipPinTop')
				(bind isEcoboostSlotInfotipVisible "true" on='evStartShow')
				(bind isEcoboostSlotInfotipVisible "false" on='evHide')
			)
		)
		

		
		(block
			(name = 'btnUninstallBoost')
			(style
				(position = "absolute")
				(top = "MS")
				(right = "MS")
				(backgroundColor = "NO_COLOR")
				(pivotX = 50%)
				(pivotY = 50%)
			)

			(controller $Animation
				(bindcall play
					duration = 0.1
					from = "{alpha: 0, visualScaleX: 1.5, visualScaleY: 1.5}"
					to = "{alpha: 1, visualScaleX: 1, visualScaleY: 1}"
					easing = "Easing.quad_out"
					action = "kill"
					(event "evChangeEcoBoost")
				)
			)

			(controller $Instance renderer='ImageButton'
				(bind enabled "installedEntityId")
				(args
					_width = "SXS"
					_height = "SXS"
					_enabled = "isClickableSlot"
					_isTransactionBtn = true
					_methods = "[	{	type: 'inputMapping.onAction',
										name: SC.Ui_common.ECOBOOST_ACTIONS.UNINSTALL,
										args: { boostId: ecoBoostId } }]"
					_backgroundImage = 'url:../service_kit/buttons/close_paper.png'
					_hitAreaMargin = "[-S]"
				)
			)
		)
		
	)
)

(def element TotalBoostCard (_slotType:number, _isSmallScreen:bool=false)
	(scope
		(var ecoBoostSlotPk:str = "toString(_slotType) + DEFAULT_EQUIP_SLOT_PK")
		(var ecoBoostSlotEntity:dhEntity = "getPrimaryEntity(CC.equipmentSlot, ecoBoostSlotPk)")

		(var permanentAttributes:array = "ecoBoostSlotEntity.attributes.positive ?: []" (event "ecoBoostSlotEntity.attributes.evChanged"))
		(var isInstalledPermanentEcoboost:bool = "permanentAttributes.length > 0")
	)
	(style
		(backgroundColor = "NO_COLOR")
		(bind width "_isSmallScreen ? ECOBOOST_CARD_SMALL_WIDTH : ECOBOOST_CARD_DEFAULT_WIDTH")
		(bind vgap "_isSmallScreen ? ECOBOOST_HEADER_SMALL_MARGIN_BOTTOM : ECOBOOST_HEADER_DEFAULT_MARGIN_BOTTOM")
	)

	(controller $Repeat renderer='TotalEcoBoostParam'
		(bind enabled "isInstalledPermanentEcoboost")
		(bind count "permanentAttributes.length")
		(args
			_attribute = "permanentAttributes[$index]"
			_isSmallScreen = "_isSmallScreen"
		)
	)
)

(def element TotalEcoBoostParam (_attribute:dict, _isSmallScreen:bool)
	(style
		(width = 100%)
		(flow = "horizontal")
		(paddingLeft = "XS") (paddingRight = "XS")
		(backgroundColor = "NO_COLOR")
	)

	(tf
		(bind class "_isSmallScreen ? '$TextDefault13NM' : '$TextDefaultNM'")
		(style
			(width = 100%)
			(leading = -3) (marginRight = 6px)
			(alpha = "TC")
		)
		(bind text "_attribute.attributeIDS")
	)

	(tf
		(bind class "_isSmallScreen ? '$TextDefault13NM' : '$TextDefaultNM'")
		(style (alpha = "TC"))

		(bind text "_attribute.measuredValue")
	)

	(tf
		(bind visible "_attribute.measure")
		(bind class "_isSmallScreen ? '$TextDefault13NM' : '$TextDefaultNM'")
		(style
			(marginLeft = "XS")
			(alpha = "TC")
		)
		(bind text "_attribute.measure")
	)
)

(def element EconomicBoostSlotInfotip (_slotType:number, _slotId:number, _installedEcoBoostId:number)
	(scope
		(var purchasableEcoBoostsCollection:dhCollection = "getCollection(CC.ecoBoost).getChildByPath('availableToUser.byType.' + SC.Common.ECOBOOST_TYPES.COMMON + '.bySubtype.' + _slotType)")
	)
	(macro HIDE_UI_ON_SHIPOVERVIEW)
	(style (width = 358px))
	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND "true")

	(element INFOTIP_SYSTEM_DEFAULT_CONTAINER
		(controller $Repeat renderer='EconomicBoostInfotipItem'
			(bind count "purchasableEcoBoostsCollection.length")
			(args
				_collection = "purchasableEcoBoostsCollection"
				_slotId = "_slotId"
				_slotType = "_slotType"
				_installedId = "_installedEcoBoostId"
			)
		)
	)
)

(def element FilledEconomicBoostSlotTooltip (_ecoBoostSlotEntityId:number, _boostTypeModifier:str, _hasMouseInstruction:bool=false, _mouseInstruction:dict=null)
	(scope
		
		(macro PULL_SHIP_ID)
		(var shipEntity:dhEntity = "getPrimaryEntity(CC.ownShip, viewedShipId)")
		(var ownShipInfo:dhComponent = "shipEntity.ownShip")

		(var isLocked:bool = "ownShipInfo.isLocked" (event "ownShipInfo.evUpdateLock"))
		(var isInFormation:bool = "ownShipInfo.isInFormation" (event "ownShipInfo.evUpdateLock"))
		(var isNeedRepair:bool = "ownShipInfo.isNeedRepair" (event "ownShipInfo.evUpdateDockState"))
		
		
		(var ecoBoostSlotEntity:dhEntity = "getEntity(_ecoBoostSlotEntityId)")
		(var installedCommonEcoboostId:number = "ecoBoostSlotEntity.equipmentSlot.installedEntityId" (event "ecoBoostSlotEntity.equipmentSlot.evInstalledEntityIdChanged"))
	
		(var ecoBoostEntity:dhEntity = "getEntity(installedCommonEcoboostId)")
		(var ecoBoostId:number = "ecoBoostEntity.ecoBoost.id" (event "ecoBoostEntity.ecoBoost.evUpdated"))
		(struct ecoBoostPrice = PULL_PRICE(_entityId = "toString(ecoBoostId)" _actionId = "SC.Common.PRICE_ACTION.BUY"))

		(var canBeBought:bool = "ecoBoostEntity.ecoBoost.canBuy " (event "ecoBoostEntity.ecoBoost.evUpdated"))
		(var name:str = "ecoBoostEntity.ecoBoost.name ?: ''" (event "ecoBoostEntity.ecoBoost.evUpdated"))
		(var type:number = "ecoBoostEntity.ecoBoost.type ?: 0" (event "ecoBoostEntity.ecoBoost.evUpdated"))
		(var rarity:number = "ecoBoostEntity.ecoBoost.rarity ?: 0" (event "ecoBoostEntity.ecoBoost.evUpdated"))
		(var amount:number = "ecoBoostEntity.countComponent.value ?: 0" (event "ecoBoostEntity.countComponent.evUpdate"))

		(var ecoBoostSubheaderText:str = "rarity	? tr('IDS_ECONOMIC_BOOST_TYPE_EXPENDABLE_' + rarity)
													:''")

		(var unvailableForPurchaseHeaderText:str = "canBeBought		?	'' :
													rarity == 3		?	'IDS_UNAVAILABLE_RARE_ECOBOOST_FOR_PURCHASE'
																	:	'IDS_UNAVAILABLE_UNIQUE_ECOBOOST_FOR_PURCHASE'")
	
		(var isInstalledAndActive:bool = "installedCommonEcoboostId && amount > 0")
		(var isInstalledAndInactive:bool = "installedCommonEcoboostId && !amount")

		(var expendableAttributesPositive:array = "ecoBoostEntity.attributes.positive ?: []" (event "ecoBoostEntity.attributes.evChanged"))
		(var expendableBoostInfluence:str = "expendableAttributesPositive[0]['measuredValue'] + expendableAttributesPositive[0]['measure']")

		(var commonBoostTooltipHeaderText:str = "tr('IDS_ECONOMIC_BOOST_TYPE_' + toUpper(_boostTypeModifier) + '_SIMPLE_SUMMARY_TOOLTIP') + tr('IDS_TOOLTIP_SPACE') + expendableBoostInfluence")
		(var headerUnifiedStatus:str = "isInstalledAndActive ? SC.Ui_styles.UNIFIED_STATUS.CHECK : SC.Ui_styles.UNIFIED_STATUS.DEFAULT")

		(var mouseInstruction:dict = "	_hasMouseInstruction	?	_mouseInstruction :
										isInFormation			?	{	_unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																		_text: 'IDS_SET_UNREADY_DIVISION_FIRST_TO_OPERATE_ECONOMIC_BOOSTS' } :
										isLocked				?	{	_unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																		_text: 'IDS_LEAVE_BATTLE_FIRST_TO_OPERATE_ECONOMIC_BOOSTS' } :
										isNeedRepair			?	{	_unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																		_text: 'IDS_SERVICE_SHIP_TO_OPERATE_ECONOMIC_BOOSTS' }
																:	{	_unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT,
																		_text: 'IDS_ECONOMIC_BOOST_SLOT_OPEN_INFOTIP' }")
	)
	(style (width = 320px))

	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)
	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHeaderWithIconAndText'
				(bind enabled "installedCommonEcoboostId")
				(args
					_imageHeight = 80
					_imageWidth = 80
					_unifiedStatus = "headerUnifiedStatus"
					_headerText = "commonBoostTooltipHeaderText"
					_subheaderText = "ecoBoostSubheaderText"
					_headerIconType = "SC.Ui_styles.TOOLTIP_SYSTEM_HEADER_ICON_TYPE.ECO_BOOST"
					_data = "{ paramsId: name, type: type }"
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "isInstalledAndInactive"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemStatusLine'
				(bind enabled "isInstalledAndInactive")
				(args
					_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.ATTENTION"
					_text = 'IDS_PREINSTALLED_ECOBOOST'
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "installedCommonEcoboostId"))
		)
		(element TOOLTIP_SYSTEM_ELEMENTS_GROUP
			(bind visible "installedCommonEcoboostId")

			(element TOOLTIP_SYSTEM_GROUP_ELEMENT
				(bind visible "isInstalledAndActive")
				(controller $Instance renderer='TooltipSystemCounterLine'
					(bind enabled "isInstalledAndActive")
					(args
						_title = 'IDS_IN_WAREHOUSE'
						_count = "amount"
						_isAutoWidth = true
					)
				)
			)

			(element TOOLTIP_SYSTEM_GROUP_ELEMENT
				(bind visible "canBeBought")
				(controller $Instance renderer='TooltipSystemPriceTagLine'
					(bind enabled "canBeBought")
					(args
						_title = 'IDS_COST_COLON'
						_priceInfo = "ecoBoostPrice.info"
						_isAutoWidth = true
					)
				)
			)

			(element TOOLTIP_SYSTEM_GROUP_ELEMENT
				(bind visible "!canBeBought")
				(controller $Instance renderer='TooltipSystemDescriptionText'
					(bind enabled "!canBeBought")
					(args
						_descriptionText = "unvailableForPurchaseHeaderText"
					)
				)
			)
		)

		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemHorizontalDivider' (bind enabled "installedCommonEcoboostId"))
		)
		(block
			(style (width = 100%))
			(controller $Instance renderer='TooltipSystemParamsModifiersList'
				(bind enabled "installedCommonEcoboostId")
				(args
					_attributesNegative = "expendableAttributesPositive"
				)
			)
		)

		(element TooltipSystemHorizontalDivider)
		(element TooltipSystemStatusLine
			_unifiedStatus = "mouseInstruction._unifiedStatus"
			_text = "mouseInstruction._text"
		)
	)
)

(def element EmptyEconomicBoostSlotTooltip (_slotType:number, _boostTypeModifier:str, _slotId:number)
	(scope
		(var purchasableEcoBoostsColByAmountCollection:dhCollection = "getCollection(CC.ecoBoost).getChildByPath('availableToUser.' + 'byType.' + SC.Common.ECOBOOST_TYPES.COMMON + '.bySubtype.' + _slotType)")
		(var purchasableEcoBoostsColByAmountLen:number = "purchasableEcoBoostsColByAmountCollection.length")

		(macro PULL_SHIP_ID)
		(var shipEntity:dhEntity = "getPrimaryEntity(CC.ownShip, viewedShipId)")
		(var ownShipInfo:dhComponent = "shipEntity.ownShip")

		(var isLocked:bool =		"ownShipInfo.isLocked"		(event "ownShipInfo.evUpdateLock"))
		(var isInFormation:bool =	"ownShipInfo.isInFormation"	(event "ownShipInfo.evUpdateLock"))
		(var isNeedRepair:bool =	"ownShipInfo.isNeedRepair"	(event "ownShipInfo.evUpdateDockState"))

		(var mouseInstruction:dict = "	isInFormation	?	{	_unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																_text: 'IDS_SET_UNREADY_DIVISION_FIRST_TO_OPERATE_ECONOMIC_BOOSTS' } :
										isLocked		?	{	_unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																_text: 'IDS_LEAVE_BATTLE_FIRST_TO_OPERATE_ECONOMIC_BOOSTS' } :
										isNeedRepair	?	{	_unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																_text: 'IDS_SERVICE_SHIP_TO_OPERATE_ECONOMIC_BOOSTS' }
														:	{	_unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT,
																_text: 'IDS_ECONOMIC_BOOST_SLOT_OPEN_INFOTIP' }")
	)

	(style (width = 360px) (hitTest = false))

	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND)
	(element TOOLTIP_SYSTEM_DEFAULT_CONTAINER
		(element TooltipSystemHeaderSubheaderText
			_headerText = "'IDS_ECONOMIC_BOOST_TYPE_' + toUpper(_boostTypeModifier) + '_SIMPLE_SUMMARY_TOOLTIP'"
			_unifiedStatus = "SC.Ui_styles.UNIFIED_STATUS.DEFAULT"
		)
		
		(element TooltipSystemHorizontalDivider)
		(block
			(style (width = 100%) (paddingRight = "-M") (paddingLeft = "-M") (paddingBottom = "-SXS") (paddingTop = "-SXS"))
			(controller $Repeat renderer='EconomicBoostInfotipItem'
				(bind count "purchasableEcoBoostsColByAmountLen")
				(args
					_collection = "purchasableEcoBoostsColByAmountCollection"
					_slotId = "_slotId"
					_slotType = "_slotType"
				)
			)
		)
		
		(element TooltipSystemHorizontalDivider)
		(element TooltipSystemStatusLine
			_unifiedStatus = "mouseInstruction._unifiedStatus"
			_text = "mouseInstruction._text"
		)
	)
)

(def element EconomicBoostInfotipItem (_collection:dhCollection, _installedId:number=null)
	(scope
		(macro PULL_SHIP_ID)
		(macro MOUSE_HANDLER_SCOPE)

		(var ecoBoostEntity:dhEntity = "_collection[$index]")
		(var ecoBoostId:number = "ecoBoostEntity.ecoBoost.id" (event "ecoBoostEntity.ecoBoost.evUpdated"))
		(struct ecoBoostPrice = PULL_PRICE(_entityId = "toString(ecoBoostId)" _actionId = "SC.Common.PRICE_ACTION.BUY"))
		
		(var canBeBought:bool = "ecoBoostEntity.ecoBoost.canBuy" (event "ecoBoostEntity.ecoBoost.evUpdated"))
		(var name:str = "ecoBoostEntity.ecoBoost.name ?: ''" (event "ecoBoostEntity.ecoBoost.evUpdated"))
		(var amount:number = "ecoBoostEntity.countComponent.value ?: 0" (event "ecoBoostEntity.countComponent.evUpdate"))
		(var isPriceTagVisible:bool = "canBeBought && amount == 0 && ecoBoostPrice.info")

		(var hasAnyBoosts:bool = "amount > 0")

		(var isInstalled:bool = "_installedId == ecoBoostId")
		(var isInstalledAndActive:bool = "isInstalled && hasAnyBoosts")
		(var isExpired:bool = "isInstalled && !hasAnyBoosts")
		(var isUnclickable:bool = "!canBeBought && !isInstalled && !hasAnyBoosts")

		(var boostTitle:str = "'IDS_' + toUpper(name)")
		(var ecoBoostAlphaParam:number = "isUnclickable ? 0.5 : 1")

		(var attributesPositive:array = "ecoBoostEntity ? ecoBoostEntity.attributes.positive : []" (event "ecoBoostEntity.attributes.evChanged"))
		(var boostInfluence:str = "attributesPositive.length ? attributesPositive[0]['measuredValue'] : ''")
		(var boostMeasure:str = "attributesPositive.length ? attributesPositive[0]['measure'] : ''")

		(var resourceEntity:dhEntity = "getSingleEntity(CC.accountResource)")
		(var accountResourceComponent:dhComponent = "resourceEntity.accountResource")
		(var operationsAccountLocked:bool = "accountResourceComponent.operationsLocked"		(event "accountResourceComponent.evOperationsLockChanged"))

		(var clickAction:str = "operationsAccountLocked || isUnclickable			? '' :
								!hasAnyBoosts && canBeBought						? ECOBOOST_ACTION.OPEN_MODAL_BUY_AND_INSTALL :
								isInstalled											? ECOBOOST_ACTION.UNINSTALL :
								hasAnyBoosts || (!hasAnyBoosts && !canBeBought)		? ECOBOOST_ACTION.INSTALL
																					: ''")

		(var infotipItemBGState:number = "	isUnclickable	? SC.Ui_styles.BUTTON_STATE.DISABLED :
											mouseDown		? SC.Ui_styles.BUTTON_STATE.DOWN :
											rollOver		? SC.Ui_styles.BUTTON_STATE.OVER :
											isInstalled		? SC.Ui_styles.BUTTON_STATE.SELECTED
															: SC.Ui_styles.BUTTON_STATE.UP")
	)
	(dispatch "'evHideInfotip'" dir="EventDirection.UP" delay=0.1 (bind enabled "_installedId != null") (bind trigger "_installedId"))

	(bind name "'EconomicBoostInfotipItem_' + name")
	(style (width = 100%) (height = 96px))

	(block
		(style (width = 100%))
		(controller $Instance renderer='HorizontalDividerTwoPx' (bind enabled "$index > 0"))
	)

	(block
		(class $FullsizeAbsolute)
		(style (paddingTop = 1px))

		(controller $Tooltip
			(renderer = 'EconomicBoostTooltip')
			(args
				_id =					"ecoBoostId"
				_isInstalled =			"isInstalled"
				_noMouseInstructions =	"isUnclickable"
			)
			(macro DEFAULT_TOOLTIP_BEHAVIOUR)
		)

		(element MenuItemBackground
			_state =			"infotipItemBGState"
			_isAttentionState =	"isExpired"
		)

		(macro MOUSE_HANDLER
			_soundSet =	"clickAction ? 'button_card' : ''"
			_methods =	"[	{ type:	clickAction != ECOBOOST_ACTION.OPEN_MODAL_BUY_AND_INSTALL ? 'inputMapping.onAction' : '',	name: clickAction,	args: { boostId: ecoBoostId } },
							{ type:	clickAction == ECOBOOST_ACTION.OPEN_MODAL_BUY_AND_INSTALL ? 'inputMapping.onRequest' : '',	name: clickAction,	args: { _ecoBoostId: ecoBoostId, _isCommonBoost: true } }]"
		)
	)

	(hblock
		(style
			(hitTest = false)
			(align = "middle")
			(width = 100%)
			(height = 96px)
			(paddingTop = "S")
			(paddingBottom = "S")
			(paddingLeft = "SXS")
			(paddingRight = "SXS")
		)

		(block
			(style
				(width = 80px)
				(height = 80px)
				(marginRight = "S")
				(bind alpha "ecoBoostAlphaParam")
				(bind backgroundImage "'url:../eco_boosts/common/' + name + '.png'")
				(macro DESATURATION_DEFAULT "hasAnyBoosts || canBeBought || isInstalled")
			)
		)

		(block
			(style
				(width = 150px)
				(bind alpha "ecoBoostAlphaParam")
			)

			(tf
				(class $TextDefaultBoldNM)
				(style
					(width = 100%)
					(leading = -2)
					(bind textColor "isInstalledAndActive ?  SC.Ui_styles.SERVICE_COLORS.YELLOW : SC.Ui_styles.SERVICE_COLORS.WHITE")
					(bind alpha "isInstalledAndActive ? 1 : TA")
				)

				(bind text "boostInfluence + boostMeasure")
			)

			
			(block
				(bind name "'AmountOfBought_' + name")

				(style (marginTop = "SXS"))

				(tf
					(bind visible "hasAnyBoosts")
					(class $TextDefaultNM)
					(style (alpha = "TC"))
					(bind text "tr('IDS_IN_WAREHOUSE') + ' ' + formatSeparator(amount)")
				)

				(tf
					(bind visible "!hasAnyBoosts")
					(class $TextDefaultNM)
					(style (alpha = "TC"))
					(text = 'IDS_OUT_OF_STOCK')
				)
			)
			
		)

		
		(block
			(style
				(hitTest = false)
				(position = "absolute")
				(align = "middle")
				(right = 0px)
				(height = 100%)
			)

			(controller $Instance renderer='PriceTag'
				(bind enabled "canBeBought && !hasAnyBoosts")
				(args
					_priceInfo =		"ecoBoostPrice.info"
					_showDiscountTag =	true
				)
			)

			(controller $Instance renderer='CloseButton'
				(bind enabled "isInstalledAndActive && rollOver")
				(args
					_isDisabled = true
				)
			)

			(block
				(bind visible "isInstalledAndActive && !rollOver")
				(style
					(marginRight = "-XXS")
					(width = 19px)
					(height = 19px)
					(backgroundSize = "cover")
					(backgroundImage = 'url:../service_kit/unified_status_icons/icon_check.png')
				)
			)
		)
		
	)
)

(def element InstallEconomicBoostsRaritiesButton (_isAnyBoostInstalled:bool)
	(scope
		(event evHideInfotip)
		(macro MOUSE_HANDLER_SCOPE)

		(var expendableBoostsInStorageCollection:dhCollection =	"getCollection(CC.ecoBoost).getChildByPath('availableToUser.' + 'byType.' + SC.Common.ECOBOOST_TYPES.COMMON + '.expendableBoostsInStorage')")
		(var hasExpendableBoostsInStorage:bool = "expendableBoostsInStorageCollection.length > 0")

		(macro PULL_SHIP_ID)
		(var shipEntity:dhEntity = "getPrimaryEntity(CC.ownShip, viewedShipId)")
		(var ownShipInfo:dhComponent = "shipEntity.ownShip")

		(var isLocked:bool =		"ownShipInfo.isLocked"		(event "ownShipInfo.evUpdateLock"))
		(var isInFormation:bool =	"ownShipInfo.isInFormation"	(event "ownShipInfo.evUpdateLock"))
		(var isNeedRepair:bool =	"ownShipInfo.isNeedRepair"	(event "ownShipInfo.evUpdateDockState"))

		(var resourceEntity:dhEntity = "getSingleEntity(CC.accountResource)")
		(var operationsAccountLocked:bool = "resourceEntity.accountResource.operationsLocked" (event "resourceEntity.accountResource.evOperationsLockChanged"))

		(var isInFormationOrLocked:bool =	"isInFormation || isLocked || isNeedRepair")
		(var isActionsAvailable:bool =		"!(operationsAccountLocked || isInFormationOrLocked) && (hasExpendableBoostsInStorage || _isAnyBoostInstalled)")

		(var isVisuallyEnabled:bool = "(_isAnyBoostInstalled || hasExpendableBoostsInStorage) && !isInFormationOrLocked")
		(var backgroundPath:str = "	mouseDown	?	'url:../service_kit/buttons/button_dock/down.png' :
									rollOver	?	'url:../service_kit/buttons/button_dock/over.png'
												:	'url:../service_kit/buttons/button_dock/default.png'")

		(var isActiveBtnInstallAll:bool =	"!_isAnyBoostInstalled && hasExpendableBoostsInStorage && !isInFormationOrLocked")
		(var isActiveBtnUninstallAll:bool =	"_isAnyBoostInstalled  && !isInFormationOrLocked")

		(var isInfotipVisible:bool = false)
		(var isInfotipAvailable:bool = "isVisuallyEnabled && !_isAnyBoostInstalled")

		(var mouseInstruction:dict = "	isInFormation					? {	unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																			text: 'IDS_SET_UNREADY_DIVISION_FIRST_TO_OPERATE_ECONOMIC_BOOSTS' } :
										isLocked						? {	unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																			text: 'IDS_LEAVE_BATTLE_FIRST_TO_OPERATE_ECONOMIC_BOOSTS' } :
										isNeedRepair					? {	unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																			text: 'IDS_SERVICE_SHIP_TO_OPERATE_ECONOMIC_BOOSTS' } :
										!hasExpendableBoostsInStorage &&
										!_isAnyBoostInstalled			? {	unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.ATTENTION,
																			text: 'IDS_NO_EXPANDABLE_ECONOMIC_BOOSTS_IN_STORAGE'}
																		: {	unifiedStatus: SC.Ui_styles.UNIFIED_STATUS.MOUSE_LEFT,
																			text: _isAnyBoostInstalled	? 'IDS_UNINSTALL_ALL_ECONOMIC_BOOSTS_HINT'
																										: 'IDS_INSTALL_ECONOMIC_BOOSTS_RARITY_LEVEL_HINT' }")

		(struct ecoBonusFinalNewTip = PULL_GUIDING_TIP( _type = "SC.Context_guiding_tip.TIP_TYPE.ECO_BONUS_FINAL" ))
		(struct ecoBonusFinalRepeatNewTip = PULL_GUIDING_TIP( _type = "SC.Context_guiding_tip.TIP_TYPE.ECO_BONUS_FINAL_REPEAT" ))

		(var ecoBonusTipId:number = "	ecoBonusFinalNewTip.isActive		? SC.Context_guiding_tip.TIP_TYPE.ECO_BONUS_FINAL :
										ecoBonusFinalRepeatNewTip.isActive	? SC.Context_guiding_tip.TIP_TYPE.ECO_BONUS_FINAL_REPEAT
																			: SC.Context_guiding_tip.TIP_TYPE.NONE")
		(var ecoBonusTipVisible:bool = "ecoBonusTipId != SC.Context_guiding_tip.TIP_TYPE.NONE && !_isAnyBoostInstalled")
	)
	(style (macro DESATURATION_DEFAULT "!isVisuallyEnabled"))

	(element DefaultButton
		_isDropdown = "!_isAnyBoostInstalled"
		_enabled = "isActiveBtnInstallAll || isActiveBtnUninstallAll"
		_isTransactionBtn = true
		_width = 142px
		_type = "SC.Ui_styles.BUTTON_TYPE.SECONDARY"
		_size = "SIZE.SMALL"
		_externalMouseDown = "isInfotipVisible"
		_label = "_isAnyBoostInstalled	? 'IDS_MODAL_WINDOW_ECONOMIC_BOOSTS_EXPENDABLE_UNMOUNT_ALL'
										: 'IDS_MODAL_WINDOW_ECONOMIC_BOOSTS_EXPENDABLE_INSTALL'"
		_methods = "[	{	type: !isInfotipAvailable ? 'inputMapping.onAction' : '',
							name: SC.Ui_common.ECOBOOST_ACTIONS.UNINSTALL_ALL,
							args: { shipId: viewedShipId } }]"
	)

	(element GuidingTipHub
		_tipId = "ecoBonusTipId"
		_tipPositioning = "TIP_POSITION_RIGHT"
		_offsetX =			10px
		_pointerOffset =	64px
		_modalWindowName = 'ModalWindowEconomicsManagement'
	)

	(controller $Tooltip
		(bind enabled "isInfotipAvailable")
		(renderer = 'EconomicBoostsRaritiesInfotip')

		(macro VERTICAL_INFOTIP_BEHAVIOUR "1")
		(macro TOOLTIP_HIDE_ON_EVENT "evHideInfotip")

		(align = "center|bottom")

		(screenBoundsOffset = {	left:	10,
								top:	10,
								right:	10,
								bottom:	10 })

		(pinTop='InfotipPinTop')
		(pinBottom='InfotipPinBottom')
		(bind isInfotipVisible "true" on='evStartShow')
		(bind isInfotipVisible "false" on='evHide')
	)

	(controller $Tooltip
		(renderer = 'SimpleStatusTooltip')
		(args
			_text = "mouseInstruction.text"
			_unifiedStatus = "mouseInstruction.unifiedStatus"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR)
	)
)

(def element EconomicBoostsRaritiesInfotip ()
	(scope
		(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_SCOPE)
		(var ecoBoostCollection:dhCollection = "getCollection(CC.ecoBoost)")
	)
	(style (width = 160px))

	(macro TOOLTIP_SYSTEM_DEFAULT_BACKGROUND_MARKUP _isInfotip="true")
	(element INFOTIP_SYSTEM_DEFAULT_CONTAINER
		(controller $Repeat renderer='EconomicBoostsRarityInfotipSlot'
			(bind count "SC.Ui_common.ECOBOOST_RARITY.ALL.length")
			(args
				_ecoBoostCollection = "ecoBoostCollection"
			)
		)
	)
)

(def element EconomicBoostsRarityInfotipSlot (_ecoBoostCollection:dhCollection)
	(scope
		(event evHideInfotip)
		(event evFireInfotipHiding)
		(macro MOUSE_HANDLER_SCOPE)

		(var rarityLevel:number = "$index")

		(var ecoBoostsOnStorageCollection:dhCollection = "_ecoBoostCollection.getChildByPath('availableToUser.byType.' + SC.Common.ECOBOOST_TYPES.COMMON + '.expendableBoostsInStorage.byRarity.' + toString(rarityLevel + 1))")
		(var isAvailable:bool = "ecoBoostsOnStorageCollection.length > 0")

		(var infotipItemBGState:number = "	!isAvailable	? SC.Ui_styles.BUTTON_STATE.DISABLED :
											mouseDown		? SC.Ui_styles.BUTTON_STATE.DOWN :
											rollOver		? SC.Ui_styles.BUTTON_STATE.OVER
															: SC.Ui_styles.BUTTON_STATE.UP")
	)

	(bind name "'EconomicBoostsRarityInfotipSlot_' + toString(rarityLevel + 1)")
	(style (width = 100%))

	(dispatch evHideInfotip dir="EventDirection.UP" args="{}" delay=0.1 (event "evFireInfotipHiding"))
	(block
		(style (width = 100%))
		(controller $Instance renderer='HorizontalDividerTwoPx' (bind enabled "rarityLevel > 0"))
	)

	(block
		(class $FullsizeAbsolute)
		(style (paddingTop = 1px))

		(element MenuItemBackground
			_state = "infotipItemBGState"
		)

		(macro MOUSE_HANDLER
			_enabled = "isAvailable"
			_methods =	"[{	type: 'inputMapping.onAction',
							name: SC.Ui_common.ECOBOOST_ACTIONS.SET_RARITY_LEVEL,
							args: {rarityLevel: rarityLevel + 1} }]"
			_dispatchedEv = "'evFireInfotipHiding'"
			_soundSet =	"'button_signal'"
		)
	)

	(hblock
		(style
			(hitTest = false)
			(align = "middle")
			(width = 100%)
			(height = 28px)
			(padding = "S")
			(bind alpha "isAvailable ? 1 : 0.3")
		)
		(block
			(style
				(width = 16px)
				(height = 16px)
				(marginRight = "S")
				(bind backgroundImage "'swf:../service_kit/rarities_svg/rarities_svg.swf:rarity_' + toString(rarityLevel)")
			)

			(element RarityRibbon
				_rarity = "rarityLevel"
			)
		)
		(tf
			(class $TextDefaultNM)
			(bind text "'IDS_ECONOMIC_BOOST_INFOTIP_RARITY_TYPE_' + toString(rarityLevel + 1)")
		)
	)
)

(def element EconomicBoostsEmptyCardBackground (_colorTransform:dict)
	(class $FullsizeAbsolute)
	(style (backgroundColor = "NO_COLOR"))
	(colorTransform = "_colorTransform")

	(controller $Animation
		(bindcall play
			duration = 0.1
			to = "{ colorTransform: _colorTransform }"
			easing = "Easing.quad_out"
			action = "kill"
			(bind trigger "_colorTransform")
		)
	)
)