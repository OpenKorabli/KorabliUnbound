(def css $ExteriorListHolder()
	(paddingLeft = "MS")
	(paddingRight = "MS")
)

(def css $ExteriorItemsGroup()
	(width = 100%)
	(paddingTop = "-SXS")
	(paddingBottom = "M")
	(paddingLeft = "-SXS")
	(paddingRight = "-SXS")
)

(def css $ExteriorCategoryLabelMargin()
	(marginBottom = "M")
)

(def css $ExteriorItemPadding()
	(padding = "SXS")
)

(def css $ExteriorItemSize()
	(width = 60px)
	(height = 60px)
)

(def css $ExteriorItemSizeWithBorder()
	(width = 64px)
	(height = 64px)
)

(def element ExteriorInsetContent (_exteriorPage:str)
	(scope
		(macro HIGH_CONTRAST_DATA_SCOPE)

		(macro STAGE_SIZE)

		(macro CAROUSEL_HEIGHT_SCOPE)
		(macro PULL_SHIP_ID)
		(var shipEntity:gfx = "$datahub.getPrimaryEntity(CC.ownShip, playerShipId)")
		(var ownShipComponent:gfx = "shipEntity.ownShip")
		(var shipComponent:gfx = "shipEntity.ship")

		(var playerShips:gfx = "$datahub.getCollection(CC.ownShip)")

		(var isInFormation:bool = "ownShipComponent.isInFormation" (event "ownShipComponent.evUpdateLock"))
		(var isLocked:bool = "ownShipComponent.isLocked" (event "ownShipComponent.evUpdateLock"))
		(var isNeedRepair:bool = "ownShipComponent.isNeedRepair" (event "ownShipComponent.evUpdateDockState"))

		(var selectedBattleTypesCollection:gfx = "$datahub.getCollection(CC.battleType).getChildByPath('selected')")
		(var selectedBattleTypeEntity:gfx = "selectedBattleTypesCollection.items[0]" (event "selectedBattleTypesCollection.evAdded") (event "selectedBattleTypesCollection.evRemoved"))
		(var battleUIInfoComponent:gfx = "selectedBattleTypeEntity.battleUIInfo")
		(var scenariosTagsMask:number = "battleUIInfoComponent.tagsMaskForUI")

		
		(var ensignsCollection:gfx = "$datahub.getCollection(CC.ensign)")
		(var activeEnsigns:gfx = "ensignsCollection.getChildByPath('activeEnsigns')" (event "ensignsCollection.evChildAdded") (event "ensignsCollection.evChildRemoved"))
		(var activeEnsignsItems:array = "activeEnsigns.items" (event "activeEnsigns.evAdded") (event "activeEnsigns.evRemoved"))

		(var installedEnsigns:gfx = "ensignsCollection.getChildByPath('installed')" (event "ensignsCollection.evChildAdded") (event "ensignsCollection.evChildRemoved"))
		(var installedEnsignsItems:array = "installedEnsigns.items" (event "installedEnsigns.evAdded") (event "installedEnsigns.evRemoved"))
		(var ensignLimit:number = "shipEntity.ownShip.ensignLimit" (event "shipEntity.ownShip.evUpdateConfig"))
		(var ensignsTabLabel:str = "activeEnsignsItems && ensignLimit > 1	? (tr('IDS_FLAG') + ' ' + toString(installedEnsignsItems.length) + '/' + toString(ensignLimit))
																			: 'IDS_FLAG'")
		(var isEnsignPage:bool = "_exteriorPage == SC.Exteriors.EXTERIOR_NAMES.ENSIGN")

		(var navalFlags:array = "shipComponent.availableNavalFlags" (event "shipComponent.evCurrentFlagChanged"))
		(var isNavalFlagsGroupVisible:bool = "navalFlags.length > 1  && _exteriorPage != SC.Exteriors.EXTERIOR_NAMES.CAMOUFLAGE")

		(var canEquipCamouflage:bool = "shipEntity.ownShip.canEquipCamouflage" (event "shipEntity.ownShip.evUpdateConfig"))

		
		(var installedCamouflageEntity:gfx = "$datahub.getFirstWatcher(CC.installedCamouflage)")
		(var exteriorsInStorage:number = "installedCamouflageEntity.countComponent.value" (event "installedCamouflageEntity.countComponent.evUpdate"))
		(var isCamouflageExpired:bool = "installedCamouflageEntity	? exteriorsInStorage == 0 : false")
		(var isCamouflagePage:bool = "_exteriorPage == SC.Exteriors.EXTERIOR_NAMES.CAMOUFLAGE")

		
		(struct exteriorChangeTabNewTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_CHANGE_TAB"))
		(struct exteriorDesc1NewTip =				PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_DESC_1"))
		(struct exteriorDesc2NewTip =				PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_DESC_2"))
		(struct exteriorDesc3NewTip =				PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_DESC_3"))
		(struct exteriorChangeTabRepeatNewTip =		PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_CHANGE_TAB_REPEAT"))
		(struct exteriorDesc1RepeatNewTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_DESC_1_REPEAT"))
		(struct exteriorDesc2RepeatNewTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_DESC_2_REPEAT"))
		(struct exteriorFinalRepeatNewTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_FINAL_REPEAT"))
		(struct exteriorCantInstallNewTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_CANT_INSTALL_CAMO"))
		(struct exteriorBlockedDivisionTip =		PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_BLOCKED_DIV_READY"))
		(struct exteriorBlockedLockedTip =			PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_BLOCKED_BATTLE"))
		(struct exteriorBlockedMaintenanceTip =		PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_BLOCKED_MAINTENANCE"))

		(var newTipId:number = "	exteriorDesc1NewTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_DESC_1 :
									exteriorDesc2NewTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_DESC_2 :
									exteriorDesc3NewTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_DESC_3 :
									exteriorDesc1RepeatNewTip.isActive		? SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_DESC_1_REPEAT :
									exteriorDesc2RepeatNewTip.isActive		? SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_DESC_2_REPEAT :
									exteriorFinalRepeatNewTip.isActive		? SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_FINAL_REPEAT :
									exteriorCantInstallNewTip.isActive		? SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_CANT_INSTALL_CAMO :
									exteriorChangeTabNewTip.isActive		? SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_CHANGE_TAB :
									exteriorChangeTabRepeatNewTip.isActive	? SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_CHANGE_TAB_REPEAT :
									exteriorBlockedDivisionTip.isActive		? SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_BLOCKED_DIV_READY :
									exteriorBlockedLockedTip.isActive		? SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_BLOCKED_BATTLE :
									exteriorBlockedMaintenanceTip.isActive	? SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_BLOCKED_MAINTENANCE
																			: SC.Context_guiding_tip.TIP_TYPE.NONE")

		(var hasFinishButton:bool = "exteriorFinalRepeatNewTip.isActive")
		(var hasNextButton:bool = "isIn(newTipId, [	SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_DESC_1,
													SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_DESC_2,
													SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_DESC_3,
													SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_DESC_1_REPEAT,
													SC.Context_guiding_tip.TIP_TYPE.EXTERIOR_DESC_2_REPEAT ])")

		(var isNewTipVisible:bool = " newTipId != SC.Context_guiding_tip.TIP_TYPE.NONE")
		(var hideExteriorsByScenario:number = "scenariosTagsMask & (1 << SC.Common.SCENARIO_TAGS_MASK.HIDE_EXTERIORS)")

		(var hideExteriorsTag:bool = "((shipComponent.tagsMask & (1 << SC.Ships.SHIP_TAG.HIDE_EXTERIORS)) != 0 && playerShips.length > 0 && playerShipId > 0) || hideExteriorsByScenario || isNeedRepair")
		(var statusDockTab:str = "	playerShips.length == 0		? 'IDS_NO_SHIPS' :
									hideExteriorsByScenario		? 'IDS_EXTERIOR_UNAVAILABLE_BY_SCENARIO' :
									isNeedRepair				? 'IDS_EXTERIOR_UNAVAILABLE_BY_MAINTENANCE' :
									hideExteriorsTag 			? 'IDS_EXTERIOR_UNAVAILABLE'
																: null")

		(event evExteriorPageShow)
		(event evExteriorPageHide)
		(event evExteriorContentChanged)
		(macro PULL_ROUTE "SC.Ui_windows.ROUTE.EXTERIOR" "'isActiveExteriorPage'")

		(var contentScrollHeight:number = 0)
		(var navalFlagBlockHeight:number = "isNavalFlagsGroupVisible ? 110 : 0")

		(var maxScrollHeight:number = 0)
		(var exteriorPageHeight:number = "min(contentScrollHeight + (isCamouflagePage ? 30 : 0) + navalFlagBlockHeight, maxScrollHeight) + TAB_BUTTON_DEFAULT_HEIGHT")

		(var currentScrollHeight:number = "min(contentScrollHeight, maxScrollHeight - (isCamouflagePage ? 30 : 0) - navalFlagBlockHeight)")
		(var isAvailableHideExteriors:bool = "hideExteriorsTag && isActiveExteriorPage")
	)
	(style
		(position = "absolute")
		(width = 444px)
		(height = 100%)
		(bind paddingTop "DOCK_TAB_BUTTON.HEIGHT + 10")
		(bind paddingBottom "carouselAreaHeight")
	)
	(dispatch evExteriorPageShow on='addedToStage' 			(bind enabled "isActiveExteriorPage") (bind trigger "isActiveExteriorPage"))
	(dispatch evExteriorPageHide 							(bind enabled "!isActiveExteriorPage") (bind trigger "isActiveExteriorPage"))
	(dispatch evExteriorContentChanged						(bind trigger "_exteriorPage"))

	(block
		(bind visible "hideExteriorsTag")

		(style
			(position = "absolute")
			(marginTop = "XL")
			(alpha = "isAvailableHideExteriors ? 1 : 0")
			(visualOffsetY = " isAvailableHideExteriors ? 0px : 10px")
		)

		(controller $Animation
			(bindcall play
				from =		"{ alpha: 0, visualOffsetY: 10px }"
				to =		"{ alpha: 1, visualOffsetY: 0px }"
				duration =	0.15
				(bind trigger "hideExteriorsTag || isActiveExteriorPage")
				(bind enabled "isAvailableHideExteriors")
			)
		)

		(element DockTabLockedPlug _text = "statusDockTab")
	)

	
	(block
		(style (width = 100%))
		(controller $Instance renderer='GuidingTipHub'
			(bind enabled "isNewTipVisible")
			(args
				_tipId =			"newTipId"
				_tipPositioning =	"TIP_POSITION_RIGHT"
				_offsetX =			5px
				_hasNextButton =	"hasNextButton"
				_hasFinishButton =	"hasFinishButton"
				_noArrow =			true
				_noPointer =		true
				_screenOffsetTop =	"XXL"
				_modalWindowName =	'Dock'
			)
		)
	)

	(block
		(bind visible "!hideExteriorsTag")
		(class $Fullsize)
		(style
			(bind visualOffsetY "15px"	init=true watch=false (event "evExteriorPageShow") (event "evExteriorPageHide"))
			(bind alpha "0"				init=true watch=false (event "evExteriorPageShow") (event "evExteriorPageHide"))
		)

		(controller $Animation
			(bindcall play
				duration =	0.2
				keyframes = "[
					{ percent:0,	to:{ alpha: 0, visualOffsetY: 15px }},
					{ percent:10,	to:{ alpha: 0, visualOffsetY: 15px }},
					{ percent:100,	to:{ alpha: 1, visualOffsetY: 0px }}
				]"
				easing = "Easing.quad_out"
				action = "kill"
				(event "evExteriorPageShow")
			)
		)

		(block
			(style
				(position = "absolute")
				(width = 100%)
				(bind height "exteriorPageHeight")
			)
			(block
				(bind visible "isHighContrast")
				(class $FullsizeAbsolute)
				(style (backgroundImage = 'url:../service_kit/panel_backgrounds/hint_panel_high_contrast.png') (scale9grid = 3))
			)

			(block
				(class $FullsizeAbsolute)
				(controller $Instance renderer='BlurMap'
					(bind enabled "!isHighContrast")
				)
			)
		)
		(block
			(class $Fullsize)

			(element ExteriorsTabButtons
				_exteriorPage = "_exteriorPage"
				_canEquipCamouflage = "canEquipCamouflage"
				_isCamouflageExpired = "isCamouflageExpired"
				_ensignsTabLabel = "ensignsTabLabel"
			)
			(block
				(class $Fullsize)
				(block
					(style (height = 100%))
					(bind maxScrollHeight "$globalLayoutBounds[3]" (event "$evLayoutBoundsChanged"))
				)

				(controller $Animation
					(bindcall play
						duration = 0.1
						from = "{ alpha: 0, visualOffsetY: 10px }"
						to = "{ alpha: 1, visualOffsetY: 0px }"
						easing = "Easing.quad_in"
						action = "kill"
						(event "evExteriorContentChanged")
					)
				)

				(scrollArea
					(style
						(position = "absolute")
						(width = 100%)
						(bind height "currentScrollHeight")
						(backgroundColor = "NO_COLOR")
					)

					(verticalSlider ScrollBarVLight
						_singleStep = 150
					)

					(hscrollPolicy = 'off')
					(vscrollPolicy = 'auto')

					(topShadow = 'ScrollAreaShadowTop')
					(bottomShadow = 'ScrollAreaShadowBottom')

					(animationDuration = 0.2)
					(wheelScrollSpeed = 1.0)
					(wheelScrollAcceleration = 0.80)
					(animationEasing = "Easing.cubic_out")

					(content
						(style (width = 444px) (paddingTop = "MS"))
						(bind contentScrollHeight "$globalLayoutBounds[3]" (event "$evLayoutBoundsChanged"))

						(block
							(style (width = 100%))

							(controller $Instance renderer='CamouflagesPage'
								(bind enabled "isCamouflagePage")
							)

							(controller $Instance renderer='EnsignsPage'
								(bind enabled "isEnsignPage")
							)
						)
					)
				)
				(block
					(bind visible "isCamouflagePage")
					(style
						(width = 100%) (position = "absolute") (marginLeft = 1px) (marginRight = 1px) (marginBottom = 1px)
						(bind top "currentScrollHeight")
					)
					(controller $Instance renderer='CamouflageAutopurchaseBlock'
						(args
							_isActionsAvailable = "!(isInFormation || isLocked || isNeedRepair)"
						)
					)
				)
				
				(block
					(bind visible "isNavalFlagsGroupVisible")
					(style
						(width = 100%) (position = "absolute")
						(bind top "currentScrollHeight")
					)
					(controller $Instance renderer = 'NavalGroup' (bind enabled "isNavalFlagsGroupVisible"))
				)
			)
		)
	)
)

(def element CamouflagesPage ()
	(scope
		(var exteriorCollection:gfx = "$datahub.getCollection(CC.ownCamouflage)")
		(var permoflageCollection:gfx = "exteriorCollection.getChildByPath('permanent.sorted')" (event "exteriorCollection.evChildAdded") (event "exteriorCollection.evChildRemoved"))

		(var resourceEntity:gfx = "$datahub.getSingleEntity(CC.accountResource)")
		(var operationsAccountLocked:bool = "resourceEntity.accountResource.operationsLocked" (event "resourceEntity.accountResource.evOperationsLockChanged"))

		(macro PULL_SHIP_ID)
		(var permoflageItems:array = "permoflageCollection.items" (event "permoflageCollection.evAdded") (event "permoflageCollection.evRemoved"))


		(var shipEntity:gfx = "$datahub.getPrimaryEntity(CC.ownShip, playerShipId)")
		(var permoflageFirstBuyGoldDiscount:number = "shipEntity.ownShip.permoflageFirstBuyGoldDiscount" (event "shipEntity.ownShip.evPermoflageFirstBuyGoldDiscountChanged"))

		(var isInFormation:bool = "shipEntity.ownShip.isInFormation" (event "shipEntity.ownShip.evUpdateLock"))
		(var isLocked:bool = "shipEntity.ownShip.isLocked" (event "shipEntity.ownShip.evUpdateLock"))
		(var isNeedRepair:bool = "shipEntity.ownShip.isNeedRepair" (event "shipEntity.ownShip.evUpdateDockState"))

		(macro USER_PREF_DATA)
		(var previewExteriorId:number = "toNumber(userPrefs.previewExteriorId)")
	)
	(name = 'CamouflagesPage')
	(style (width = 100%))

	(class $ExteriorListHolder)

	(block
		(bind visible "!permoflageItems.empty")
		(style (width = 100%))
		(tf
			(class $ExteriorCategoryLabelMargin)
			(class $TextDefaultBold17NM)
			(style (alpha = "TA"))
			(text = 'IDS_CAMOUFLAGE_LIST_PERMANENT')
		)

		(htile
			(class $ExteriorItemsGroup)
			(controller $Repeat renderer='PermoflageItem'
				(bind count "permoflageItems.length")
				(args
					_exteriorEntity = "permoflageItems[$index]"
					_isActionsAvailable = "!(operationsAccountLocked || isInFormation || isLocked || isNeedRepair)"
					_permoflageFirstBuyGoldDiscount = "permoflageFirstBuyGoldDiscount"
					_previewExteriorId = "previewExteriorId"
				)
			)
		)
	)

	(block
		(style (width = 100%))
		(controller $Instance renderer='CamouflageList'
			(args
				_isActionsAvailable = "!(operationsAccountLocked || isInFormation || isLocked || isNeedRepair)"
				_previewExteriorId = "previewExteriorId"
			)
		)
	)
)

(def element CamouflageList (_isActionsAvailable:bool, _previewExteriorId:number)
	(style (width = 100%))
	(tf
		(class $ExteriorCategoryLabelMargin)
		(class $TextDefaultBold17NM)
		(style (alpha = "TA"))
		(text = 'IDS_CAMOUFLAGE_LIST_EXPENDABLE')
	)
	(block
		(style (width = 100%))
		(controller $Repeat renderer='CamouflageGroup'
			(bind count "SC.Camo_classification.CAMOUFLAGE_GROUPS.SORT_ORDER.length")
			(args
				_groupName = "SC.Camo_classification.CAMOUFLAGE_GROUPS.SORT_ORDER[$index]"
				_isActionsAvailable = "_isActionsAvailable"
				_previewExteriorId = "_previewExteriorId"
			)
		)
	)
)

(def element CamouflageGroup (_groupName:str, _isActionsAvailable:bool, _previewExteriorId:number)
	(scope
		(var collectionPath:str = "'expendable.byGroup.' + _groupName + '.sorted'")

		(var exteriorCollection:gfx = "$datahub.getCollection(CC.ownCamouflage)")
		(var camouflagesInGroup:gfx = "exteriorCollection.getChildByPath(collectionPath)" (event "exteriorCollection.evChildAdded") (event "exteriorCollection.evChildRemoved"))
		(var camouflagesInGroupItems:array = "camouflagesInGroup.items" (event "camouflagesInGroup.evAdded") (event "camouflagesInGroup.evRemoved"))
		(struct camouflageGroupPrice = PULL_PRICE(_entityId = "'CAMOUFLAGE_GROUP_' + _groupName" _actionId = "SC.Common.PRICE_ACTION.BUY"))
	)
	(bind visible "camouflagesInGroupItems.length > 0")
	(style (width = 100%))

	(hblock
		(class $ExteriorCategoryLabelMargin)

		(tf
			(class $TextDefaultNM)
			(style (alpha = "TA") (marginRight = "S"))
			(bind text "tr('IDS_CAMOUFLAGE_EXPENDABLE_GROUP_' + toUpper(_groupName))")
		)

		(block
			(controller $Instance renderer = 'PriceTag'
				(bind enabled "camouflageGroupPrice.info.finalPrice > 0")
				(args
					_priceInfo = "camouflageGroupPrice.info"
					_showDiscountTag = true
				)
			)
		)
	)

	(htile
		(class $ExteriorItemsGroup)
		(controller $DynamicRepeat renderer='CamouflageItem'
			(bind count "camouflagesInGroupItems.length")
			(args
				_exteriorEntity = "camouflagesInGroupItems[$index]"
				_isActionsAvailable = "_isActionsAvailable"
				_groupLength = "camouflagesInGroupItems.length"
				_previewExteriorId = "_previewExteriorId"
			)

			(itemWidth = 84px)
			(itemHeight = 84px)
			(itemOffset = 168px)
			(sharedCache = "_groupName != 'common'")
		)
	)
)

(def element CamouflageAutopurchaseBlock (_isActionsAvailable:bool)
	(scope
		(macro PULL_SHIP_ID)
		(macro PULL_OWN_SHIP_SCOPE "playerShipId" "'shipEntity'" "'shipInfo'")

		(var installedCamouflageWatcher:gfx = "$datahub.getFirstWatcher(CC.installedCamouflage)")
		(var installedCamouflageEntity:gfx = "installedCamouflageWatcher.entity" (event "installedCamouflageWatcher.event"))

		(var exteriorConfig:gfx = "installedCamouflageEntity.exteriorConfig")
		(var isAutopurchaseOnDH:bool = "shipEntity.ownShip.autopurchaseCamouflage" (event "shipEntity.ownShip.evUpdateAutorecharge"))
	)

	(style
		(width = 100%)
		(flow = "horizontal")
		(align = "right")
		(backgroundColor = "SC.Ui_styles.SERVICE_COLORS.INNER_PANEL")
	)

	(block
		(style (margin = "S"))
		(controller $Instance renderer='SwitchWithLeftLabel'
			(args
				_state = "isAutopurchaseOnDH"
				_label = 'IDS_AUTOPURCHASE'
				_enabled = "exteriorConfig.type == SC.Exteriors.EXTERIOR_TYPE.CAMOUFLAGE && exteriorConfig.canBuy && _isActionsAvailable"
				_methods = "[ {type: 'inputMapping.onAction', name: 'autopurchaseCamouflage', args: { isAutoBuy: !isAutopurchaseOnDH }} ]"

			)
		)
	)

	(controller $Tooltip
		(renderer = 'AutoPurchaseTooltip')
		(args
			_type = "SC.Common.AUTOPURCHASABLE_ITEMS.CAMOUFLAGE"
			_isAutopurchaseOn = "isAutopurchaseOnDH"
		)
		(macro DEFAULT_TOOLTIP_BEHAVIOUR)
	)
)

(def element EnsignsPage ()
	(scope
		(macro PULL_SHIP_ID)

		(var resourceEntity:gfx = "$datahub.getSingleEntity(CC.accountResource)")
		(var operationsAccountLocked:bool = "resourceEntity.accountResource.operationsLocked" (event "resourceEntity.accountResource.evOperationsLockChanged"))

		(var shipEntity:gfx = "$datahub.getPrimaryEntity(CC.ownShip, playerShipId)")
		(var isInFormation:bool = "shipEntity.ownShip.isInFormation" (event "shipEntity.ownShip.evUpdateLock"))
		(var isLocked:bool = "shipEntity.ownShip.isLocked" (event "shipEntity.ownShip.evUpdateLock"))
		(var isNeedRepair:bool = "shipEntity.ownShip.isNeedRepair" (event "shipEntity.ownShip.evUpdateDockState"))

		(var ensignGroups:array = "[SC.Common.ENSIGN_TYPE.REWARD, SC.Common.ENSIGN_TYPE.HISTORICAL, SC.Common.ENSIGN_TYPE.SPECIAL]")

		(var ensignsCollection:gfx = "$datahub.getCollection(CC.ensign)")
		(var activeEnsigns:gfx = "ensignsCollection.getChildByPath('activeEnsigns')" (event "ensignsCollection.evChildAdded") (event "ensignsCollection.evChildRemoved"))
		(var activeEnsignsItems:array = "activeEnsigns.items" (event "activeEnsigns.evAdded") (event "activeEnsigns.evRemoved"))
	)
	(name = 'EnsignsPage')
	(style (width = 100%))

	(block
		(bind visible "!activeEnsignsItems.length")
		(style (paddingBottom = "M") (width = 100%) (align = "center"))
		(tf
			(class $TextDefaultBold17NM)
			(style (alpha = "TA"))
			(bind text "toUpper(tr('IDS_NO_ENSIGNS_AVAILABLE'))")
		)
	)

	(class $ExteriorListHolder)
	(controller $Repeat renderer='EnsignList'
		(bind count "ensignGroups.length")
		(args
			_ensignCollection = "ensignsCollection"
			_categoryEnsign = "ensignGroups[$index]"
			_isActionsAvailable = "!(operationsAccountLocked || isInFormation || isLocked || isNeedRepair)"
		)
	)
)

(def element NavalGroup ()
	(scope
		(macro PULL_SHIP_ID)
		(struct shipInfo = PULL_OWN_SHIP(_playerShipId = "playerShipId"))
		(var navalFlags:array = "shipInfo.shipComponent.availableNavalFlags" (event "shipInfo.shipComponent.evCurrentFlagChanged"))
	)

	(style (width = 100%))
	(hblock 
		(style (width = 100%))

		(block
			(class $FullsizeAbsolute)
			(style (backgroundImage = 'url:../service_kit/panel_backgrounds/inner_panel.png') (scale9grid = 3))
		)

		(tf
			(class $TextDefaultBold17NM)
			(style (marginLeft = "L") (marginTop = "S") (marginBottom = "S") (alpha = "TA"))
			(text = 'IDS_NAVAL_FLAGS')
		)
	)

	(hblock
		(style
			(width = 100%) (height = 85px) (paddingLeft = "SXS") (paddingRight = "SXS")
		)
		(controller $Repeat renderer='NavalFlagItem'
			(bind count "navalFlags.length")
			(args
				_navalFlagName = "navalFlags[$index]"
			)
		)
	)
)

(def element EnsignList (_ensignCollection:gfx, _categoryEnsign:number, _isActionsAvailable:bool)
	(scope
		(var ensignInGroup:gfx = "_ensignCollection.getChildByPath('activeEnsigns.byEnsignType.' + toString(_categoryEnsign))" (event "_ensignCollection.evChildAdded") (event "_ensignCollection.evChildRemoved"))
		(var ensignInGroupItems:array = "ensignInGroup.items" (event "ensignInGroup.evAdded") (event "ensignInGroup.evRemoved"))
	)
	(style (width = 100%))

	(tf
		(bind visible "ensignInGroupItems.length")
		(class $ExteriorCategoryLabelMargin)
		(class $TextDefaultBold17NM)
		(style (alpha = "TA"))

		(bind text "tr('IDS_ENSIGN_GROUP_' + toString(_categoryEnsign))")
	)
	(htile
		(class $ExteriorItemsGroup)
		(controller $DynamicRepeat renderer='EnsignItem'
			(bind count "ensignInGroupItems.length")
			(args
				_ensignEntity = "ensignInGroupItems[$index]"
				_isActionsAvailable = "_isActionsAvailable"
			)

			(itemWidth = 84px)
			(itemHeight = 84px)
			(itemOffset = 168px)
			(sharedCache = true)
		)
	)
)

