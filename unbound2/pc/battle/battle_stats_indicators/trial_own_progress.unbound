(def element TrialOwnProgressTaskItem (_trialComponent:dhComponent)
	(scope
		(event evShowTask)
		(event evPlayTimerSound)
		(event evShowBonusScore)
		(event evHideBonusScore)
		(event evStartBonusScoresSubtraction)
		(event evEndBonusScoresSubtraction)
		(event evStartAddingLastBonusToBonus)
		(event evStartBonusToScoresAdding)
		(event evBonusToScoresAddingEnded)
		(event evBonusAnimationEnded)
		(event evAddedToStage)

		(macro BATTLE_TIMER_SCOPE)

		(var battleDataEntity:dhEntity = "getSingleEntity(CC.battleData)")
		(var battleState:number = "battleDataEntity.battleState.battleState" (event "battleDataEntity.battleState.evBattleStateChanged"))

		(var trialComponent:dhComponent = "_trialComponent")
		(var trialType:number = "trialComponent.trialType")
		(var trialTypeName:str = "SC.Battle.DISCIPLINE_TYPES.VALUE_TO_NAME[trialType]")
		(var trialRound:number = "trialComponent.trialRound ?: 0" (event "trialComponent.evTrialInfoChanged"))
		(var trialRoundsCount:number = "trialComponent.trialsCount ?: 0" (event "trialComponent.evTrialInfoChanged"))
		(var phase:number = "trialComponent.phase" (event "trialComponent.evPhaseInfoChanged"))
		(var isCreatedPhase:bool = "phase == SC.Battle.ROUND_STAGE.CREATED")
		(var isActivationPhase:bool = "phase == SC.Battle.ROUND_STAGE.ACTIVATION")
		(var isExecutionPhase:bool = "phase == SC.Battle.ROUND_STAGE.EXECUTION")
		(var isDeactivationPhase:bool = "phase == SC.Battle.ROUND_STAGE.DEACTIVATION")

		(var targetScores:number = "trialComponent.targetScore ?: 0" (event "trialComponent.evTrialInfoChanged"))
		(var playerScores:number = "min(trialComponent.scores, targetScores)" (event "trialComponent.evScoresChanged"))
		(var playerAnimatedScores:number = "0")
		(var playerBonusScores:number = "trialComponent.bonusScores ?: 0" (event "trialComponent.evBonusScoresChanged"))
		(var playerBonusAnimatedScores:number = "0")
		(var progressbarCoef:number = "targetScores !=0 ? min(round(playerAnimatedScores) / targetScores, 1) : 0")

		(var timeToNextPhase:number = 	"trialComponent.timeToNextPhase ?: 0" (event "trialComponent.evPhaseInfoChanged"))
		(var timeLeft:number = "round(timeToNextPhase - currentTime)" (event "trialComponent.evPhaseInfoChanged"))
		(var isTimerRed:bool = "timeLeft < 10 && isExecutionPhase && playerScores < targetScores")

		(var isTimerVisible:bool = "isExecutionPhase && timeLeft > 1 && battleState == SC.Common.CLIENT_BATTLE_STATE.STARTED")

		(var isBonusScoreVisible:bool = "false" watch=false)
		(bind isBonusScoreVisible "true"	init=false (event "evShowBonusScore"))
		(bind isBonusScoreVisible "false"	init=false (event "evHideBonusScore"))

		(var canStartBonusScoresSubtraction:bool = "isActivationPhase && timeLeft < 4 && timeLeft > 1")
		(var isBonusScoresSubtractionInProgress:bool = "false" watch=false)
		(bind isBonusScoresSubtractionInProgress "true"		init=false (event "evStartBonusScoresSubtraction"))
		(bind isBonusScoresSubtractionInProgress "false"	init=false (event "evEndBonusScoresSubtraction"))

		(var isScoresSubstraction:bool = "isExecutionPhase && (playerScores < playerAnimatedScores || playerBonusScores < playerBonusAnimatedScores)")
		(var scoresSubstractionCoef:number = "isScoresSubstraction ? (round(playerAnimatedScores) - playerScores) / targetScores : 0")

		(var isManeuverType:bool = "trialType == SC.Battle.DISCIPLINE_TYPES.MANEUVER")

		(var isBonusScoreDispatchEnabled:bool = "((isExecutionPhase || isDeactivationPhase) && toBool(round(playerAnimatedScores) == targetScores)) && !isBonusScoresSubtractionInProgress")



		(controller $Animation
			(controllerEvents evOnBonusAnimationEnded)
			(controllerEvents evOnBonusAnimationStarted)
			(controllerEvents evOnBonusToScoresAddingEnded)
			(controllerEvents evLastBonusToBonusAddingEnded)

			(bindcall play 
				duration = "max(0.5, 0.03 * sqrt(abs(playerScores-playerAnimatedScores))) * 0.15"
				delay = "isScoresSubstraction ? 0.03 : 0"
				id =' scoresAnimation'
				action = "kill"
				watch = false
				from = "{ playerAnimatedScores: playerAnimatedScores }"
				to = "{ playerAnimatedScores: playerScores }"
				(bind enabled "isExecutionPhase && !isBonusScoresSubtractionInProgress")
				(event "trialComponent.evScoresChanged")
				(event "evAddedToStage")
			)

			(bindcall play 
				duration = "max(0.5, 0.03 * sqrt(abs(playerBonusScores-playerBonusAnimatedScores))) * 0.15"
				id = 'bonusAnimation'
				action = "kill"
				watch = false
				from = "{ playerBonusAnimatedScores: playerBonusAnimatedScores }"
				to = "{ playerBonusAnimatedScores: playerBonusScores }"
				(bind enabled "isExecutionPhase && !isBonusScoresSubtractionInProgress")
				(event "trialComponent.evBonusScoresChanged")
				(event "evAddedToStage")
			)

			(bindcall play 
				duration = "max(0.5, 0.03 * sqrt(playerBonusAnimatedScores)) * 0.15"
				id = 'endRoundBonusScoresSubtraction'
				onStartedEvent = 'evOnBonusAnimationStarted'
				onEndedEvent = 'evOnBonusAnimationEnded'
				action = "kill"
				watch = false
				from = "{ playerBonusAnimatedScores: playerBonusAnimatedScores}"
				to = "{ playerBonusAnimatedScores: 0, playerAnimatedScores: 0}"
				(bind enabled "canStartBonusScoresSubtraction")
				(bind trigger "canStartBonusScoresSubtraction")
			)
			(dispatch evStartBonusScoresSubtraction init=false watch=false on='evOnBonusAnimationStarted') 
			(dispatch evBonusAnimationEnded init=false watch=false on='evOnBonusAnimationEnded')
			(dispatch evHideBonusScore init=false watch=false (bind enabled "isBonusScoreVisible") (event "evBonusAnimationEnded")) 
			(dispatch evStartBonusToScoresAdding init=false watch=false (event "evBonusAnimationEnded")) 

			(bindcall play 
				duration = "max(0.5, 0.03 * sqrt(playerScores)) * 0.15"
				delay=0.15
				id = 'bonusScoresAdding'
				onEndedEvent = 'evOnBonusToScoresAddingEnded'
				action = "kill"
				watch = false
				from = "{ playerAnimatedScores: 0, playerBonusAnimatedScores: 0}"
				to = "{ playerAnimatedScores: playerScores, playerBonusAnimatedScores: 0}"
				(event "evStartBonusToScoresAdding")
			)
			(dispatch evBonusToScoresAddingEnded init=false watch=false on='evOnBonusToScoresAddingEnded')
			(dispatch evShowBonusScore init=false watch=false (bind enabled "toBool(round(playerAnimatedScores) == targetScores) && !isBonusScoreVisible") (event "evBonusToScoresAddingEnded")) 
			(dispatch evEndBonusScoresSubtraction init=false watch=false (bind enabled "toBool(playerBonusScores == 0) && isBonusScoresSubtractionInProgress") (event "evBonusToScoresAddingEnded")) 
			(dispatch evStartAddingLastBonusToBonus init=false watch=false (bind enabled "toBool(playerBonusScores > 0)") (event "evBonusToScoresAddingEnded")) 

			(bindcall play 
				duration = "max(0.5, 0.03 * sqrt(abs(playerBonusScores-playerBonusAnimatedScores))) * 0.15"
				delay=0.15
				id = 'bonusToBonusAnimation'
				onEndedEvent = 'evLastBonusToBonusAddingEnded'
				action = "kill"
				watch = false
				from = "{ playerBonusAnimatedScores: playerBonusAnimatedScores }"
				to = "{ playerBonusAnimatedScores: playerBonusScores }"
				(event "evStartAddingLastBonusToBonus")
			)
			(dispatch "isBonusScoresSubtractionInProgress ? 'evEndBonusScoresSubtraction' : ''" init=false watch=false on='evLastBonusToBonusAddingEnded')
		)
	)

	(style (width = 316px))

	(dispatch evAddedToStage on='addedToStage')

	(dispatch "isBonusScoreVisible ? '' : evShowBonusScore" watch=false (bind enabled "isBonusScoreDispatchEnabled") (bind trigger "playerAnimatedScores"))

	(dispatch evPlayTimerSound init=false (bind enabled "timeLeft >= 0 && timeLeft < 10 && isExecutionPhase") (bind trigger "timeLeft"))
	(bindcall externalCall 'sound.playSetSoundDirect' "['cosmoapril_Timer', 'regular']" (event "evPlayTimerSound"))

	(bindcall externalCall 'sound.playSetSoundDirect' "['trials_bonus', 'regular']" (bind trigger "isBonusScoreVisible"))


	(hblock 
		(style
			(width = 100%)
			(height = 35px)
			(align = "middle")
			(paddingLeft = "SXS")
			(paddingRight = "SXS")
			(marginBottom = 1px)
			(backgroundColor = 0x73000000)
		)

		(tf 
			(class $TextDefaultBold13NM)
			(style
				(alpha = "TS")
				(width = 186px)
			)
			(bind text "toUpper(subst('IDS_TRIAL_ROUNDS_COUNTER', [], { _trialRound: trialRound, _trialRoundsCount: trialRoundsCount}))")
		)

		(block
			(style (width = 100%))
		)

		(block
			(style (alpha = "isTimerVisible ? 1 : 0"))

			(controller $Animation
				(bindcall play
					duration = 0.15
					delay = "isTimerVisible ? 0.5 : 0"
					watch = false
					easing="Easing.cubic_out"
					from = "{alpha: 0}"
					to = "{alpha: 1}"
					reverse="!isTimerVisible"
					(bind trigger "isTimerVisible")
				)
			)
			(tf
				(class $TextDefaultBoldNM)
				(style
					(bind textColor "isTimerRed ? SC.Ui_styles.SERVICE_COLORS.RED : SC.Ui_styles.SERVICE_COLORS.WHITE")
					(marginLeft = "SXS")
				)
				(bind text "countdownFormat(max(0, timeLeft), 0, true)")
			)
		)
	)

	(block 
		(style
			(width = 100%)
			(padding = "SXS")
			(backgroundColor = 0x4d000000)
			(scaleY = 0)
			(alpha = 0)
		)
		(controller $Animation
			(bindcall play
				duration=0.25
				from="{scaleY: 0, alpha: 0}"
				to="{scaleY: 1, alpha: 1}"
				reverse="isBonusScoreVisible"
				on='addedToStage'
			)
		)
		(hblock
			(style (width = 100%))

			(tf
				(class $TextDefaultBoldNM)
				(style
					(width = 186px)
				)
				(bind text "isManeuverType	? tr('IDS_DISCIPLINE_MANEUVER_DESCRIPTION_' + trialRound)
											: tr('IDS_DISCIPLINE_' + trialTypeName + '_DESCRIPTION')")
			)

			(block
				(style (width = 100%))
			)

			(hblock
				(tf
					(class $TextDefaultBoldNM)
					(bind text "formatSeparator(round(playerAnimatedScores))")
				)
				(tf
					(class $TextDefaultBoldNM)
					(style
						(alpha = "TS")
						(marginLeft = 6px)
					)
					(bind text "'/ ' + formatSeparator(targetScores)")
				)
			)
		)

		(element TrialOwnProgressbar
			_progressbarCoef="progressbarCoef"
			_scoresSubstractionCoef="scoresSubstractionCoef"
		)
	)

	(block 
		(style
			(width = 100%)
			(height = 35px)
			(align = "middle")
			(paddingLeft = "SXS")
			(paddingRight = "SXS")
			(backgroundColor = 0x4d000000)
			(scaleY = 0)
			(alpha = 0)
		)
		(controller $Animation
			(bindcall play
				duration=0.25
				from="{scaleY: 0, alpha: 0}"
				to="{scaleY: 1, alpha: 1}"
				reverse="!isBonusScoreVisible"
				on='addedToStage'
			)
		)
		(hblock
			(style (width = 100%))

			(tf
				(class $TextDefaultBoldNM)
				(style
					(width = 186px) 
				)
				(text = 'IDS_BONUS_SCORES')
			)

			(block
				(style (width = 100%))
			)

			(tf
				(class $TextDefaultBoldNM)
				(style
					(bind textColor "playerBonusAnimatedScores > 0	? C_POSITIVE
																	: SC.Ui_styles.SERVICE_COLORS.WHITE")
				)
				(bind text "playerBonusAnimatedScores > 0	? '+ ' + formatSeparator(round(playerBonusAnimatedScores))
															: formatSeparator(round(playerBonusAnimatedScores))")
			)
		)
	)

	(hblock 
		(bind visible "isManeuverType && trialRound > 1")
		(style
			(width = 100%)
			(minHeight = 35px)
			(align = "middle")
			(marginTop = 1px)
			(paddingLeft = "SXS")
			(paddingRight = "SXS")
			(paddingTop = "S")
			(paddingBottom = "S")
			(backgroundColor = 0x4d000000)
		)

		(block
			(style
				(backgroundImage = 'url:../service_kit/icons/icon_condition.png')
				(backgroundSize = "autosize")
				(alpha = 0.75)
			)
		)

		(tf
			(class $TextDefault13NM)
			(style
				(width = 100%)
				(marginLeft = "S")
				(alpha = "TC")
				(leading = -1)
			)
			(text = 'IDS_SCORES_CAN_BE_SUBSTRUCTED')
		)
	)
)

(def element TrialOwnProgressbar (_progressbarCoef:number, _scoresSubstractionCoef:number)
	(scope
		(var scoresSubstractionCoefMax:number = "_scoresSubstractionCoef + _progressbarCoef > 1 ? 1 - _progressbarCoef : _scoresSubstractionCoef")
	)
	(style
		(width = 100%)
		(height = 6px)
		(marginTop = "SXS")
		(flow = "horizontal")
		(backgroundImage = "'url:../battle_hud/markers/convoy_airships/progressbar_frame.png'")
		(scale9grid = 3)
		(padding = 1px)
	)

	(block
		(style
			(bind width "(_progressbarCoef * 100) + '%'")
			(height = 100%)
			(backgroundColor = 0xFFFFC658)
		)
	)
	
	(hblock
		(class $Fullsize)
		(controller $FxInstance lifetime=1
			(renderer = 'ScoresSubstractionIndication')
			(bindcall create init=false (bind trigger "_progressbarCoef") (bind enabled "_scoresSubstractionCoef > 0"))
			(args
				_scoresSubstractionCoef="scoresSubstractionCoefMax"
			)
		)
	)
)

(def element ScoresSubstractionIndication (_scoresSubstractionCoef:number) 
	(class $FullsizeAbsolute)
	(style
		(width = "(_scoresSubstractionCoef * 100) + '%'")
		(backgroundColor = 0xFFFFFFFF)
	)
	(controller $Animation
		(bindcall play
			duration=0.85
			delay= 0.05
			from="{alpha: 1, scaleX: 1}"
			to="{alpha: 0, scaleX: 0}"
			on='addedToStage'
		)
	)
)