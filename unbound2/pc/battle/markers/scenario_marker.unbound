(def element WorldScenarioObjectMarker (_markerEntity:gfx) layout=true
	(scope
		(macro GET_MARKER_ENTITY_COMPONENT 'distance')
		(macro GET_MARKER_ENTITY_COMPONENT 'worldMarkerScale')
		(macro GET_MARKER_ENTITY_COMPONENT 'progress')
		(macro GET_MARKER_ENTITY_COMPONENT 'scenarioObject')
		(macro IS_ON_PLANE)
		(macro GET_SCENARIO_OBJECT_VIEW "scenarioObjectComponent" "_markerEntity")

		(var battleInfoEntity:dhEntity = "getSingleEntity(CC.battleInfo)")
		(var battleTime:number = "battleInfoEntity.battleTimer.battleTime" (event "battleInfoEntity.battleTimer.evBattleTimeChanged"))
		(var countDownTime:number = "_markerEntity.countDown.endTime - battleTime" (event "_markerEntity.countDown.evEndTimeChanged"))
		(var secondsLeft:number ="countDownTime && !_markerEntity.timeToLive.isRemoving ? max(countDownTime, 0) : 0" (event "_markerEntity.timeToLive.evRemove"))
		(var timerText:str = "secondsLeft ? countdownFormat(secondsLeft, 0, true) : ''")

		
		(struct altVisionMode = GET_PREF_STR(_option = "'battle.altVision.mode'"))

		(var cameraEntity:gfx = "$datahub.getSingleEntity(CC.camera)")
		(var isTactical:bool = "cameraEntity.camera.isTactical" (event "cameraEntity.camera.evTacticalStateChanged"))
		(var altVision:bool = "cameraEntity.camera.altVision" (event "cameraEntity.camera.evAltVisionChanged"))
		(var isAdaptiveAltVisionMode:bool = "altVision || AltVisionMode[altVisionMode.value] >= AltVisionMode.ADAPTIVE")
		(var isFullAltVisionMode:bool = "altVision || AltVisionMode[altVisionMode.value] >= AltVisionMode.ENABLED")
		(var distanceIndex:number = "distanceComponent ? distanceComponent.distanceIndex : SC.Battle.DISTANCE_TYPE.NEAR" (event "distanceComponent.evDistanceIndexChanged"))

		(var distanceType:number = "isTactical || isOnPlane		? SC.Battle.DISTANCE_TYPE.TACTICAL :
									isFullAltVisionMode			? SC.Battle.DISTANCE_TYPE.NEAR
																: distanceIndex")

 		(var markerScaleRaw:number = "worldMarkerScaleComponent ? worldMarkerScaleComponent.value : 1" (event "worldMarkerScaleComponent.evValueChanged"))
		(var markerScale:number = "isFullAltVisionMode ? 1 : round(markerScaleRaw*10)/10") 

		(var farAdaptiveAltVisionMode:bool = "isAdaptiveAltVisionMode && distanceType <= SC.Battle.DISTANCE_TYPE.FAR")
		(var distanceItemVisibility:bool = "(!(isIn(distanceType, [SC.Battle.DISTANCE_TYPE.TACTICAL, SC.Battle.DISTANCE_TYPE.FARTHEST])) || isFullAltVisionMode || !worldMarkerScaleComponent)")

		(event evShow)
		(event evHide)
	)

	(dispatch evShow on=addedToStage)
	(dispatch evHide (event "scenarioObjectComponent.evHide"))
	
	(bind scaleX "markerScale")
	(bind scaleY "markerScale")

	(block
		(block
			(style
				(width = 0) (zindex = 3)
				(align = "center|bottom")
			)
			
			(block
				(element TargetAnimationItem "_markerEntity"
					(style
						(position = "absolute")
						(top = 0) (left = 50%)
					)
				)
			)
		)

		(block
			(bind visible "distanceItemVisibility && countDownTime >= 0")
			(style
				(position = "absolute")
				(top = -100%) (width = 0)
				(align = "center|top")
			)
			(tf
				(class $TextDefaultBoldNM)
				(class $TextColorHUDNeutral)
				(bind text "timerText")
			)
		)
		
		(block	
			(style
				(marginTop = "-50%") (marginLeft = "-50%")
				(width = "38px") (height = "38px")(alpha = "0.75")
				(bind backgroundImage "'url:../battle_hud/markers/scenario_markers/scenario_marker_' + toLower(SC.Battle.SCENARIO_MARKER_VALUE.VALUE_TO_NAME[type]) + '.png'")
			)
		)

		
		(block
			(style
				(width = 0)
				(marginTop = "XS")
				(align = "center|top")
			)
			(element DistanceItem "_markerEntity"
				(bind visible "distanceItemVisibility")
			)	
		)

		(controller $Animation
			(bindcall  play
				duration=0.3
				from={alpha: 0, top: 10}
				to={alpha: 1, top: 0}
				easing="Easing.cubic_out"
				(event "evShow")
			)
			(bindcall  play
				duration=0.3
				from={alpha: 1, top: 0}
				to={alpha: 0, top: 10}
				easing="Easing.cubic_out"
				(event "evHide")
			)
		)
	)
)