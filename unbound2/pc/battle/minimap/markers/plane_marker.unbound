
(def constant PLANE_TYPE_TO_STR [
	'scout',
	'bomber',
	'torpedo',
	'fighter',
	'skip',
	'minebomber',
	'emptybomber',
	'auxiliary',
	'auxiliary', 
])

(def element MapSquadronMarker (_markerEntity:gfx, _mapScale:number, _itemScale:number, _scaleRatio:number) layout=true
	(scope
		(var markerYaw:number = "radToGrad(_markerEntity.mapPosition.yaw)" (event "evEnterFrame"))
		(var markerScale:number = "_itemScale / _mapScale")

		(var aircarrier:gfx = "$datahub.getSingleComponent(CC.aircarrier)")
		(var activeSquadron:number = "aircarrier.activeSquadron" (event "aircarrier.evStateChanged"))
		(var isControlledByPlayer:bool = "_markerEntity.ownSquadron && _markerEntity.ownSquadron.id == activeSquadron")

		(var planeTypeInt:number = "_markerEntity.plane.planeType")
		(var markerElement:gfx = "planeTypeInt == SC.Battle.PLANES_TYPES.AIRSHIP ? 'MapMarkerAirshipicon' : 'MapMarkerSquadronIcon'")
		(macro SCOPE_HIGHLIGHT_MARKER_ON_MAP_MOUSE_OVER "_markerEntity")

		(var minimapEntity:gfx = "$datahub.getSingleEntity(CC.minimap)")
		(var minimapComponent:gfx = "minimapEntity.minimap")
		(var angleToRotate:number = "minimapComponent && !isControlledByPlayer ? minimapComponent.rotationAngleDeg : 0" (event "minimapComponent.evRotationAngleDegChanged"))
	)

	(style
		(bind rotation "-(angleToRotate)")
	)

	(controller $Instance (renderer = 'MapMarkerRanges') 
		(bind enabled "isControlledByPlayer")
		(args entity="_markerEntity" mapScale="_mapScale")
	)

	(block
		(macro BIND_FAIR_SCALE "markerScale")
		(macro EFFECT_HIGHLIGHT_MARKER_ON_MOUSE_OVER)
		(controller $Instance
			(bind renderer "markerElement")
			(args "_markerEntity" "markerYaw")
			(bind enabled "_markerEntity != null")
		)
	)
)

(def element MapMarkerAirshipicon (_markerEntity:gfx, _rotation:number) layout=true
	(scope
		(macro GET_MARKER_ENTITY_COMPONENT 'relation')
		(var relationStr:str = "toLower(SC.Battle.PLAYER_RELATION.VALUE_TO_NAME[relationComponent.value])" (event "relationComponent.evChanged"))
		(var markerIcon:str = "'swf:../battle_hud/markers/convoy_airships_svg/convoy_airships_svg.swf:marker_' + relationStr")
	)
	(style
		(width = "24")
		(height = "24")
	)
	(block
		(style
			(width = 0) (height = 0)
			(align = "center|middle")
			(bind rotation "_rotation")
		)

		(block
			(style
				(bind backgroundImage "markerIcon")
				(backgroundSize = "autosize")
			)
		)
	)
)

(def element MapMarkerSquadronIcon (_markerEntity:gfx, _rotation:number) layout=true
	(scope
		(macro GET_MARKER_ENTITY_COMPONENT 'squadron')
		(macro GET_MARKER_ENTITY_COMPONENT 'plane')
		(var planeTypeInt:number = "planeComponent.planeType")
		(var ammoType:number = "planeComponent.ammoType")
		(var ammoTypeName:str = "SC.Common.PLANE_AMMO_TYPES.VALUE_TO_NAME[ammoType]")
		(var isConsumable:bool = "planeComponent.isConsumable && !planeComponent.isAirSupport")
		(var isModified:bool = "planeComponent.isModified")
		(var isSmokePlane:bool = "planeComponent.isSmokePlane")
		(var postfix:str = "isModified		? '_upgrade' :
							isSmokePlane	? '_smoker'
											: ''")

		(var ammoPostfix:str = "ammoTypeName in SC.Common.PLANE_AMMO_TYPES.SHORT_NAMES && !isConsumable	? SC.Common.PLANE_AMMO_TYPES.SHORT_NAMES[ammoTypeName]
																										: ''"
		)

		(var healthComponent:gfx = "_markerEntity.health" (event "_markerEntity.evAdded"))

		(var relationComponent:gfx = "_markerEntity.relation")
		(var isSelf:bool = "relationComponent ? relationComponent.value == SC.Battle.DIPLOMACY_RELATIONS.SELF : false"  (event "relationComponent.evChanged"))
		(var relationName:str = "SC.Battle.PLAYER_RELATION.NAMES[SC.Battle.PLAYER_RELATION.VALUE_TO_NAME[relationComponent.value]]" (event "relationComponent.evChanged"))

		(var aircarrier:gfx = "$datahub.getSingleComponent(CC.aircarrier)")
		(var activeSquadron:number = "aircarrier.activeSquadron" (event "aircarrier.evStateChanged"))
		(var isControlledByPlayer:bool = "_markerEntity.ownSquadron && _markerEntity.ownSquadron.id == activeSquadron")
		(var planeTypeName:str = "PLANE_TYPE_TO_STR[planeTypeInt]")
		(var planeFullName:str = "planeTypeName + ammoPostfix + postfix + '_' + relationName")
		(var planeSubName:str = "	isConsumable				? 'consumables_' :
									planeComponent.isAirSupport	? 'airsupport_'
																: ''")
		(var markerIconPath:str = "'swf:../battle_hud/markers/minimap/plane_svg/plane_svg.swf:' + planeSubName + planeFullName")
	)
	(style
		(position = "absolute")
		(width = 20px) (height = 20px)
		(bind rotation "isSelf && isControlledByPlayer ? _rotation : 0")
	)

	(block
		(bind visible "isControlledByPlayer")
		(style
			(width = 16px) (height = 20px)
			(backgroundImage = 'swf:../battle_hud/markers/minimap/ship/ship_self_svg/ship_self_svg.swf:alive')
		)
	)
	(block
		(bind name "'minimapPlane_' + planeTypeName")
		(bind visible "!isControlledByPlayer")
		(style
			(position = "absolute")
			(width = 20px) (height = 20px)
			(visualOffsetX = -50%) (visualOffsetY = -50%)
			(bind backgroundImage "markerIconPath")
		)
	)
)