(def element LobbyMenu ()
	(macro MODAL_WINDOW_INIT)
	(macro MODAL_WINDOW_BG)
	(scope
		(macro MOUSE_HANDLER_SCOPE)
		(macro MOUSE_HANDLER_SCOPE "'partners_'")

		(var offlineClientEntity:dhEntity = "getSingleEntity(CC.offlineClient)")
		(var isOnline:bool = "!offlineClientEntity")

		(var accountLevelComponent:dhComponent = "getSingleComponent(CC.accountLevel)")
		(var curAccountLevel:number = "accountLevelComponent.level" (event "accountLevelComponent.evLevelChanged"))

		(var loginComponent:dhComponent = "getSingleComponent(CC.loginData)")

		(var gameVersion:str = 					"loginComponent.gameVersion" 				(event "loginComponent.evUpdate"))
		(var isExternalPlatformClient:bool = 	"loginComponent.isExternalPlatformClient" 	(event "loginComponent.evUpdate"))

		(var dockDataComponent:dhComponent = "getSingleComponent(CC.dockData)")
		(var playersOnCurrentRealm:number = "dockDataComponent.playersOnCurrentRealm" (event "dockDataComponent.evPlayersOnCurrentRealmChanged"))
		
		(var realmConstantsComponent:dhComponent = "getSingleEntity(CC.realmConstants).realmConstants")
		(var isShowPlayersCountOnServer:bool = "realmConstantsComponent.isShowPlayersCountOnServer && isOnline")

		(var clientBuildInfoEntity:dhEntity = "getSingleEntity(CC.clientBuildInfo)")
		(var isServerDisconnectButtonVisible:bool = "isOnline && !isExternalPlatformClient && clientBuildInfoEntity.clientBuildInfo.buildConfig == 'hybrid'")

		(var isVisibleTutorialButton:bool = "curAccountLevel > TUTORIAL_BANNER_MAX_LEVEL")
	)
	(style (align = "center"))

	(hblock
		(macro DEFAULT_MODAL_WINDOW_ANIMATION 0)
		(class $FullsizeAbsolute)
		(style (top = "M"))

		(block
			(bind visible "isOnline")
			(style (marginLeft = "{1280:SXS,1920:M}"))
			(name = 'gameVersion')
			(controller $Instance renderer='ClientInfoRowItem'
				(bind enabled "isOnline")
				(args
					_header = "gameVersion"
					_description = 'IDS_VERSION_ON_SERVER'
					_tooltipText = 'IDS_VERSION'
				)
			)
		)

		(block
			(bind visible "isShowPlayersCountOnServer")
			(style (marginLeft = "{1280:MS,1920:L}"))
			(name = 'numPlayers')
			(controller $Instance renderer='ClientInfoRowItem'
				(bind enabled "isShowPlayersCountOnServer")
				(args
					_header = "toString(playersOnCurrentRealm)"
					_description = 'IDS_PLAYERS_ON_SERVER'
					_tooltipText = 'IDS_TOOLTIP_PLAYERS_COUNT_SERVER'
				)
			)
		)

		(block
			(style (position = "absolute") (top = "-XS") (right = "{1280:SXS,1920:M}"))
			(element ModalWindowCloseIcon
				_methods = "[{	type: 'inputMapping.onRequest',
								name: 'returnToBattle',
								args: {}}]"
			)
		)
	)

	(block
		(class $EyeLevelAligned)
		(style (width = 220px))

		(block
			(macro DEFAULT_MODAL_WINDOW_ANIMATION 1)
			(style (width = 100%) (marginBottom = "M"))
			(element ModalWindowShortHeader _header = 'IDS_MENU_HEADER')
		)

		
		(block
			(style (width = 100%))
			(block
				(bind visible "isServerDisconnectButtonVisible")
				(macro DEFAULT_MODAL_WINDOW_ANIMATION 1)
				(style (width = 100%) (marginBottom = "S"))

				(controller $Instance renderer='DefaultButton'
					(bind enabled "isServerDisconnectButtonVisible")
					(args
						_width = 100%
						_label = 'IDS_SERVER_DISCONNECT'
						_name = 'btn_disconnect'
						_focusIndex = 0
					)
				)
			)

			(block
				(macro DEFAULT_MODAL_WINDOW_ANIMATION 1.3)
				(style (width = 100%) (marginBottom = "S"))

				(element DefaultButton
					_width = 100%
					_label = 'IDS_MENU_SETTINGS'
					_name = 'btn_settings'
					_focusIndex = 1
				)
			)

			(block
				(macro DEFAULT_MODAL_WINDOW_ANIMATION 1.6)
				(style (width = 100%) (marginBottom = "S"))

				(element DefaultButton
					_width = 100%
					_label = 'IDS_EXITGAME'
					_name = 'btn_exit_game'
					_focusIndex = 2
				)
			)

			(block
				(macro DEFAULT_MODAL_WINDOW_ANIMATION 1.9)
				(style (width = 100%) (marginTop = "S") (marginBottom = "S"))

				(element DefaultButton
					_width = 100%
					_size = "SIZE.LARGE"
					_label = 'IDS_RETURN_TO_LOBBY'
					_focusIndex = 3
					_defaultFocused = true
					_methods = "[{	type: 'inputMapping.onRequest',
									name: 'returnToBattle',
									args: {}}]"
				)
			)
		)
		
		(block
			(bind visible "isVisibleTutorialButton")
			(macro DEFAULT_MODAL_WINDOW_ANIMATION 2.2)
			(style (width = 100%) (align = "center"))

			(block
				(name = 'TutorialBannerLobbyMenuButton')
				(controller $Instance renderer='BasicTutorial'
					(bind enabled "isVisibleTutorialButton")
				)
			)
		)
	)

	(block
		(bind visible "isOnline")
		(macro DEFAULT_MODAL_WINDOW_ANIMATION 2.5)
		(macro MOUSE_EVENTS_DISPATCHER "'partners_'")
		(macro MOUSE_LMB_EXTERNAL_CALL 'inputMapping.onGui' "['buttonPartners', {}]")

		(style (bottom = "MS") (align = "center") (width = 100%) (position = "absolute"))
		(name = 'buttonPartners')

		(tf
			(class $TextDefaultNM)
			(macro CHANGE_ALPHA_BY_TRIGGER_ANIM _duration="0.1" _fromAlpha=0.75 _toAlpha=0.9 _triggerExpression="partners_rollOver")
			(text = 'IDS_LICENCE_INFO')
		)

		(controller $Tooltip
			(renderer = 'SimpleStatusTooltip')
			(args _text = 'IDS_TOOLTIP_LICENCE_INFO')
			(macro DEFAULT_TOOLTIP_BEHAVIOUR)
		)
	)
)

(def element ClientInfoRowItem (_tooltipText:str = '', _description:str = '', _header:str = '')
	(style (flow = "horizontal") (backgroundColor = "NO_COLOR"))

	(tf
		(class $TextDefaultNM)
		(style (alpha = "TS"))
		(bind text "_description")
	)

	(tf
		(class $TextDefault17NM)
		(style (marginTop = -1px) (alpha = "TC"))
		(bind text "_header")
	)

	(controller $Tooltip
		(renderer = 'SimpleStatusTooltip')
		(args _text = "_tooltipText")
		(macro DEFAULT_TOOLTIP_BEHAVIOUR)
	)
)

(def element BasicTutorial ()
	(scope
		(struct tutorialMigrationTip =			 PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.TUTORIAL_MIGRATION_LOBBY_MENU"))
		(struct tutorialNavigationOldPlayerTip = PULL_GUIDING_TIP(_type = "SC.Context_guiding_tip.TIP_TYPE.TUTORIAL_NAVIGATION_OLD_PLAYER_LOBBY_MENU"))

		(var tutorialMigrationTipId:number = "	tutorialMigrationTip.isActive			? SC.Context_guiding_tip.TIP_TYPE.TUTORIAL_MIGRATION_LOBBY_MENU : 
												tutorialNavigationOldPlayerTip.isActive	? SC.Context_guiding_tip.TIP_TYPE.TUTORIAL_NAVIGATION_OLD_PLAYER_LOBBY_MENU
																						: SC.Context_guiding_tip.TIP_TYPE.NONE")

		(var titorialChainTipId:number = "	tutorialMigrationTip.isActive 				? SC.Context_guiding_tip.TIP_CHAIN_ID.TUTORIAL_MIGRATION :
											tutorialNavigationOldPlayerTip.isActive 	? SC.Context_guiding_tip.TIP_CHAIN_ID.TUTORIAL_NAVIGATION_OLD_PLAYER
																						: SC.Context_guiding_tip.TIP_CHAIN_ID.NONE")

		(var isBasicTutorialTipVisible:bool = "tutorialMigrationTipId != SC.Context_guiding_tip.TIP_TYPE.NONE")
	)
	(bindcall externalCall "tutorialMigrationTip.isActive || tutorialNavigationOldPlayerTip.isActive  ? 'inputMapping.onAction' : ''" 
							"[	'deactivateTipChain', 
								{ tip_chain_id: titorialChainTipId } ]"
							watch=false  on='leftClick')

	(style (width = 220px) (marginTop = "S"))

	(element HorizontalDividerTwoPx)

	(block
		(style (marginTop = 18px) (width = 100%))
		(block
			(name = 'btn_guide')
			(style (width = 100%))
			(element DefaultButton
				_type = "SC.Ui_styles.BUTTON_TYPE.SECONDARY"
				_width = 100%
				_label = 'IDS_DOCK_BANNER_VIDEO_TUTORIALS'
				_methods = "[	{	type: 'inputMapping.onAction',
									name: 'show_guide',
									args: { } },
								{	type: 'sound.playSetSoundDirect',
									name: 'window',
									args: 'open_muted' }]"
			)
		)
	)

	(controller $Instance renderer='GuidingTipHub'
		(bind enabled "isBasicTutorialTipVisible")
		(args
			_tipId = "tutorialMigrationTipId"
			_tipPositioning = "TIP_POSITION_BOTTOM"
			_modalWindowName = 'LobbyMenu'
			_offsetX = "-XXS"
		)
	)
)